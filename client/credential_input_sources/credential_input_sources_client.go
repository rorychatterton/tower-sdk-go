// Code generated by go-swagger; DO NOT EDIT.

package credential_input_sources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new credential input sources API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for credential input sources API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	CredentialInputSourcesCredentialInputSourcesCreate(params *CredentialInputSourcesCredentialInputSourcesCreateParams) (*CredentialInputSourcesCredentialInputSourcesCreateCreated, error)

	CredentialInputSourcesCredentialInputSourcesDelete(params *CredentialInputSourcesCredentialInputSourcesDeleteParams) (*CredentialInputSourcesCredentialInputSourcesDeleteNoContent, error)

	CredentialInputSourcesCredentialInputSourcesList(params *CredentialInputSourcesCredentialInputSourcesListParams) (*CredentialInputSourcesCredentialInputSourcesListOK, error)

	CredentialInputSourcesCredentialInputSourcesPartialUpdate(params *CredentialInputSourcesCredentialInputSourcesPartialUpdateParams) (*CredentialInputSourcesCredentialInputSourcesPartialUpdateOK, error)

	CredentialInputSourcesCredentialInputSourcesRead(params *CredentialInputSourcesCredentialInputSourcesReadParams) (*CredentialInputSourcesCredentialInputSourcesReadOK, error)

	CredentialInputSourcesCredentialInputSourcesUpdate(params *CredentialInputSourcesCredentialInputSourcesUpdateParams) (*CredentialInputSourcesCredentialInputSourcesUpdateOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CredentialInputSourcesCredentialInputSourcesCreate creates a credential input source


Make a POST request to this resource with the following credential input source
fields to create a new credential input source:









* `description`: Optional description of this credential input source. (string, default=`""`)
* `input_field_name`:  (string, required)
* `metadata`:  (json, default=`{}`)
* `target_credential`:  (id, required)
* `source_credential`:  (id, required)
*/
func (a *Client) CredentialInputSourcesCredentialInputSourcesCreate(params *CredentialInputSourcesCredentialInputSourcesCreateParams) (*CredentialInputSourcesCredentialInputSourcesCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCredentialInputSourcesCredentialInputSourcesCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Credential Input Sources_credential_input_sources_create",
		Method:             "POST",
		PathPattern:        "/api/v2/credential_input_sources/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CredentialInputSourcesCredentialInputSourcesCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CredentialInputSourcesCredentialInputSourcesCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Credential Input Sources_credential_input_sources_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CredentialInputSourcesCredentialInputSourcesDelete deletes a credential input source


Make a DELETE request to this resource to delete this credential input source.
*/
func (a *Client) CredentialInputSourcesCredentialInputSourcesDelete(params *CredentialInputSourcesCredentialInputSourcesDeleteParams) (*CredentialInputSourcesCredentialInputSourcesDeleteNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCredentialInputSourcesCredentialInputSourcesDeleteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Credential Input Sources_credential_input_sources_delete",
		Method:             "DELETE",
		PathPattern:        "/api/v2/credential_input_sources/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CredentialInputSourcesCredentialInputSourcesDeleteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CredentialInputSourcesCredentialInputSourcesDeleteNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Credential Input Sources_credential_input_sources_delete: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CredentialInputSourcesCredentialInputSourcesList lists credential input sources


Make a GET request to this resource to retrieve the list of
credential input sources.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of credential input sources
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more credential input source records.

## Results

Each credential input source data structure includes the following fields:

* `id`: Database ID for this credential input source. (integer)
* `type`: Data type for this credential input source. (choice)
* `url`: URL for this credential input source. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this credential input source was created. (datetime)
* `modified`: Timestamp when this credential input source was last modified. (datetime)
* `description`: Optional description of this credential input source. (string)
* `input_field_name`:  (string)
* `metadata`:  (json)
* `target_credential`:  (id)
* `source_credential`:  (id)



## Sorting

To specify that credential input sources are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) CredentialInputSourcesCredentialInputSourcesList(params *CredentialInputSourcesCredentialInputSourcesListParams) (*CredentialInputSourcesCredentialInputSourcesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCredentialInputSourcesCredentialInputSourcesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Credential Input Sources_credential_input_sources_list",
		Method:             "GET",
		PathPattern:        "/api/v2/credential_input_sources/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CredentialInputSourcesCredentialInputSourcesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CredentialInputSourcesCredentialInputSourcesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Credential Input Sources_credential_input_sources_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CredentialInputSourcesCredentialInputSourcesPartialUpdate updates a credential input source


Make a PUT or PATCH request to this resource to update this
credential input source.  The following fields may be modified:









* `description`: Optional description of this credential input source. (string, default=`""`)
* `input_field_name`:  (string, required)
* `metadata`:  (json, default=`{}`)
* `target_credential`:  (id, required)
* `source_credential`:  (id, required)








For a PATCH request, include only the fields that are being modified.
*/
func (a *Client) CredentialInputSourcesCredentialInputSourcesPartialUpdate(params *CredentialInputSourcesCredentialInputSourcesPartialUpdateParams) (*CredentialInputSourcesCredentialInputSourcesPartialUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCredentialInputSourcesCredentialInputSourcesPartialUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Credential Input Sources_credential_input_sources_partial_update",
		Method:             "PATCH",
		PathPattern:        "/api/v2/credential_input_sources/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CredentialInputSourcesCredentialInputSourcesPartialUpdateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CredentialInputSourcesCredentialInputSourcesPartialUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Credential Input Sources_credential_input_sources_partial_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CredentialInputSourcesCredentialInputSourcesRead retrieves a credential input source


Make GET request to this resource to retrieve a single credential input source
record containing the following fields:

* `id`: Database ID for this credential input source. (integer)
* `type`: Data type for this credential input source. (choice)
* `url`: URL for this credential input source. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this credential input source was created. (datetime)
* `modified`: Timestamp when this credential input source was last modified. (datetime)
* `description`: Optional description of this credential input source. (string)
* `input_field_name`:  (string)
* `metadata`:  (json)
* `target_credential`:  (id)
* `source_credential`:  (id)
*/
func (a *Client) CredentialInputSourcesCredentialInputSourcesRead(params *CredentialInputSourcesCredentialInputSourcesReadParams) (*CredentialInputSourcesCredentialInputSourcesReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCredentialInputSourcesCredentialInputSourcesReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Credential Input Sources_credential_input_sources_read",
		Method:             "GET",
		PathPattern:        "/api/v2/credential_input_sources/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CredentialInputSourcesCredentialInputSourcesReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CredentialInputSourcesCredentialInputSourcesReadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Credential Input Sources_credential_input_sources_read: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CredentialInputSourcesCredentialInputSourcesUpdate updates a credential input source


Make a PUT or PATCH request to this resource to update this
credential input source.  The following fields may be modified:









* `description`: Optional description of this credential input source. (string, default=`""`)
* `input_field_name`:  (string, required)
* `metadata`:  (json, default=`{}`)
* `target_credential`:  (id, required)
* `source_credential`:  (id, required)






For a PUT request, include **all** fields in the request.
*/
func (a *Client) CredentialInputSourcesCredentialInputSourcesUpdate(params *CredentialInputSourcesCredentialInputSourcesUpdateParams) (*CredentialInputSourcesCredentialInputSourcesUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCredentialInputSourcesCredentialInputSourcesUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Credential Input Sources_credential_input_sources_update",
		Method:             "PUT",
		PathPattern:        "/api/v2/credential_input_sources/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CredentialInputSourcesCredentialInputSourcesUpdateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CredentialInputSourcesCredentialInputSourcesUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Credential Input Sources_credential_input_sources_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
