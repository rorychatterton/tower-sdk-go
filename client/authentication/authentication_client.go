// Code generated by go-swagger; DO NOT EDIT.

package authentication

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new authentication API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for authentication API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	AuthenticationApplicationsActivityStreamList(params *AuthenticationApplicationsActivityStreamListParams) (*AuthenticationApplicationsActivityStreamListOK, error)

	AuthenticationApplicationsCreate0(params *AuthenticationApplicationsCreate0Params) (*AuthenticationApplicationsCreate0Created, error)

	AuthenticationApplicationsDelete0(params *AuthenticationApplicationsDelete0Params) (*AuthenticationApplicationsDelete0NoContent, error)

	AuthenticationApplicationsList0(params *AuthenticationApplicationsList0Params) (*AuthenticationApplicationsList0OK, error)

	AuthenticationApplicationsPartialUpdate0(params *AuthenticationApplicationsPartialUpdate0Params) (*AuthenticationApplicationsPartialUpdate0OK, error)

	AuthenticationApplicationsRead0(params *AuthenticationApplicationsRead0Params) (*AuthenticationApplicationsRead0OK, error)

	AuthenticationApplicationsTokensCreate0(params *AuthenticationApplicationsTokensCreate0Params) (*AuthenticationApplicationsTokensCreate0Created, error)

	AuthenticationApplicationsTokensList0(params *AuthenticationApplicationsTokensList0Params) (*AuthenticationApplicationsTokensList0OK, error)

	AuthenticationApplicationsUpdate0(params *AuthenticationApplicationsUpdate0Params) (*AuthenticationApplicationsUpdate0OK, error)

	AuthenticationoList(params *AuthenticationoListParams) (*AuthenticationOListOK, error)

	AuthenticationTokensActivityStreamList(params *AuthenticationTokensActivityStreamListParams) (*AuthenticationTokensActivityStreamListOK, error)

	AuthenticationTokensCreate0(params *AuthenticationTokensCreate0Params) (*AuthenticationTokensCreate0Created, error)

	AuthenticationTokensDelete(params *AuthenticationTokensDeleteParams) (*AuthenticationTokensDeleteNoContent, error)

	AuthenticationTokensList0(params *AuthenticationTokensList0Params) (*AuthenticationTokensList0OK, error)

	AuthenticationTokensPartialUpdate(params *AuthenticationTokensPartialUpdateParams) (*AuthenticationTokensPartialUpdateOK, error)

	AuthenticationTokensRead(params *AuthenticationTokensReadParams) (*AuthenticationTokensReadOK, error)

	AuthenticationTokensUpdate(params *AuthenticationTokensUpdateParams) (*AuthenticationTokensUpdateOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  AuthenticationApplicationsActivityStreamList lists activity streams for an application


Make a GET request to this resource to retrieve a list of
activity streams associated with the selected
application.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of activity streams
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more activity stream records.

## Results

Each activity stream data structure includes the following fields:

* `id`: Database ID for this activity stream. (integer)
* `type`: Data type for this activity stream. (choice)
* `url`: URL for this activity stream. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `timestamp`:  (datetime)
* `operation`: The action taken with respect to the given object(s). (choice)
    - `create`: Entity Created
    - `update`: Entity Updated
    - `delete`: Entity Deleted
    - `associate`: Entity Associated with another Entity
    - `disassociate`: Entity was Disassociated with another Entity
* `changes`: A summary of the new and changed values when an object is created, updated, or deleted (json)
* `object1`: For create, update, and delete events this is the object type that was affected. For associate and disassociate events this is the object type associated or disassociated with object2. (string)
* `object2`: Unpopulated for create, update, and delete events. For associate and disassociate events this is the object type that object1 is being associated with. (string)
* `object_association`: When present, shows the field name of the role or relationship that changed. (field)
* `action_node`: The cluster node the activity took place on. (string)
* `object_type`: When present, shows the model on which the role or relationship was defined. (field)



## Sorting

To specify that activity streams are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) AuthenticationApplicationsActivityStreamList(params *AuthenticationApplicationsActivityStreamListParams) (*AuthenticationApplicationsActivityStreamListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAuthenticationApplicationsActivityStreamListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Authentication_applications_activity_stream_list",
		Method:             "GET",
		PathPattern:        "/api/v2/applications/{id}/activity_stream/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AuthenticationApplicationsActivityStreamListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AuthenticationApplicationsActivityStreamListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Authentication_applications_activity_stream_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AuthenticationApplicationsCreate0 creates an application


Make a POST request to this resource with the following application
fields to create a new application:









* `name`: Name of this application. (string, required)
* `description`: Optional description of this application. (string, default=`""`)


* `client_type`: Set to Public or Confidential depending on how secure the client device is. (choice, required)
    - `confidential`: Confidential
    - `public`: Public
* `redirect_uris`: Allowed URIs list, space separated (string, default=`""`)
* `authorization_grant_type`: The Grant type the user must use for acquire tokens for this application. (choice, required)
    - `authorization-code`: Authorization code
    - `password`: Resource owner password-based
* `skip_authorization`: Set True to skip authorization step for completely trusted applications. (boolean, default=`False`)
* `organization`: Organization containing this application. (id, required)
*/
func (a *Client) AuthenticationApplicationsCreate0(params *AuthenticationApplicationsCreate0Params) (*AuthenticationApplicationsCreate0Created, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAuthenticationApplicationsCreate0Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Authentication_applications_create_0",
		Method:             "POST",
		PathPattern:        "/api/v2/applications/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AuthenticationApplicationsCreate0Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AuthenticationApplicationsCreate0Created)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Authentication_applications_create_0: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AuthenticationApplicationsDelete0 deletes an application


Make a DELETE request to this resource to delete this application.
*/
func (a *Client) AuthenticationApplicationsDelete0(params *AuthenticationApplicationsDelete0Params) (*AuthenticationApplicationsDelete0NoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAuthenticationApplicationsDelete0Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Authentication_applications_delete_0",
		Method:             "DELETE",
		PathPattern:        "/api/v2/applications/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AuthenticationApplicationsDelete0Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AuthenticationApplicationsDelete0NoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Authentication_applications_delete_0: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AuthenticationApplicationsList0 lists applications


Make a GET request to this resource to retrieve the list of
applications.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of applications
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more application records.

## Results

Each application data structure includes the following fields:

* `id`: Database ID for this application. (integer)
* `type`: Data type for this application. (choice)
* `url`: URL for this application. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this application was created. (datetime)
* `modified`: Timestamp when this application was last modified. (datetime)
* `name`: Name of this application. (string)
* `description`: Optional description of this application. (string)
* `client_id`:  (string)
* `client_secret`: Used for more stringent verification of access to an application when creating a token. (string)
* `client_type`: Set to Public or Confidential depending on how secure the client device is. (choice)
    - `confidential`: Confidential
    - `public`: Public
* `redirect_uris`: Allowed URIs list, space separated (string)
* `authorization_grant_type`: The Grant type the user must use for acquire tokens for this application. (choice)
    - `authorization-code`: Authorization code
    - `password`: Resource owner password-based
* `skip_authorization`: Set True to skip authorization step for completely trusted applications. (boolean)
* `organization`: Organization containing this application. (id)



## Sorting

To specify that applications are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) AuthenticationApplicationsList0(params *AuthenticationApplicationsList0Params) (*AuthenticationApplicationsList0OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAuthenticationApplicationsList0Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Authentication_applications_list_0",
		Method:             "GET",
		PathPattern:        "/api/v2/applications/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AuthenticationApplicationsList0Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AuthenticationApplicationsList0OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Authentication_applications_list_0: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AuthenticationApplicationsPartialUpdate0 updates an application


Make a PUT or PATCH request to this resource to update this
application.  The following fields may be modified:









* `name`: Name of this application. (string, required)
* `description`: Optional description of this application. (string, default=`""`)


* `client_type`: Set to Public or Confidential depending on how secure the client device is. (choice, required)
    - `confidential`: Confidential
    - `public`: Public
* `redirect_uris`: Allowed URIs list, space separated (string, default=`""`)
* `authorization_grant_type`: The Grant type the user must use for acquire tokens for this application. (choice, required)
    - `authorization-code`: Authorization code
    - `password`: Resource owner password-based
* `skip_authorization`: Set True to skip authorization step for completely trusted applications. (boolean, default=`False`)
* `organization`: Organization containing this application. (id, required)








For a PATCH request, include only the fields that are being modified.
*/
func (a *Client) AuthenticationApplicationsPartialUpdate0(params *AuthenticationApplicationsPartialUpdate0Params) (*AuthenticationApplicationsPartialUpdate0OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAuthenticationApplicationsPartialUpdate0Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Authentication_applications_partial_update_0",
		Method:             "PATCH",
		PathPattern:        "/api/v2/applications/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AuthenticationApplicationsPartialUpdate0Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AuthenticationApplicationsPartialUpdate0OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Authentication_applications_partial_update_0: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AuthenticationApplicationsRead0 retrieves an application


Make GET request to this resource to retrieve a single application
record containing the following fields:

* `id`: Database ID for this application. (integer)
* `type`: Data type for this application. (choice)
* `url`: URL for this application. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this application was created. (datetime)
* `modified`: Timestamp when this application was last modified. (datetime)
* `name`: Name of this application. (string)
* `description`: Optional description of this application. (string)
* `client_id`:  (string)
* `client_secret`: Used for more stringent verification of access to an application when creating a token. (string)
* `client_type`: Set to Public or Confidential depending on how secure the client device is. (choice)
    - `confidential`: Confidential
    - `public`: Public
* `redirect_uris`: Allowed URIs list, space separated (string)
* `authorization_grant_type`: The Grant type the user must use for acquire tokens for this application. (choice)
    - `authorization-code`: Authorization code
    - `password`: Resource owner password-based
* `skip_authorization`: Set True to skip authorization step for completely trusted applications. (boolean)
* `organization`: Organization containing this application. (id)
*/
func (a *Client) AuthenticationApplicationsRead0(params *AuthenticationApplicationsRead0Params) (*AuthenticationApplicationsRead0OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAuthenticationApplicationsRead0Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Authentication_applications_read_0",
		Method:             "GET",
		PathPattern:        "/api/v2/applications/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AuthenticationApplicationsRead0Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AuthenticationApplicationsRead0OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Authentication_applications_read_0: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AuthenticationApplicationsTokensCreate0 creates an access token for an application


Make a POST request to this resource with the following access token
fields to create a new access token associated with this
application.









* `description`: Optional description of this access token. (string, default=`""`)





* `scope`: Allowed scopes, further restricts user&#39;s permissions. Must be a simple space-separated string with allowed scopes [&#39;read&#39;, &#39;write&#39;]. (string, default=`"write"`)
*/
func (a *Client) AuthenticationApplicationsTokensCreate0(params *AuthenticationApplicationsTokensCreate0Params) (*AuthenticationApplicationsTokensCreate0Created, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAuthenticationApplicationsTokensCreate0Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Authentication_applications_tokens_create_0",
		Method:             "POST",
		PathPattern:        "/api/v2/applications/{id}/tokens/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AuthenticationApplicationsTokensCreate0Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AuthenticationApplicationsTokensCreate0Created)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Authentication_applications_tokens_create_0: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AuthenticationApplicationsTokensList0 lists access tokens for an application


Make a GET request to this resource to retrieve a list of
access tokens associated with the selected
application.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of access tokens
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more access token records.

## Results

Each access token data structure includes the following fields:

* `id`: Database ID for this access token. (integer)
* `type`: Data type for this access token. (choice)
* `url`: URL for this access token. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this access token was created. (datetime)
* `modified`: Timestamp when this access token was last modified. (datetime)
* `description`: Optional description of this access token. (string)
* `user`: The user representing the token owner (id)
* `token`:  (string)
* `refresh_token`:  (field)
* `application`:  (id)
* `expires`:  (datetime)
* `scope`: Allowed scopes, further restricts user&#39;s permissions. Must be a simple space-separated string with allowed scopes [&#39;read&#39;, &#39;write&#39;]. (string)



## Sorting

To specify that access tokens are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) AuthenticationApplicationsTokensList0(params *AuthenticationApplicationsTokensList0Params) (*AuthenticationApplicationsTokensList0OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAuthenticationApplicationsTokensList0Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Authentication_applications_tokens_list_0",
		Method:             "GET",
		PathPattern:        "/api/v2/applications/{id}/tokens/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AuthenticationApplicationsTokensList0Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AuthenticationApplicationsTokensList0OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Authentication_applications_tokens_list_0: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AuthenticationApplicationsUpdate0 updates an application


Make a PUT or PATCH request to this resource to update this
application.  The following fields may be modified:









* `name`: Name of this application. (string, required)
* `description`: Optional description of this application. (string, default=`""`)


* `client_type`: Set to Public or Confidential depending on how secure the client device is. (choice, required)
    - `confidential`: Confidential
    - `public`: Public
* `redirect_uris`: Allowed URIs list, space separated (string, default=`""`)
* `authorization_grant_type`: The Grant type the user must use for acquire tokens for this application. (choice, required)
    - `authorization-code`: Authorization code
    - `password`: Resource owner password-based
* `skip_authorization`: Set True to skip authorization step for completely trusted applications. (boolean, default=`False`)
* `organization`: Organization containing this application. (id, required)






For a PUT request, include **all** fields in the request.
*/
func (a *Client) AuthenticationApplicationsUpdate0(params *AuthenticationApplicationsUpdate0Params) (*AuthenticationApplicationsUpdate0OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAuthenticationApplicationsUpdate0Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Authentication_applications_update_0",
		Method:             "PUT",
		PathPattern:        "/api/v2/applications/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AuthenticationApplicationsUpdate0Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AuthenticationApplicationsUpdate0OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Authentication_applications_update_0: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AuthenticationoList tokens handling using o auth2


This page lists OAuth 2 utility endpoints used for authorization, token refresh and revoke.
Note endpoints other than `/api/o/authorize/` are not meant to be used in browsers and do not
support HTTP GET. The endpoints here strictly follow
[RFC specs for OAuth2](https://tools.ietf.org/html/rfc6749), so please use that for detailed
reference. Note AWX net location default to `http://localhost:8013` in examples:


## Create Token for an Application using Authorization code grant type
Given an application "AuthCodeApp" of grant type `authorization-code`,
from the client app, the user makes a GET to the Authorize endpoint with

* `response_type`
* `client_id`
* `redirect_uris`
* `scope`

AWX will respond with the authorization `code` and `state`
to the redirect_uri specified in the application. The client application will then make a POST to the
`api/o/token/` endpoint on AWX with

* `code`
* `client_id`
* `client_secret`
* `grant_type`
* `redirect_uri`

AWX will respond with the `access_token`, `token_type`, `refresh_token`, and `expires_in`. For more
information on testing this flow, refer to [django-oauth-toolkit](http://django-oauth-toolkit.readthedocs.io/en/latest/tutorial/tutorial_01.html#test-your-authorization-server).


## Create Token for an Application using Password grant type

Log in is not required for `password` grant type, so a simple `curl` can be used to acquire a personal access token
via `/api/o/token/` with

* `grant_type`: Required to be "password"
* `username`
* `password`
* `client_id`: Associated application must have grant_type "password"
* `client_secret`

For example:

```bash
curl -X POST \
  -H "Content-Type: application/x-www-form-urlencoded" \
  -d "grant_type=password&username=<username>&password=<password>&scope=read" \
  -u "gwSPoasWSdNkMDtBN3Hu2WYQpPWCO9SwUEsKK22l:fI6ZpfocHYBGfm1tP92r0yIgCyfRdDQt0Tos9L8a4fNsJjQQMwp9569e
IaUBsaVDgt2eiwOGe0bg5m5vCSstClZmtdy359RVx2rQK5YlIWyPlrolpt2LEpVeKXWaiybo" \
  http://localhost:8013/api/o/token/ -i
```
In the above post request, parameters `username` and `password` are username and password of the related
AWX user of the underlying application, and the authentication information is of format
`<client_id>:<client_secret>`, where `client_id` and `client_secret` are the corresponding fields of
underlying application.

Upon success, access token, refresh token and other information are given in the response body in JSON
*/
func (a *Client) AuthenticationoList(params *AuthenticationoListParams) (*AuthenticationOListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAuthenticationoListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Authentication_o_list",
		Method:             "GET",
		PathPattern:        "/api/o/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AuthenticationoListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AuthenticationOListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Authentication_o_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AuthenticationTokensActivityStreamList lists activity streams for an access token


Make a GET request to this resource to retrieve a list of
activity streams associated with the selected
access token.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of activity streams
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more activity stream records.

## Results

Each activity stream data structure includes the following fields:

* `id`: Database ID for this activity stream. (integer)
* `type`: Data type for this activity stream. (choice)
* `url`: URL for this activity stream. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `timestamp`:  (datetime)
* `operation`: The action taken with respect to the given object(s). (choice)
    - `create`: Entity Created
    - `update`: Entity Updated
    - `delete`: Entity Deleted
    - `associate`: Entity Associated with another Entity
    - `disassociate`: Entity was Disassociated with another Entity
* `changes`: A summary of the new and changed values when an object is created, updated, or deleted (json)
* `object1`: For create, update, and delete events this is the object type that was affected. For associate and disassociate events this is the object type associated or disassociated with object2. (string)
* `object2`: Unpopulated for create, update, and delete events. For associate and disassociate events this is the object type that object1 is being associated with. (string)
* `object_association`: When present, shows the field name of the role or relationship that changed. (field)
* `action_node`: The cluster node the activity took place on. (string)
* `object_type`: When present, shows the model on which the role or relationship was defined. (field)



## Sorting

To specify that activity streams are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) AuthenticationTokensActivityStreamList(params *AuthenticationTokensActivityStreamListParams) (*AuthenticationTokensActivityStreamListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAuthenticationTokensActivityStreamListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Authentication_tokens_activity_stream_list",
		Method:             "GET",
		PathPattern:        "/api/v2/tokens/{id}/activity_stream/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AuthenticationTokensActivityStreamListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AuthenticationTokensActivityStreamListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Authentication_tokens_activity_stream_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AuthenticationTokensCreate0 creates an access token


Make a POST request to this resource with the following access token
fields to create a new access token:









* `description`: Optional description of this access token. (string, default=`""`)



* `application`:  (id, default=``)

* `scope`: Allowed scopes, further restricts user&#39;s permissions. Must be a simple space-separated string with allowed scopes [&#39;read&#39;, &#39;write&#39;]. (string, default=`"write"`)
*/
func (a *Client) AuthenticationTokensCreate0(params *AuthenticationTokensCreate0Params) (*AuthenticationTokensCreate0Created, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAuthenticationTokensCreate0Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Authentication_tokens_create_0",
		Method:             "POST",
		PathPattern:        "/api/v2/tokens/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AuthenticationTokensCreate0Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AuthenticationTokensCreate0Created)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Authentication_tokens_create_0: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AuthenticationTokensDelete deletes an access token


Make a DELETE request to this resource to delete this access token.
*/
func (a *Client) AuthenticationTokensDelete(params *AuthenticationTokensDeleteParams) (*AuthenticationTokensDeleteNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAuthenticationTokensDeleteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Authentication_tokens_delete",
		Method:             "DELETE",
		PathPattern:        "/api/v2/tokens/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AuthenticationTokensDeleteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AuthenticationTokensDeleteNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Authentication_tokens_delete: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AuthenticationTokensList0 lists access tokens


Make a GET request to this resource to retrieve the list of
access tokens.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of access tokens
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more access token records.

## Results

Each access token data structure includes the following fields:

* `id`: Database ID for this access token. (integer)
* `type`: Data type for this access token. (choice)
* `url`: URL for this access token. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this access token was created. (datetime)
* `modified`: Timestamp when this access token was last modified. (datetime)
* `description`: Optional description of this access token. (string)
* `user`: The user representing the token owner (id)
* `token`:  (string)
* `refresh_token`:  (field)
* `application`:  (id)
* `expires`:  (datetime)
* `scope`: Allowed scopes, further restricts user&#39;s permissions. Must be a simple space-separated string with allowed scopes [&#39;read&#39;, &#39;write&#39;]. (string)



## Sorting

To specify that access tokens are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) AuthenticationTokensList0(params *AuthenticationTokensList0Params) (*AuthenticationTokensList0OK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAuthenticationTokensList0Params()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Authentication_tokens_list_0",
		Method:             "GET",
		PathPattern:        "/api/v2/tokens/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AuthenticationTokensList0Reader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AuthenticationTokensList0OK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Authentication_tokens_list_0: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AuthenticationTokensPartialUpdate updates an access token


Make a PUT or PATCH request to this resource to update this
access token.  The following fields may be modified:









* `description`: Optional description of this access token. (string, default=`""`)





* `scope`: Allowed scopes, further restricts user&#39;s permissions. Must be a simple space-separated string with allowed scopes [&#39;read&#39;, &#39;write&#39;]. (string, default=`"write"`)








For a PATCH request, include only the fields that are being modified.
*/
func (a *Client) AuthenticationTokensPartialUpdate(params *AuthenticationTokensPartialUpdateParams) (*AuthenticationTokensPartialUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAuthenticationTokensPartialUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Authentication_tokens_partial_update",
		Method:             "PATCH",
		PathPattern:        "/api/v2/tokens/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AuthenticationTokensPartialUpdateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AuthenticationTokensPartialUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Authentication_tokens_partial_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AuthenticationTokensRead retrieves an access token


Make GET request to this resource to retrieve a single access token
record containing the following fields:

* `id`: Database ID for this access token. (integer)
* `type`: Data type for this access token. (choice)
* `url`: URL for this access token. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this access token was created. (datetime)
* `modified`: Timestamp when this access token was last modified. (datetime)
* `description`: Optional description of this access token. (string)
* `user`: The user representing the token owner (id)
* `token`:  (string)
* `refresh_token`:  (field)
* `application`:  (id)
* `expires`:  (datetime)
* `scope`: Allowed scopes, further restricts user&#39;s permissions. Must be a simple space-separated string with allowed scopes [&#39;read&#39;, &#39;write&#39;]. (string)
*/
func (a *Client) AuthenticationTokensRead(params *AuthenticationTokensReadParams) (*AuthenticationTokensReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAuthenticationTokensReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Authentication_tokens_read",
		Method:             "GET",
		PathPattern:        "/api/v2/tokens/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AuthenticationTokensReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AuthenticationTokensReadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Authentication_tokens_read: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  AuthenticationTokensUpdate updates an access token


Make a PUT or PATCH request to this resource to update this
access token.  The following fields may be modified:









* `description`: Optional description of this access token. (string, default=`""`)





* `scope`: Allowed scopes, further restricts user&#39;s permissions. Must be a simple space-separated string with allowed scopes [&#39;read&#39;, &#39;write&#39;]. (string, default=`"write"`)






For a PUT request, include **all** fields in the request.
*/
func (a *Client) AuthenticationTokensUpdate(params *AuthenticationTokensUpdateParams) (*AuthenticationTokensUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewAuthenticationTokensUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Authentication_tokens_update",
		Method:             "PUT",
		PathPattern:        "/api/v2/tokens/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &AuthenticationTokensUpdateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*AuthenticationTokensUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Authentication_tokens_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
