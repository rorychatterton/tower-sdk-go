// Code generated by go-swagger; DO NOT EDIT.

package system_jobs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new system jobs API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for system jobs API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	SystemJobsSystemJobsCancelCreate(params *SystemJobsSystemJobsCancelCreateParams) (*SystemJobsSystemJobsCancelCreateCreated, error)

	SystemJobsSystemJobsCancelRead(params *SystemJobsSystemJobsCancelReadParams) (*SystemJobsSystemJobsCancelReadOK, error)

	SystemJobsSystemJobsDelete(params *SystemJobsSystemJobsDeleteParams) (*SystemJobsSystemJobsDeleteNoContent, error)

	SystemJobsSystemJobsEventsList(params *SystemJobsSystemJobsEventsListParams) (*SystemJobsSystemJobsEventsListOK, error)

	SystemJobsSystemJobsList(params *SystemJobsSystemJobsListParams) (*SystemJobsSystemJobsListOK, error)

	SystemJobsSystemJobsNotificationsList(params *SystemJobsSystemJobsNotificationsListParams) (*SystemJobsSystemJobsNotificationsListOK, error)

	SystemJobsSystemJobsRead(params *SystemJobsSystemJobsReadParams) (*SystemJobsSystemJobsReadOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  SystemJobsSystemJobsCancelCreate retrieves a system job


Make GET request to this resource to retrieve a single system job
record containing the following fields:

* `can_cancel`:  (boolean)
*/
func (a *Client) SystemJobsSystemJobsCancelCreate(params *SystemJobsSystemJobsCancelCreateParams) (*SystemJobsSystemJobsCancelCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemJobsSystemJobsCancelCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Jobs_system_jobs_cancel_create",
		Method:             "POST",
		PathPattern:        "/api/v2/system_jobs/{id}/cancel/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemJobsSystemJobsCancelCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemJobsSystemJobsCancelCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Jobs_system_jobs_cancel_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemJobsSystemJobsCancelRead retrieves a system job


Make GET request to this resource to retrieve a single system job
record containing the following fields:

* `can_cancel`:  (boolean)
*/
func (a *Client) SystemJobsSystemJobsCancelRead(params *SystemJobsSystemJobsCancelReadParams) (*SystemJobsSystemJobsCancelReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemJobsSystemJobsCancelReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Jobs_system_jobs_cancel_read",
		Method:             "GET",
		PathPattern:        "/api/v2/system_jobs/{id}/cancel/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemJobsSystemJobsCancelReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemJobsSystemJobsCancelReadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Jobs_system_jobs_cancel_read: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemJobsSystemJobsDelete deletes a system job


Make a DELETE request to this resource to delete this system job.
*/
func (a *Client) SystemJobsSystemJobsDelete(params *SystemJobsSystemJobsDeleteParams) (*SystemJobsSystemJobsDeleteNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemJobsSystemJobsDeleteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Jobs_system_jobs_delete",
		Method:             "DELETE",
		PathPattern:        "/api/v2/system_jobs/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemJobsSystemJobsDeleteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemJobsSystemJobsDeleteNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Jobs_system_jobs_delete: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemJobsSystemJobsEventsList lists system job events for a system job


Make a GET request to this resource to retrieve a list of
system job events associated with the selected
system job.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of system job events
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more system job event records.

## Results

Each system job event data structure includes the following fields:

* `id`: Database ID for this system job event. (integer)
* `type`: Data type for this system job event. (choice)
* `url`: URL for this system job event. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this system job event was created. (datetime)
* `modified`: Timestamp when this system job event was last modified. (datetime)
* `event`:  (field)
* `counter`:  (integer)
* `event_display`:  (string)
* `event_data`:  (json)
* `failed`:  (field)
* `changed`:  (field)
* `uuid`:  (string)
* `stdout`:  (string)
* `start_line`:  (integer)
* `end_line`:  (integer)
* `verbosity`:  (integer)
* `system_job`:  (id)



## Sorting

To specify that system job events are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) SystemJobsSystemJobsEventsList(params *SystemJobsSystemJobsEventsListParams) (*SystemJobsSystemJobsEventsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemJobsSystemJobsEventsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Jobs_system_jobs_events_list",
		Method:             "GET",
		PathPattern:        "/api/v2/system_jobs/{id}/events/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemJobsSystemJobsEventsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemJobsSystemJobsEventsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Jobs_system_jobs_events_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemJobsSystemJobsList lists system jobs


Make a GET request to this resource to retrieve the list of
system jobs.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of system jobs
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more system job records.

## Results

Each system job data structure includes the following fields:

* `id`: Database ID for this system job. (integer)
* `type`: Data type for this system job. (choice)
* `url`: URL for this system job. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this system job was created. (datetime)
* `modified`: Timestamp when this system job was last modified. (datetime)
* `name`: Name of this system job. (string)
* `description`: Optional description of this system job. (string)
* `unified_job_template`:  (id)
* `launch_type`:  (choice)
    - `manual`: Manual
    - `relaunch`: Relaunch
    - `callback`: Callback
    - `scheduled`: Scheduled
    - `dependency`: Dependency
    - `workflow`: Workflow
    - `webhook`: Webhook
    - `sync`: Sync
    - `scm`: SCM Update
* `status`:  (choice)
    - `new`: New
    - `pending`: Pending
    - `waiting`: Waiting
    - `running`: Running
    - `successful`: Successful
    - `failed`: Failed
    - `error`: Error
    - `canceled`: Canceled
* `failed`:  (boolean)
* `started`: The date and time the job was queued for starting. (datetime)
* `finished`: The date and time the job finished execution. (datetime)
* `canceled_on`: The date and time when the cancel request was sent. (datetime)
* `elapsed`: Elapsed time in seconds that the job ran. (decimal)
* `job_explanation`: A status field to indicate the state of the job if it wasn&#39;t able to run and capture stdout (string)
* `execution_node`: The node the job executed on. (string)
* `system_job_template`:  (id)
* `job_type`:  (choice)
    - `""`: ---------
    - `cleanup_jobs`: Remove jobs older than a certain number of days
    - `cleanup_activitystream`: Remove activity stream entries older than a certain number of days
    - `cleanup_sessions`: Removes expired browser sessions from the database
    - `cleanup_tokens`: Removes expired OAuth 2 access tokens and refresh tokens
* `extra_vars`:  (string)
* `result_stdout`:  (field)



## Sorting

To specify that system jobs are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) SystemJobsSystemJobsList(params *SystemJobsSystemJobsListParams) (*SystemJobsSystemJobsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemJobsSystemJobsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Jobs_system_jobs_list",
		Method:             "GET",
		PathPattern:        "/api/v2/system_jobs/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemJobsSystemJobsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemJobsSystemJobsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Jobs_system_jobs_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemJobsSystemJobsNotificationsList lists notifications for a system job


Make a GET request to this resource to retrieve a list of
notifications associated with the selected
system job.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of notifications
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more notification records.

## Results

Each notification data structure includes the following fields:

* `id`: Database ID for this notification. (integer)
* `type`: Data type for this notification. (choice)
* `url`: URL for this notification. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this notification was created. (datetime)
* `modified`: Timestamp when this notification was last modified. (datetime)
* `notification_template`:  (id)
* `error`:  (string)
* `status`:  (choice)
    - `pending`: Pending
    - `successful`: Successful
    - `failed`: Failed
* `notifications_sent`:  (integer)
* `notification_type`:  (choice)
    - `email`: Email
    - `grafana`: Grafana
    - `hipchat`: HipChat
    - `irc`: IRC
    - `mattermost`: Mattermost
    - `pagerduty`: Pagerduty
    - `rocketchat`: Rocket.Chat
    - `slack`: Slack
    - `twilio`: Twilio
    - `webhook`: Webhook
* `recipients`:  (string)
* `subject`:  (string)
* `body`: Notification body (json)



## Sorting

To specify that notifications are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) SystemJobsSystemJobsNotificationsList(params *SystemJobsSystemJobsNotificationsListParams) (*SystemJobsSystemJobsNotificationsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemJobsSystemJobsNotificationsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Jobs_system_jobs_notifications_list",
		Method:             "GET",
		PathPattern:        "/api/v2/system_jobs/{id}/notifications/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemJobsSystemJobsNotificationsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemJobsSystemJobsNotificationsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Jobs_system_jobs_notifications_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemJobsSystemJobsRead retrieves a system job


Make GET request to this resource to retrieve a single system job
record containing the following fields:

* `id`: Database ID for this system job. (integer)
* `type`: Data type for this system job. (choice)
* `url`: URL for this system job. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this system job was created. (datetime)
* `modified`: Timestamp when this system job was last modified. (datetime)
* `name`: Name of this system job. (string)
* `description`: Optional description of this system job. (string)
* `unified_job_template`:  (id)
* `launch_type`:  (choice)
    - `manual`: Manual
    - `relaunch`: Relaunch
    - `callback`: Callback
    - `scheduled`: Scheduled
    - `dependency`: Dependency
    - `workflow`: Workflow
    - `webhook`: Webhook
    - `sync`: Sync
    - `scm`: SCM Update
* `status`:  (choice)
    - `new`: New
    - `pending`: Pending
    - `waiting`: Waiting
    - `running`: Running
    - `successful`: Successful
    - `failed`: Failed
    - `error`: Error
    - `canceled`: Canceled
* `failed`:  (boolean)
* `started`: The date and time the job was queued for starting. (datetime)
* `finished`: The date and time the job finished execution. (datetime)
* `canceled_on`: The date and time when the cancel request was sent. (datetime)
* `elapsed`: Elapsed time in seconds that the job ran. (decimal)
* `job_args`:  (string)
* `job_cwd`:  (string)
* `job_env`:  (json)
* `job_explanation`: A status field to indicate the state of the job if it wasn&#39;t able to run and capture stdout (string)
* `execution_node`: The node the job executed on. (string)
* `result_traceback`:  (string)
* `event_processing_finished`: Indicates whether all of the events generated by this unified job have been saved to the database. (boolean)
* `system_job_template`:  (id)
* `job_type`:  (choice)
    - `""`: ---------
    - `cleanup_jobs`: Remove jobs older than a certain number of days
    - `cleanup_activitystream`: Remove activity stream entries older than a certain number of days
    - `cleanup_sessions`: Removes expired browser sessions from the database
    - `cleanup_tokens`: Removes expired OAuth 2 access tokens and refresh tokens
* `extra_vars`:  (string)
* `result_stdout`:  (field)
*/
func (a *Client) SystemJobsSystemJobsRead(params *SystemJobsSystemJobsReadParams) (*SystemJobsSystemJobsReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemJobsSystemJobsReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Jobs_system_jobs_read",
		Method:             "GET",
		PathPattern:        "/api/v2/system_jobs/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemJobsSystemJobsReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemJobsSystemJobsReadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Jobs_system_jobs_read: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
