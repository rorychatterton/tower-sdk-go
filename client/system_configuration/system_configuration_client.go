// Code generated by go-swagger; DO NOT EDIT.

package system_configuration

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new system configuration API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for system configuration API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	SystemConfigurationAuthList(params *SystemConfigurationAuthListParams) (*SystemConfigurationAuthListOK, error)

	SystemConfigurationConfigCreate(params *SystemConfigurationConfigCreateParams) (*SystemConfigurationConfigCreateCreated, error)

	SystemConfigurationConfigDelete(params *SystemConfigurationConfigDeleteParams) (*SystemConfigurationConfigDeleteNoContent, error)

	SystemConfigurationConfigList(params *SystemConfigurationConfigListParams) (*SystemConfigurationConfigListOK, error)

	SystemConfigurationConfigSubscriptionsCreate(params *SystemConfigurationConfigSubscriptionsCreateParams) (*SystemConfigurationConfigSubscriptionsCreateCreated, error)

	SystemConfigurationPingList(params *SystemConfigurationPingListParams) (*SystemConfigurationPingListOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  SystemConfigurationAuthList lists enabled single sign on endpoints
*/
func (a *Client) SystemConfigurationAuthList(params *SystemConfigurationAuthListParams) (*SystemConfigurationAuthListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemConfigurationAuthListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Configuration_auth_list",
		Method:             "GET",
		PathPattern:        "/api/v2/auth/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemConfigurationAuthListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemConfigurationAuthListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Configuration_auth_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemConfigurationConfigCreate system configuration config create API
*/
func (a *Client) SystemConfigurationConfigCreate(params *SystemConfigurationConfigCreateParams) (*SystemConfigurationConfigCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemConfigurationConfigCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Configuration_config_create",
		Method:             "POST",
		PathPattern:        "/api/v2/config/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemConfigurationConfigCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemConfigurationConfigCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Configuration_config_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemConfigurationConfigDelete system configuration config delete API
*/
func (a *Client) SystemConfigurationConfigDelete(params *SystemConfigurationConfigDeleteParams) (*SystemConfigurationConfigDeleteNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemConfigurationConfigDeleteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Configuration_config_delete",
		Method:             "DELETE",
		PathPattern:        "/api/v2/config/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemConfigurationConfigDeleteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemConfigurationConfigDeleteNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Configuration_config_delete: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemConfigurationConfigList returns various sitewide configuration settings
*/
func (a *Client) SystemConfigurationConfigList(params *SystemConfigurationConfigListParams) (*SystemConfigurationConfigListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemConfigurationConfigListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Configuration_config_list",
		Method:             "GET",
		PathPattern:        "/api/v2/config/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemConfigurationConfigListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemConfigurationConfigListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Configuration_config_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemConfigurationConfigSubscriptionsCreate system configuration config subscriptions create API
*/
func (a *Client) SystemConfigurationConfigSubscriptionsCreate(params *SystemConfigurationConfigSubscriptionsCreateParams) (*SystemConfigurationConfigSubscriptionsCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemConfigurationConfigSubscriptionsCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Configuration_config_subscriptions_create",
		Method:             "POST",
		PathPattern:        "/api/v2/config/subscriptions/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemConfigurationConfigSubscriptionsCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemConfigurationConfigSubscriptionsCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Configuration_config_subscriptions_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemConfigurationPingList returns some basic information about this instance


Everything returned here should be considered public / insecure, as
this requires no auth and is intended for use by the installer process.
*/
func (a *Client) SystemConfigurationPingList(params *SystemConfigurationPingListParams) (*SystemConfigurationPingListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemConfigurationPingListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Configuration_ping_list",
		Method:             "GET",
		PathPattern:        "/api/v2/ping/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemConfigurationPingListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemConfigurationPingListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Configuration_ping_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
