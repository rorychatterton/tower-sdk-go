// Code generated by go-swagger; DO NOT EDIT.

package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewTeamsTeamsCreateParams creates a new TeamsTeamsCreateParams object
// with the default values initialized.
func NewTeamsTeamsCreateParams() *TeamsTeamsCreateParams {
	var ()
	return &TeamsTeamsCreateParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewTeamsTeamsCreateParamsWithTimeout creates a new TeamsTeamsCreateParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewTeamsTeamsCreateParamsWithTimeout(timeout time.Duration) *TeamsTeamsCreateParams {
	var ()
	return &TeamsTeamsCreateParams{

		timeout: timeout,
	}
}

// NewTeamsTeamsCreateParamsWithContext creates a new TeamsTeamsCreateParams object
// with the default values initialized, and the ability to set a context for a request
func NewTeamsTeamsCreateParamsWithContext(ctx context.Context) *TeamsTeamsCreateParams {
	var ()
	return &TeamsTeamsCreateParams{

		Context: ctx,
	}
}

// NewTeamsTeamsCreateParamsWithHTTPClient creates a new TeamsTeamsCreateParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewTeamsTeamsCreateParamsWithHTTPClient(client *http.Client) *TeamsTeamsCreateParams {
	var ()
	return &TeamsTeamsCreateParams{
		HTTPClient: client,
	}
}

/*TeamsTeamsCreateParams contains all the parameters to send to the API endpoint
for the teams teams create operation typically these are written to a http.Request
*/
type TeamsTeamsCreateParams struct {

	/*Data*/
	Data TeamsTeamsCreateBody

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the teams teams create params
func (o *TeamsTeamsCreateParams) WithTimeout(timeout time.Duration) *TeamsTeamsCreateParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the teams teams create params
func (o *TeamsTeamsCreateParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the teams teams create params
func (o *TeamsTeamsCreateParams) WithContext(ctx context.Context) *TeamsTeamsCreateParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the teams teams create params
func (o *TeamsTeamsCreateParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the teams teams create params
func (o *TeamsTeamsCreateParams) WithHTTPClient(client *http.Client) *TeamsTeamsCreateParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the teams teams create params
func (o *TeamsTeamsCreateParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithData adds the data to the teams teams create params
func (o *TeamsTeamsCreateParams) WithData(data TeamsTeamsCreateBody) *TeamsTeamsCreateParams {
	o.SetData(data)
	return o
}

// SetData adds the data to the teams teams create params
func (o *TeamsTeamsCreateParams) SetData(data TeamsTeamsCreateBody) {
	o.Data = data
}

// WriteToRequest writes these params to a swagger request
func (o *TeamsTeamsCreateParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.Data); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
