// Code generated by go-swagger; DO NOT EDIT.

package credential_types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new credential types API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for credential types API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	CredentialTypesCredentialTypesActivityStreamList(params *CredentialTypesCredentialTypesActivityStreamListParams) (*CredentialTypesCredentialTypesActivityStreamListOK, error)

	CredentialTypesCredentialTypesCreate(params *CredentialTypesCredentialTypesCreateParams) (*CredentialTypesCredentialTypesCreateCreated, error)

	CredentialTypesCredentialTypesCredentialsCreate(params *CredentialTypesCredentialTypesCredentialsCreateParams) (*CredentialTypesCredentialTypesCredentialsCreateCreated, error)

	CredentialTypesCredentialTypesCredentialsList(params *CredentialTypesCredentialTypesCredentialsListParams) (*CredentialTypesCredentialTypesCredentialsListOK, error)

	CredentialTypesCredentialTypesDelete(params *CredentialTypesCredentialTypesDeleteParams) (*CredentialTypesCredentialTypesDeleteNoContent, error)

	CredentialTypesCredentialTypesList(params *CredentialTypesCredentialTypesListParams) (*CredentialTypesCredentialTypesListOK, error)

	CredentialTypesCredentialTypesPartialUpdate(params *CredentialTypesCredentialTypesPartialUpdateParams) (*CredentialTypesCredentialTypesPartialUpdateOK, error)

	CredentialTypesCredentialTypesRead(params *CredentialTypesCredentialTypesReadParams) (*CredentialTypesCredentialTypesReadOK, error)

	CredentialTypesCredentialTypesTestCreate(params *CredentialTypesCredentialTypesTestCreateParams) (*CredentialTypesCredentialTypesTestCreateCreated, *CredentialTypesCredentialTypesTestCreateAccepted, error)

	CredentialTypesCredentialTypesTestRead(params *CredentialTypesCredentialTypesTestReadParams) (*CredentialTypesCredentialTypesTestReadOK, error)

	CredentialTypesCredentialTypesUpdate(params *CredentialTypesCredentialTypesUpdateParams) (*CredentialTypesCredentialTypesUpdateOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CredentialTypesCredentialTypesActivityStreamList lists activity streams for a credential type


Make a GET request to this resource to retrieve a list of
activity streams associated with the selected
credential type.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of activity streams
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more activity stream records.

## Results

Each activity stream data structure includes the following fields:

* `id`: Database ID for this activity stream. (integer)
* `type`: Data type for this activity stream. (choice)
* `url`: URL for this activity stream. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `timestamp`:  (datetime)
* `operation`: The action taken with respect to the given object(s). (choice)
    - `create`: Entity Created
    - `update`: Entity Updated
    - `delete`: Entity Deleted
    - `associate`: Entity Associated with another Entity
    - `disassociate`: Entity was Disassociated with another Entity
* `changes`: A summary of the new and changed values when an object is created, updated, or deleted (json)
* `object1`: For create, update, and delete events this is the object type that was affected. For associate and disassociate events this is the object type associated or disassociated with object2. (string)
* `object2`: Unpopulated for create, update, and delete events. For associate and disassociate events this is the object type that object1 is being associated with. (string)
* `object_association`: When present, shows the field name of the role or relationship that changed. (field)
* `action_node`: The cluster node the activity took place on. (string)
* `object_type`: When present, shows the model on which the role or relationship was defined. (field)



## Sorting

To specify that activity streams are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) CredentialTypesCredentialTypesActivityStreamList(params *CredentialTypesCredentialTypesActivityStreamListParams) (*CredentialTypesCredentialTypesActivityStreamListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCredentialTypesCredentialTypesActivityStreamListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Credential Types_credential_types_activity_stream_list",
		Method:             "GET",
		PathPattern:        "/api/v2/credential_types/{id}/activity_stream/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CredentialTypesCredentialTypesActivityStreamListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CredentialTypesCredentialTypesActivityStreamListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Credential Types_credential_types_activity_stream_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CredentialTypesCredentialTypesCreate creates a credential type


Make a POST request to this resource with the following credential type
fields to create a new credential type:









* `name`: Name of this credential type. (string, required)
* `description`: Optional description of this credential type. (string, default=`""`)
* `kind`:  (choice, required)
    - `net`: Network
    - `cloud`: Cloud


* `inputs`: Enter inputs using either JSON or YAML syntax. Refer to the Ansible Tower documentation for example syntax. (json, default=`{}`)
* `injectors`: Enter injectors using either JSON or YAML syntax. Refer to the Ansible Tower documentation for example syntax. (json, default=`{}`)
*/
func (a *Client) CredentialTypesCredentialTypesCreate(params *CredentialTypesCredentialTypesCreateParams) (*CredentialTypesCredentialTypesCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCredentialTypesCredentialTypesCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Credential Types_credential_types_create",
		Method:             "POST",
		PathPattern:        "/api/v2/credential_types/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CredentialTypesCredentialTypesCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CredentialTypesCredentialTypesCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Credential Types_credential_types_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CredentialTypesCredentialTypesCredentialsCreate creates a credential for a credential type


Make a POST request to this resource with the following credential
fields to create a new credential associated with this
credential type.









* `name`: Name of this credential. (string, required)
* `description`: Optional description of this credential. (string, default=`""`)
* `organization`:  (id, default=`None`)
* `credential_type`: Specify the type of credential you want to create. Refer to the Ansible Tower documentation for details on each type. (id, required)
* `inputs`: Enter inputs using either JSON or YAML syntax. Refer to the Ansible Tower documentation for example syntax. (json, default=`{}`)
*/
func (a *Client) CredentialTypesCredentialTypesCredentialsCreate(params *CredentialTypesCredentialTypesCredentialsCreateParams) (*CredentialTypesCredentialTypesCredentialsCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCredentialTypesCredentialTypesCredentialsCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Credential Types_credential_types_credentials_create",
		Method:             "POST",
		PathPattern:        "/api/v2/credential_types/{id}/credentials/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CredentialTypesCredentialTypesCredentialsCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CredentialTypesCredentialTypesCredentialsCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Credential Types_credential_types_credentials_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CredentialTypesCredentialTypesCredentialsList lists credentials for a credential type


Make a GET request to this resource to retrieve a list of
credentials associated with the selected
credential type.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of credentials
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more credential records.

## Results

Each credential data structure includes the following fields:

* `id`: Database ID for this credential. (integer)
* `type`: Data type for this credential. (choice)
* `url`: URL for this credential. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this credential was created. (datetime)
* `modified`: Timestamp when this credential was last modified. (datetime)
* `name`: Name of this credential. (string)
* `description`: Optional description of this credential. (string)
* `organization`:  (id)
* `credential_type`: Specify the type of credential you want to create. Refer to the Ansible Tower documentation for details on each type. (id)
* `inputs`: Enter inputs using either JSON or YAML syntax. Refer to the Ansible Tower documentation for example syntax. (json)
* `kind`:  (field)
* `cloud`:  (field)
* `kubernetes`:  (field)



## Sorting

To specify that credentials are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) CredentialTypesCredentialTypesCredentialsList(params *CredentialTypesCredentialTypesCredentialsListParams) (*CredentialTypesCredentialTypesCredentialsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCredentialTypesCredentialTypesCredentialsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Credential Types_credential_types_credentials_list",
		Method:             "GET",
		PathPattern:        "/api/v2/credential_types/{id}/credentials/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CredentialTypesCredentialTypesCredentialsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CredentialTypesCredentialTypesCredentialsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Credential Types_credential_types_credentials_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CredentialTypesCredentialTypesDelete deletes a credential type


Make a DELETE request to this resource to delete this credential type.
*/
func (a *Client) CredentialTypesCredentialTypesDelete(params *CredentialTypesCredentialTypesDeleteParams) (*CredentialTypesCredentialTypesDeleteNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCredentialTypesCredentialTypesDeleteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Credential Types_credential_types_delete",
		Method:             "DELETE",
		PathPattern:        "/api/v2/credential_types/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CredentialTypesCredentialTypesDeleteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CredentialTypesCredentialTypesDeleteNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Credential Types_credential_types_delete: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CredentialTypesCredentialTypesList lists credential types


Make a GET request to this resource to retrieve the list of
credential types.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of credential types
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more credential type records.

## Results

Each credential type data structure includes the following fields:

* `id`: Database ID for this credential type. (integer)
* `type`: Data type for this credential type. (choice)
* `url`: URL for this credential type. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this credential type was created. (datetime)
* `modified`: Timestamp when this credential type was last modified. (datetime)
* `name`: Name of this credential type. (string)
* `description`: Optional description of this credential type. (string)
* `kind`:  (choice)
    - `ssh`: Machine
    - `vault`: Vault
    - `net`: Network
    - `scm`: Source Control
    - `cloud`: Cloud
    - `token`: Personal Access Token
    - `insights`: Insights
    - `external`: External
    - `kubernetes`: Kubernetes
* `namespace`:  (string)
* `managed_by_tower`:  (boolean)
* `inputs`: Enter inputs using either JSON or YAML syntax. Refer to the Ansible Tower documentation for example syntax. (json)
* `injectors`: Enter injectors using either JSON or YAML syntax. Refer to the Ansible Tower documentation for example syntax. (json)



## Sorting

To specify that credential types are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) CredentialTypesCredentialTypesList(params *CredentialTypesCredentialTypesListParams) (*CredentialTypesCredentialTypesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCredentialTypesCredentialTypesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Credential Types_credential_types_list",
		Method:             "GET",
		PathPattern:        "/api/v2/credential_types/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CredentialTypesCredentialTypesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CredentialTypesCredentialTypesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Credential Types_credential_types_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CredentialTypesCredentialTypesPartialUpdate updates a credential type


Make a PUT or PATCH request to this resource to update this
credential type.  The following fields may be modified:









* `name`: Name of this credential type. (string, required)
* `description`: Optional description of this credential type. (string, default=`""`)
* `kind`:  (choice, required)
    - `net`: Network
    - `cloud`: Cloud


* `inputs`: Enter inputs using either JSON or YAML syntax. Refer to the Ansible Tower documentation for example syntax. (json, default=`{}`)
* `injectors`: Enter injectors using either JSON or YAML syntax. Refer to the Ansible Tower documentation for example syntax. (json, default=`{}`)








For a PATCH request, include only the fields that are being modified.
*/
func (a *Client) CredentialTypesCredentialTypesPartialUpdate(params *CredentialTypesCredentialTypesPartialUpdateParams) (*CredentialTypesCredentialTypesPartialUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCredentialTypesCredentialTypesPartialUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Credential Types_credential_types_partial_update",
		Method:             "PATCH",
		PathPattern:        "/api/v2/credential_types/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CredentialTypesCredentialTypesPartialUpdateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CredentialTypesCredentialTypesPartialUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Credential Types_credential_types_partial_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CredentialTypesCredentialTypesRead retrieves a credential type


Make GET request to this resource to retrieve a single credential type
record containing the following fields:

* `id`: Database ID for this credential type. (integer)
* `type`: Data type for this credential type. (choice)
* `url`: URL for this credential type. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this credential type was created. (datetime)
* `modified`: Timestamp when this credential type was last modified. (datetime)
* `name`: Name of this credential type. (string)
* `description`: Optional description of this credential type. (string)
* `kind`:  (choice)
    - `ssh`: Machine
    - `vault`: Vault
    - `net`: Network
    - `scm`: Source Control
    - `cloud`: Cloud
    - `token`: Personal Access Token
    - `insights`: Insights
    - `external`: External
    - `kubernetes`: Kubernetes
* `namespace`:  (string)
* `managed_by_tower`:  (boolean)
* `inputs`: Enter inputs using either JSON or YAML syntax. Refer to the Ansible Tower documentation for example syntax. (json)
* `injectors`: Enter injectors using either JSON or YAML syntax. Refer to the Ansible Tower documentation for example syntax. (json)
*/
func (a *Client) CredentialTypesCredentialTypesRead(params *CredentialTypesCredentialTypesReadParams) (*CredentialTypesCredentialTypesReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCredentialTypesCredentialTypesReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Credential Types_credential_types_read",
		Method:             "GET",
		PathPattern:        "/api/v2/credential_types/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CredentialTypesCredentialTypesReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CredentialTypesCredentialTypesReadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Credential Types_credential_types_read: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CredentialTypesCredentialTypesTestCreate retrieves a credential type


Make GET request to this resource to retrieve a single credential type
record containing the following fields:
*/
func (a *Client) CredentialTypesCredentialTypesTestCreate(params *CredentialTypesCredentialTypesTestCreateParams) (*CredentialTypesCredentialTypesTestCreateCreated, *CredentialTypesCredentialTypesTestCreateAccepted, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCredentialTypesCredentialTypesTestCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Credential Types_credential_types_test_create",
		Method:             "POST",
		PathPattern:        "/api/v2/credential_types/{id}/test/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CredentialTypesCredentialTypesTestCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, nil, err
	}
	switch value := result.(type) {
	case *CredentialTypesCredentialTypesTestCreateCreated:
		return value, nil, nil
	case *CredentialTypesCredentialTypesTestCreateAccepted:
		return nil, value, nil
	}
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for credential_types: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CredentialTypesCredentialTypesTestRead retrieves a credential type


Make GET request to this resource to retrieve a single credential type
record containing the following fields:
*/
func (a *Client) CredentialTypesCredentialTypesTestRead(params *CredentialTypesCredentialTypesTestReadParams) (*CredentialTypesCredentialTypesTestReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCredentialTypesCredentialTypesTestReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Credential Types_credential_types_test_read",
		Method:             "GET",
		PathPattern:        "/api/v2/credential_types/{id}/test/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CredentialTypesCredentialTypesTestReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CredentialTypesCredentialTypesTestReadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Credential Types_credential_types_test_read: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  CredentialTypesCredentialTypesUpdate updates a credential type


Make a PUT or PATCH request to this resource to update this
credential type.  The following fields may be modified:









* `name`: Name of this credential type. (string, required)
* `description`: Optional description of this credential type. (string, default=`""`)
* `kind`:  (choice, required)
    - `net`: Network
    - `cloud`: Cloud


* `inputs`: Enter inputs using either JSON or YAML syntax. Refer to the Ansible Tower documentation for example syntax. (json, default=`{}`)
* `injectors`: Enter injectors using either JSON or YAML syntax. Refer to the Ansible Tower documentation for example syntax. (json, default=`{}`)






For a PUT request, include **all** fields in the request.
*/
func (a *Client) CredentialTypesCredentialTypesUpdate(params *CredentialTypesCredentialTypesUpdateParams) (*CredentialTypesCredentialTypesUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCredentialTypesCredentialTypesUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Credential Types_credential_types_update",
		Method:             "PUT",
		PathPattern:        "/api/v2/credential_types/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &CredentialTypesCredentialTypesUpdateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CredentialTypesCredentialTypesUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Credential Types_credential_types_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
