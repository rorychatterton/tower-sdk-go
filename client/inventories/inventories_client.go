// Code generated by go-swagger; DO NOT EDIT.

package inventories

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new inventories API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for inventories API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	InventoriesInventoriesAccessListList(params *InventoriesInventoriesAccessListListParams) (*InventoriesInventoriesAccessListListOK, error)

	InventoriesInventoriesActivityStreamList(params *InventoriesInventoriesActivityStreamListParams) (*InventoriesInventoriesActivityStreamListOK, error)

	InventoriesInventoriesAdHocCommandsCreate(params *InventoriesInventoriesAdHocCommandsCreateParams) (*InventoriesInventoriesAdHocCommandsCreateCreated, error)

	InventoriesInventoriesAdHocCommandsList(params *InventoriesInventoriesAdHocCommandsListParams) (*InventoriesInventoriesAdHocCommandsListOK, error)

	InventoriesInventoriesCopyCreate(params *InventoriesInventoriesCopyCreateParams) (*InventoriesInventoriesCopyCreateCreated, error)

	InventoriesInventoriesCopyList(params *InventoriesInventoriesCopyListParams) (*InventoriesInventoriesCopyListOK, error)

	InventoriesInventoriesCreate(params *InventoriesInventoriesCreateParams) (*InventoriesInventoriesCreateCreated, error)

	InventoriesInventoriesDelete(params *InventoriesInventoriesDeleteParams) (*InventoriesInventoriesDeleteNoContent, error)

	InventoriesInventoriesGroupsCreate(params *InventoriesInventoriesGroupsCreateParams) (*InventoriesInventoriesGroupsCreateCreated, error)

	InventoriesInventoriesGroupsList(params *InventoriesInventoriesGroupsListParams) (*InventoriesInventoriesGroupsListOK, error)

	InventoriesInventoriesHostsCreate(params *InventoriesInventoriesHostsCreateParams) (*InventoriesInventoriesHostsCreateCreated, error)

	InventoriesInventoriesHostsList(params *InventoriesInventoriesHostsListParams) (*InventoriesInventoriesHostsListOK, error)

	InventoriesInventoriesInstanceGroupsCreate(params *InventoriesInventoriesInstanceGroupsCreateParams) (*InventoriesInventoriesInstanceGroupsCreateCreated, error)

	InventoriesInventoriesInstanceGroupsList(params *InventoriesInventoriesInstanceGroupsListParams) (*InventoriesInventoriesInstanceGroupsListOK, error)

	InventoriesInventoriesInventorySourcesCreate(params *InventoriesInventoriesInventorySourcesCreateParams) (*InventoriesInventoriesInventorySourcesCreateCreated, error)

	InventoriesInventoriesInventorySourcesList(params *InventoriesInventoriesInventorySourcesListParams) (*InventoriesInventoriesInventorySourcesListOK, error)

	InventoriesInventoriesJobTemplatesList(params *InventoriesInventoriesJobTemplatesListParams) (*InventoriesInventoriesJobTemplatesListOK, error)

	InventoriesInventoriesList(params *InventoriesInventoriesListParams) (*InventoriesInventoriesListOK, error)

	InventoriesInventoriesObjectRolesList(params *InventoriesInventoriesObjectRolesListParams) (*InventoriesInventoriesObjectRolesListOK, error)

	InventoriesInventoriesPartialUpdate(params *InventoriesInventoriesPartialUpdateParams) (*InventoriesInventoriesPartialUpdateOK, error)

	InventoriesInventoriesRead(params *InventoriesInventoriesReadParams) (*InventoriesInventoriesReadOK, error)

	InventoriesInventoriesRootGroupsCreate(params *InventoriesInventoriesRootGroupsCreateParams) (*InventoriesInventoriesRootGroupsCreateCreated, error)

	InventoriesInventoriesRootGroupsList(params *InventoriesInventoriesRootGroupsListParams) (*InventoriesInventoriesRootGroupsListOK, error)

	InventoriesInventoriesScriptRead(params *InventoriesInventoriesScriptReadParams) (*InventoriesInventoriesScriptReadOK, error)

	InventoriesInventoriesTreeRead(params *InventoriesInventoriesTreeReadParams) (*InventoriesInventoriesTreeReadOK, error)

	InventoriesInventoriesUpdate(params *InventoriesInventoriesUpdateParams) (*InventoriesInventoriesUpdateOK, error)

	InventoriesInventoriesUpdateInventorySourcesCreate(params *InventoriesInventoriesUpdateInventorySourcesCreateParams) (*InventoriesInventoriesUpdateInventorySourcesCreateCreated, error)

	InventoriesInventoriesUpdateInventorySourcesRead(params *InventoriesInventoriesUpdateInventorySourcesReadParams) (*InventoriesInventoriesUpdateInventorySourcesReadOK, error)

	InventoriesInventoriesVariableDataPartialUpdate(params *InventoriesInventoriesVariableDataPartialUpdateParams) (*InventoriesInventoriesVariableDataPartialUpdateOK, error)

	InventoriesInventoriesVariableDataRead(params *InventoriesInventoriesVariableDataReadParams) (*InventoriesInventoriesVariableDataReadOK, error)

	InventoriesInventoriesVariableDataUpdate(params *InventoriesInventoriesVariableDataUpdateParams) (*InventoriesInventoriesVariableDataUpdateOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  InventoriesInventoriesAccessListList lists users


Make a GET request to this resource to retrieve the list of
users.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of users
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more user records.

## Results

Each user data structure includes the following fields:

* `id`: Database ID for this user. (integer)
* `type`: Data type for this user. (choice)
* `url`: URL for this user. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this user was created. (datetime)
* `username`: Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. (string)
* `first_name`:  (string)
* `last_name`:  (string)
* `email`:  (string)
* `is_superuser`: Designates that this user has all permissions without explicitly assigning them. (boolean)
* `is_system_auditor`:  (boolean)

* `ldap_dn`:  (string)
* `last_login`:  (datetime)
* `external_account`: Set if the account is managed by an external service (field)



## Sorting

To specify that users are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=username

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-username

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=username,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) InventoriesInventoriesAccessListList(params *InventoriesInventoriesAccessListListParams) (*InventoriesInventoriesAccessListListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesAccessListListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_access_list_list",
		Method:             "GET",
		PathPattern:        "/api/v2/inventories/{id}/access_list/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesAccessListListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesAccessListListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_access_list_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesActivityStreamList lists activity streams for an inventory


Make a GET request to this resource to retrieve a list of
activity streams associated with the selected
inventory.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of activity streams
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more activity stream records.

## Results

Each activity stream data structure includes the following fields:

* `id`: Database ID for this activity stream. (integer)
* `type`: Data type for this activity stream. (choice)
* `url`: URL for this activity stream. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `timestamp`:  (datetime)
* `operation`: The action taken with respect to the given object(s). (choice)
    - `create`: Entity Created
    - `update`: Entity Updated
    - `delete`: Entity Deleted
    - `associate`: Entity Associated with another Entity
    - `disassociate`: Entity was Disassociated with another Entity
* `changes`: A summary of the new and changed values when an object is created, updated, or deleted (json)
* `object1`: For create, update, and delete events this is the object type that was affected. For associate and disassociate events this is the object type associated or disassociated with object2. (string)
* `object2`: Unpopulated for create, update, and delete events. For associate and disassociate events this is the object type that object1 is being associated with. (string)
* `object_association`: When present, shows the field name of the role or relationship that changed. (field)
* `action_node`: The cluster node the activity took place on. (string)
* `object_type`: When present, shows the model on which the role or relationship was defined. (field)



## Sorting

To specify that activity streams are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) InventoriesInventoriesActivityStreamList(params *InventoriesInventoriesActivityStreamListParams) (*InventoriesInventoriesActivityStreamListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesActivityStreamListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_activity_stream_list",
		Method:             "GET",
		PathPattern:        "/api/v2/inventories/{id}/activity_stream/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesActivityStreamListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesActivityStreamListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_activity_stream_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesAdHocCommandsCreate creates an ad hoc command for an inventory


Make a POST request to this resource with the following ad hoc command
fields to create a new ad hoc command associated with this
inventory.




















* `job_type`:  (choice)
    - `run`: Run (default)
    - `check`: Check

* `limit`:  (string, default=`""`)
* `credential`:  (id, default=``)
* `module_name`:  (choice)
    - `command` (default)
    - `shell`
    - `yum`
    - `apt`
    - `apt_key`
    - `apt_repository`
    - `apt_rpm`
    - `service`
    - `group`
    - `user`
    - `mount`
    - `ping`
    - `selinux`
    - `setup`
    - `win_ping`
    - `win_service`
    - `win_updates`
    - `win_group`
    - `win_user`
* `module_args`:  (string, default=`""`)
* `forks`:  (integer, default=`0`)
* `verbosity`:  (choice)
    - `0`: 0 (Normal) (default)
    - `1`: 1 (Verbose)
    - `2`: 2 (More Verbose)
    - `3`: 3 (Debug)
    - `4`: 4 (Connection Debug)
    - `5`: 5 (WinRM Debug)
* `extra_vars`:  (string, default=`""`)
* `become_enabled`:  (boolean, default=`False`)
* `diff_mode`:  (boolean, default=`False`)
*/
func (a *Client) InventoriesInventoriesAdHocCommandsCreate(params *InventoriesInventoriesAdHocCommandsCreateParams) (*InventoriesInventoriesAdHocCommandsCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesAdHocCommandsCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_ad_hoc_commands_create",
		Method:             "POST",
		PathPattern:        "/api/v2/inventories/{id}/ad_hoc_commands/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesAdHocCommandsCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesAdHocCommandsCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_ad_hoc_commands_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesAdHocCommandsList lists ad hoc commands for an inventory


Make a GET request to this resource to retrieve a list of
ad hoc commands associated with the selected
inventory.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of ad hoc commands
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more ad hoc command records.

## Results

Each ad hoc command data structure includes the following fields:

* `id`: Database ID for this ad hoc command. (integer)
* `type`: Data type for this ad hoc command. (choice)
* `url`: URL for this ad hoc command. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this ad hoc command was created. (datetime)
* `modified`: Timestamp when this ad hoc command was last modified. (datetime)
* `name`: Name of this ad hoc command. (string)
* `launch_type`:  (choice)
    - `manual`: Manual
    - `relaunch`: Relaunch
    - `callback`: Callback
    - `scheduled`: Scheduled
    - `dependency`: Dependency
    - `workflow`: Workflow
    - `webhook`: Webhook
    - `sync`: Sync
    - `scm`: SCM Update
* `status`:  (choice)
    - `new`: New
    - `pending`: Pending
    - `waiting`: Waiting
    - `running`: Running
    - `successful`: Successful
    - `failed`: Failed
    - `error`: Error
    - `canceled`: Canceled
* `failed`:  (boolean)
* `started`: The date and time the job was queued for starting. (datetime)
* `finished`: The date and time the job finished execution. (datetime)
* `canceled_on`: The date and time when the cancel request was sent. (datetime)
* `elapsed`: Elapsed time in seconds that the job ran. (decimal)
* `job_explanation`: A status field to indicate the state of the job if it wasn&#39;t able to run and capture stdout (string)
* `execution_node`: The node the job executed on. (string)
* `controller_node`: The instance that managed the isolated execution environment. (string)
* `job_type`:  (choice)
    - `run`: Run
    - `check`: Check
* `inventory`:  (id)
* `limit`:  (string)
* `credential`:  (id)
* `module_name`:  (choice)
    - `command`
    - `shell`
    - `yum`
    - `apt`
    - `apt_key`
    - `apt_repository`
    - `apt_rpm`
    - `service`
    - `group`
    - `user`
    - `mount`
    - `ping`
    - `selinux`
    - `setup`
    - `win_ping`
    - `win_service`
    - `win_updates`
    - `win_group`
    - `win_user`
* `module_args`:  (string)
* `forks`:  (integer)
* `verbosity`:  (choice)
    - `0`: 0 (Normal)
    - `1`: 1 (Verbose)
    - `2`: 2 (More Verbose)
    - `3`: 3 (Debug)
    - `4`: 4 (Connection Debug)
    - `5`: 5 (WinRM Debug)
* `extra_vars`:  (string)
* `become_enabled`:  (boolean)
* `diff_mode`:  (boolean)



## Sorting

To specify that ad hoc commands are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) InventoriesInventoriesAdHocCommandsList(params *InventoriesInventoriesAdHocCommandsListParams) (*InventoriesInventoriesAdHocCommandsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesAdHocCommandsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_ad_hoc_commands_list",
		Method:             "GET",
		PathPattern:        "/api/v2/inventories/{id}/ad_hoc_commands/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesAdHocCommandsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesAdHocCommandsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_ad_hoc_commands_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesCopyCreate inventories inventories copy create API
*/
func (a *Client) InventoriesInventoriesCopyCreate(params *InventoriesInventoriesCopyCreateParams) (*InventoriesInventoriesCopyCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesCopyCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_copy_create",
		Method:             "POST",
		PathPattern:        "/api/v2/inventories/{id}/copy/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesCopyCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesCopyCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_copy_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesCopyList inventories inventories copy list API
*/
func (a *Client) InventoriesInventoriesCopyList(params *InventoriesInventoriesCopyListParams) (*InventoriesInventoriesCopyListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesCopyListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_copy_list",
		Method:             "GET",
		PathPattern:        "/api/v2/inventories/{id}/copy/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesCopyListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesCopyListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_copy_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesCreate creates an inventory


Make a POST request to this resource with the following inventory
fields to create a new inventory:









* `name`: Name of this inventory. (string, required)
* `description`: Optional description of this inventory. (string, default=`""`)
* `organization`: Organization containing this inventory. (id, required)
* `kind`: Kind of inventory being represented. (choice)
    - `""`: Hosts have a direct link to this inventory. (default)
    - `smart`: Hosts for inventory generated using the host_filter property.
* `host_filter`: Filter that will be applied to the hosts of this inventory. (string, default=`""`)
* `variables`: Inventory variables in JSON or YAML format. (json, default=``)







* `insights_credential`: Credentials to be used by hosts belonging to this inventory when accessing Red Hat Insights API. (id, default=``)
*/
func (a *Client) InventoriesInventoriesCreate(params *InventoriesInventoriesCreateParams) (*InventoriesInventoriesCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_create",
		Method:             "POST",
		PathPattern:        "/api/v2/inventories/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesDelete deletes an inventory


Make a DELETE request to this resource to delete this inventory.
*/
func (a *Client) InventoriesInventoriesDelete(params *InventoriesInventoriesDeleteParams) (*InventoriesInventoriesDeleteNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesDeleteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_delete",
		Method:             "DELETE",
		PathPattern:        "/api/v2/inventories/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesDeleteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesDeleteNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_delete: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesGroupsCreate creates a group for an inventory


Make a POST request to this resource with the following group
fields to create a new group associated with this
inventory.









* `name`: Name of this group. (string, required)
* `description`: Optional description of this group. (string, default=`""`)

* `variables`: Group variables in JSON or YAML format. (json, default=``)








# Remove Inventory Groups:

Make a POST request to this resource with `id` and `disassociate` fields to
delete the associated group.

    {
        "id": 123,
        "disassociate": true
    }
*/
func (a *Client) InventoriesInventoriesGroupsCreate(params *InventoriesInventoriesGroupsCreateParams) (*InventoriesInventoriesGroupsCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesGroupsCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_groups_create",
		Method:             "POST",
		PathPattern:        "/api/v2/inventories/{id}/groups/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesGroupsCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesGroupsCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_groups_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesGroupsList lists groups for an inventory


Make a GET request to this resource to retrieve a list of
groups associated with the selected
inventory.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of groups
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more group records.

## Results

Each group data structure includes the following fields:

* `id`: Database ID for this group. (integer)
* `type`: Data type for this group. (choice)
* `url`: URL for this group. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this group was created. (datetime)
* `modified`: Timestamp when this group was last modified. (datetime)
* `name`: Name of this group. (string)
* `description`: Optional description of this group. (string)
* `inventory`:  (id)
* `variables`: Group variables in JSON or YAML format. (json)



## Sorting

To specify that groups are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) InventoriesInventoriesGroupsList(params *InventoriesInventoriesGroupsListParams) (*InventoriesInventoriesGroupsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesGroupsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_groups_list",
		Method:             "GET",
		PathPattern:        "/api/v2/inventories/{id}/groups/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesGroupsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesGroupsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_groups_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesHostsCreate creates a host for an inventory


Make a POST request to this resource with the following host
fields to create a new host associated with this
inventory.









* `name`: Name of this host. (string, required)
* `description`: Optional description of this host. (string, default=`""`)

* `enabled`: Is this host online and available for running jobs? (boolean, default=`True`)
* `instance_id`: The value used by the remote inventory source to uniquely identify the host (string, default=`""`)
* `variables`: Host variables in JSON or YAML format. (json, default=``)














# Remove Inventory Hosts:

Make a POST request to this resource with `id` and `disassociate` fields to
delete the associated host.

    {
        "id": 123,
        "disassociate": true
    }
*/
func (a *Client) InventoriesInventoriesHostsCreate(params *InventoriesInventoriesHostsCreateParams) (*InventoriesInventoriesHostsCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesHostsCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_hosts_create",
		Method:             "POST",
		PathPattern:        "/api/v2/inventories/{id}/hosts/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesHostsCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesHostsCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_hosts_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesHostsList lists hosts for an inventory


Make a GET request to this resource to retrieve a list of
hosts associated with the selected
inventory.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of hosts
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more host records.

## Results

Each host data structure includes the following fields:

* `id`: Database ID for this host. (integer)
* `type`: Data type for this host. (choice)
* `url`: URL for this host. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this host was created. (datetime)
* `modified`: Timestamp when this host was last modified. (datetime)
* `name`: Name of this host. (string)
* `description`: Optional description of this host. (string)
* `inventory`:  (id)
* `enabled`: Is this host online and available for running jobs? (boolean)
* `instance_id`: The value used by the remote inventory source to uniquely identify the host (string)
* `variables`: Host variables in JSON or YAML format. (json)
* `has_active_failures`:  (field)
* `has_inventory_sources`:  (field)
* `last_job`:  (id)
* `last_job_host_summary`:  (id)
* `insights_system_id`: Red Hat Insights host unique identifier. (string)
* `ansible_facts_modified`: The date and time ansible_facts was last modified. (datetime)



## Sorting

To specify that hosts are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) InventoriesInventoriesHostsList(params *InventoriesInventoriesHostsListParams) (*InventoriesInventoriesHostsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesHostsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_hosts_list",
		Method:             "GET",
		PathPattern:        "/api/v2/inventories/{id}/hosts/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesHostsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesHostsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_hosts_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesInstanceGroupsCreate creates an instance group for an inventory


Make a POST request to this resource with the following instance group
fields to create a new instance group associated with this
inventory.






* `name`: Name of this instance group. (string, required)













* `credential`:  (id, default=``)
* `policy_instance_percentage`: Minimum percentage of all instances that will be automatically assigned to this group when new instances come online. (integer, default=`0`)
* `policy_instance_minimum`: Static minimum number of Instances that will be automatically assign to this group when new instances come online. (integer, default=`0`)
* `policy_instance_list`: List of exact-match Instances that will be assigned to this group (json, default=``)
* `pod_spec_override`:  (string, default=`""`)









# Add Instance Groups for an Inventory:

Make a POST request to this resource with only an `id` field to associate an
existing instance group with this inventory.

# Remove Instance Groups from this Inventory:

Make a POST request to this resource with `id` and `disassociate` fields to
remove the instance group from this inventory
 without deleting the instance group.
*/
func (a *Client) InventoriesInventoriesInstanceGroupsCreate(params *InventoriesInventoriesInstanceGroupsCreateParams) (*InventoriesInventoriesInstanceGroupsCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesInstanceGroupsCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_instance_groups_create",
		Method:             "POST",
		PathPattern:        "/api/v2/inventories/{id}/instance_groups/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesInstanceGroupsCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesInstanceGroupsCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_instance_groups_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesInstanceGroupsList lists instance groups for an inventory


Make a GET request to this resource to retrieve a list of
instance groups associated with the selected
inventory.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of instance groups
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more instance group records.

## Results

Each instance group data structure includes the following fields:

* `id`: Database ID for this instance group. (integer)
* `type`: Data type for this instance group. (choice)
* `url`: URL for this instance group. (string)
* `related`: Data structure with URLs of related resources. (object)
* `name`: Name of this instance group. (string)
* `created`: Timestamp when this instance group was created. (datetime)
* `modified`: Timestamp when this instance group was last modified. (datetime)
* `capacity`:  (field)
* `committed_capacity`:  (field)
* `consumed_capacity`:  (field)
* `percent_capacity_remaining`:  (field)
* `jobs_running`: Count of jobs in the running or waiting state that are targeted for this instance group (integer)
* `jobs_total`: Count of all jobs that target this instance group (integer)
* `instances`:  (field)
* `controller`: Instance Group to remotely control this group. (id)
* `is_controller`: Indicates whether instance group controls any other group (boolean)
* `is_isolated`: Indicates whether instances in this group are isolated.Isolated groups have a designated controller group. (boolean)
* `is_containerized`: Indicates whether instances in this group are containerized.Containerized groups have a designated Openshift or Kubernetes cluster. (boolean)
* `credential`:  (id)
* `policy_instance_percentage`: Minimum percentage of all instances that will be automatically assigned to this group when new instances come online. (integer)
* `policy_instance_minimum`: Static minimum number of Instances that will be automatically assign to this group when new instances come online. (integer)
* `policy_instance_list`: List of exact-match Instances that will be assigned to this group (json)
* `pod_spec_override`:  (string)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)



## Sorting

To specify that instance groups are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) InventoriesInventoriesInstanceGroupsList(params *InventoriesInventoriesInstanceGroupsListParams) (*InventoriesInventoriesInstanceGroupsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesInstanceGroupsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_instance_groups_list",
		Method:             "GET",
		PathPattern:        "/api/v2/inventories/{id}/instance_groups/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesInstanceGroupsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesInstanceGroupsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_instance_groups_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesInventorySourcesCreate creates an inventory source for an inventory


Make a POST request to this resource with the following inventory source
fields to create a new inventory source associated with this
inventory.









* `name`: Name of this inventory source. (string, required)
* `description`: Optional description of this inventory source. (string, default=`""`)
* `source`:  (choice)
    - `file`: File, Directory or Script
    - `scm`: Sourced from a Project
    - `ec2`: Amazon EC2
    - `gce`: Google Compute Engine
    - `azure_rm`: Microsoft Azure Resource Manager
    - `vmware`: VMware vCenter
    - `satellite6`: Red Hat Satellite 6
    - `cloudforms`: Red Hat CloudForms
    - `openstack`: OpenStack
    - `rhv`: Red Hat Virtualization
    - `tower`: Ansible Tower
    - `custom`: Custom Script
* `source_path`:  (string, default=`""`)
* `source_script`:  (id, default=``)
* `source_vars`: Inventory source variables in YAML or JSON format. (string, default=`""`)
* `credential`: Cloud credential to use for inventory updates. (integer, default=`None`)
* `source_regions`:  (string, default=`""`)
* `instance_filters`: Comma-separated list of filter expressions (EC2 only). Hosts are imported when ANY of the filters match. (string, default=`""`)
* `group_by`: Limit groups automatically created from inventory source (EC2 only). (string, default=`""`)
* `overwrite`: Overwrite local groups and hosts from remote inventory source. (boolean, default=`False`)
* `overwrite_vars`: Overwrite local variables from remote inventory source. (boolean, default=`False`)
* `custom_virtualenv`: Local absolute file path containing a custom Python virtualenv to use (string, default=`""`)
* `timeout`: The amount of time (in seconds) to run before the task is canceled. (integer, default=`0`)
* `verbosity`:  (choice)
    - `0`: 0 (WARNING)
    - `1`: 1 (INFO) (default)
    - `2`: 2 (DEBUG)





* `update_on_launch`:  (boolean, default=`False`)
* `update_cache_timeout`:  (integer, default=`0`)
* `source_project`: Project containing inventory file used as source. (id, default=``)
* `update_on_project_update`:  (boolean, default=`False`)
*/
func (a *Client) InventoriesInventoriesInventorySourcesCreate(params *InventoriesInventoriesInventorySourcesCreateParams) (*InventoriesInventoriesInventorySourcesCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesInventorySourcesCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_inventory_sources_create",
		Method:             "POST",
		PathPattern:        "/api/v2/inventories/{id}/inventory_sources/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesInventorySourcesCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesInventorySourcesCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_inventory_sources_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesInventorySourcesList lists inventory sources for an inventory


Make a GET request to this resource to retrieve a list of
inventory sources associated with the selected
inventory.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of inventory sources
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more inventory source records.

## Results

Each inventory source data structure includes the following fields:

* `id`: Database ID for this inventory source. (integer)
* `type`: Data type for this inventory source. (choice)
* `url`: URL for this inventory source. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this inventory source was created. (datetime)
* `modified`: Timestamp when this inventory source was last modified. (datetime)
* `name`: Name of this inventory source. (string)
* `description`: Optional description of this inventory source. (string)
* `source`:  (choice)
    - `file`: File, Directory or Script
    - `scm`: Sourced from a Project
    - `ec2`: Amazon EC2
    - `gce`: Google Compute Engine
    - `azure_rm`: Microsoft Azure Resource Manager
    - `vmware`: VMware vCenter
    - `satellite6`: Red Hat Satellite 6
    - `cloudforms`: Red Hat CloudForms
    - `openstack`: OpenStack
    - `rhv`: Red Hat Virtualization
    - `tower`: Ansible Tower
    - `custom`: Custom Script
* `source_path`:  (string)
* `source_script`:  (id)
* `source_vars`: Inventory source variables in YAML or JSON format. (string)
* `credential`: Cloud credential to use for inventory updates. (integer)
* `source_regions`:  (string)
* `instance_filters`: Comma-separated list of filter expressions (EC2 only). Hosts are imported when ANY of the filters match. (string)
* `group_by`: Limit groups automatically created from inventory source (EC2 only). (string)
* `overwrite`: Overwrite local groups and hosts from remote inventory source. (boolean)
* `overwrite_vars`: Overwrite local variables from remote inventory source. (boolean)
* `custom_virtualenv`: Local absolute file path containing a custom Python virtualenv to use (string)
* `timeout`: The amount of time (in seconds) to run before the task is canceled. (integer)
* `verbosity`:  (choice)
    - `0`: 0 (WARNING)
    - `1`: 1 (INFO)
    - `2`: 2 (DEBUG)
* `last_job_run`:  (datetime)
* `last_job_failed`:  (boolean)
* `next_job_run`:  (datetime)
* `status`:  (choice)
    - `new`: New
    - `pending`: Pending
    - `waiting`: Waiting
    - `running`: Running
    - `successful`: Successful
    - `failed`: Failed
    - `error`: Error
    - `canceled`: Canceled
    - `never updated`: Never Updated
    - `none`: No External Source
* `inventory`:  (id)
* `update_on_launch`:  (boolean)
* `update_cache_timeout`:  (integer)
* `source_project`: Project containing inventory file used as source. (id)
* `update_on_project_update`:  (boolean)
* `last_update_failed`:  (boolean)
* `last_updated`:  (datetime)



## Sorting

To specify that inventory sources are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) InventoriesInventoriesInventorySourcesList(params *InventoriesInventoriesInventorySourcesListParams) (*InventoriesInventoriesInventorySourcesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesInventorySourcesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_inventory_sources_list",
		Method:             "GET",
		PathPattern:        "/api/v2/inventories/{id}/inventory_sources/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesInventorySourcesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesInventorySourcesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_inventory_sources_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesJobTemplatesList lists job templates for an inventory


Make a GET request to this resource to retrieve a list of
job templates associated with the selected
inventory.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of job templates
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more job template records.

## Results

Each job template data structure includes the following fields:

* `id`: Database ID for this job template. (integer)
* `type`: Data type for this job template. (choice)
* `url`: URL for this job template. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this job template was created. (datetime)
* `modified`: Timestamp when this job template was last modified. (datetime)
* `name`: Name of this job template. (string)
* `description`: Optional description of this job template. (string)
* `job_type`:  (choice)
    - `run`: Run
    - `check`: Check
* `inventory`:  (id)
* `project`:  (id)
* `playbook`:  (string)
* `scm_branch`: Branch to use in job run. Project default used if blank. Only allowed if project allow_override field is set to true. (string)
* `forks`:  (integer)
* `limit`:  (string)
* `verbosity`:  (choice)
    - `0`: 0 (Normal)
    - `1`: 1 (Verbose)
    - `2`: 2 (More Verbose)
    - `3`: 3 (Debug)
    - `4`: 4 (Connection Debug)
    - `5`: 5 (WinRM Debug)
* `extra_vars`:  (json)
* `job_tags`:  (string)
* `force_handlers`:  (boolean)
* `skip_tags`:  (string)
* `start_at_task`:  (string)
* `timeout`: The amount of time (in seconds) to run before the task is canceled. (integer)
* `use_fact_cache`: If enabled, Tower will act as an Ansible Fact Cache Plugin; persisting facts at the end of a playbook run to the database and caching facts for use by Ansible. (boolean)
* `organization`: The organization used to determine access to this template. (id)
* `last_job_run`:  (datetime)
* `last_job_failed`:  (boolean)
* `next_job_run`:  (datetime)
* `status`:  (choice)
    - `new`: New
    - `pending`: Pending
    - `waiting`: Waiting
    - `running`: Running
    - `successful`: Successful
    - `failed`: Failed
    - `error`: Error
    - `canceled`: Canceled
    - `never updated`: Never Updated
* `host_config_key`:  (string)
* `ask_scm_branch_on_launch`:  (boolean)
* `ask_diff_mode_on_launch`:  (boolean)
* `ask_variables_on_launch`:  (boolean)
* `ask_limit_on_launch`:  (boolean)
* `ask_tags_on_launch`:  (boolean)
* `ask_skip_tags_on_launch`:  (boolean)
* `ask_job_type_on_launch`:  (boolean)
* `ask_verbosity_on_launch`:  (boolean)
* `ask_inventory_on_launch`:  (boolean)
* `ask_credential_on_launch`:  (boolean)
* `survey_enabled`:  (boolean)
* `become_enabled`:  (boolean)
* `diff_mode`: If enabled, textual changes made to any templated files on the host are shown in the standard output (boolean)
* `allow_simultaneous`:  (boolean)
* `custom_virtualenv`: Local absolute file path containing a custom Python virtualenv to use (string)
* `job_slice_count`: The number of jobs to slice into at runtime. Will cause the Job Template to launch a workflow if value is greater than 1. (integer)
* `webhook_service`: Service that webhook requests will be accepted from (choice)
    - `""`: ---------
    - `github`: GitHub
    - `gitlab`: GitLab
* `webhook_credential`: Personal Access Token for posting back the status to the service API (id)



## Sorting

To specify that job templates are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) InventoriesInventoriesJobTemplatesList(params *InventoriesInventoriesJobTemplatesListParams) (*InventoriesInventoriesJobTemplatesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesJobTemplatesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_job_templates_list",
		Method:             "GET",
		PathPattern:        "/api/v2/inventories/{id}/job_templates/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesJobTemplatesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesJobTemplatesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_job_templates_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesList lists inventories


Make a GET request to this resource to retrieve the list of
inventories.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of inventories
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more inventory records.

## Results

Each inventory data structure includes the following fields:

* `id`: Database ID for this inventory. (integer)
* `type`: Data type for this inventory. (choice)
* `url`: URL for this inventory. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this inventory was created. (datetime)
* `modified`: Timestamp when this inventory was last modified. (datetime)
* `name`: Name of this inventory. (string)
* `description`: Optional description of this inventory. (string)
* `organization`: Organization containing this inventory. (id)
* `kind`: Kind of inventory being represented. (choice)
    - `""`: Hosts have a direct link to this inventory.
    - `smart`: Hosts for inventory generated using the host_filter property.
* `host_filter`: Filter that will be applied to the hosts of this inventory. (string)
* `variables`: Inventory variables in JSON or YAML format. (json)
* `has_active_failures`: This field is deprecated and will be removed in a future release. Flag indicating whether any hosts in this inventory have failed. (boolean)
* `total_hosts`: This field is deprecated and will be removed in a future release. Total number of hosts in this inventory. (integer)
* `hosts_with_active_failures`: This field is deprecated and will be removed in a future release. Number of hosts in this inventory with active failures. (integer)
* `total_groups`: This field is deprecated and will be removed in a future release. Total number of groups in this inventory. (integer)
* `has_inventory_sources`: This field is deprecated and will be removed in a future release. Flag indicating whether this inventory has any external inventory sources. (boolean)
* `total_inventory_sources`: Total number of external inventory sources configured within this inventory. (integer)
* `inventory_sources_with_failures`: Number of external inventory sources in this inventory with failures. (integer)
* `insights_credential`: Credentials to be used by hosts belonging to this inventory when accessing Red Hat Insights API. (id)
* `pending_deletion`: Flag indicating the inventory is being deleted. (boolean)



## Sorting

To specify that inventories are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) InventoriesInventoriesList(params *InventoriesInventoriesListParams) (*InventoriesInventoriesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_list",
		Method:             "GET",
		PathPattern:        "/api/v2/inventories/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesObjectRolesList lists roles for an inventory


Make a GET request to this resource to retrieve a list of
roles associated with the selected
inventory.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of roles
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more role records.

## Results

Each role data structure includes the following fields:

* `id`: Database ID for this role. (integer)
* `type`: Data type for this role. (choice)
* `url`: URL for this role. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `name`: Name of this role. (field)
* `description`: Optional description of this role. (field)



## Sorting

To specify that roles are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) InventoriesInventoriesObjectRolesList(params *InventoriesInventoriesObjectRolesListParams) (*InventoriesInventoriesObjectRolesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesObjectRolesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_object_roles_list",
		Method:             "GET",
		PathPattern:        "/api/v2/inventories/{id}/object_roles/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesObjectRolesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesObjectRolesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_object_roles_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesPartialUpdate updates an inventory


Make a PUT or PATCH request to this resource to update this
inventory.  The following fields may be modified:









* `name`: Name of this inventory. (string, required)
* `description`: Optional description of this inventory. (string, default=`""`)
* `organization`: Organization containing this inventory. (id, required)
* `kind`: Kind of inventory being represented. (choice)
    - `""`: Hosts have a direct link to this inventory. (default)
    - `smart`: Hosts for inventory generated using the host_filter property.
* `host_filter`: Filter that will be applied to the hosts of this inventory. (string, default=`""`)
* `variables`: Inventory variables in JSON or YAML format. (json, default=``)







* `insights_credential`: Credentials to be used by hosts belonging to this inventory when accessing Red Hat Insights API. (id, default=``)









For a PATCH request, include only the fields that are being modified.
*/
func (a *Client) InventoriesInventoriesPartialUpdate(params *InventoriesInventoriesPartialUpdateParams) (*InventoriesInventoriesPartialUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesPartialUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_partial_update",
		Method:             "PATCH",
		PathPattern:        "/api/v2/inventories/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesPartialUpdateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesPartialUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_partial_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesRead retrieves an inventory


Make GET request to this resource to retrieve a single inventory
record containing the following fields:

* `id`: Database ID for this inventory. (integer)
* `type`: Data type for this inventory. (choice)
* `url`: URL for this inventory. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this inventory was created. (datetime)
* `modified`: Timestamp when this inventory was last modified. (datetime)
* `name`: Name of this inventory. (string)
* `description`: Optional description of this inventory. (string)
* `organization`: Organization containing this inventory. (id)
* `kind`: Kind of inventory being represented. (choice)
    - `""`: Hosts have a direct link to this inventory.
    - `smart`: Hosts for inventory generated using the host_filter property.
* `host_filter`: Filter that will be applied to the hosts of this inventory. (string)
* `variables`: Inventory variables in JSON or YAML format. (json)
* `has_active_failures`: This field is deprecated and will be removed in a future release. Flag indicating whether any hosts in this inventory have failed. (boolean)
* `total_hosts`: This field is deprecated and will be removed in a future release. Total number of hosts in this inventory. (integer)
* `hosts_with_active_failures`: This field is deprecated and will be removed in a future release. Number of hosts in this inventory with active failures. (integer)
* `total_groups`: This field is deprecated and will be removed in a future release. Total number of groups in this inventory. (integer)
* `has_inventory_sources`: This field is deprecated and will be removed in a future release. Flag indicating whether this inventory has any external inventory sources. (boolean)
* `total_inventory_sources`: Total number of external inventory sources configured within this inventory. (integer)
* `inventory_sources_with_failures`: Number of external inventory sources in this inventory with failures. (integer)
* `insights_credential`: Credentials to be used by hosts belonging to this inventory when accessing Red Hat Insights API. (id)
* `pending_deletion`: Flag indicating the inventory is being deleted. (boolean)
*/
func (a *Client) InventoriesInventoriesRead(params *InventoriesInventoriesReadParams) (*InventoriesInventoriesReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_read",
		Method:             "GET",
		PathPattern:        "/api/v2/inventories/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesReadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_read: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesRootGroupsCreate inventories inventories root groups create API
*/
func (a *Client) InventoriesInventoriesRootGroupsCreate(params *InventoriesInventoriesRootGroupsCreateParams) (*InventoriesInventoriesRootGroupsCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesRootGroupsCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_root_groups_create",
		Method:             "POST",
		PathPattern:        "/api/v2/inventories/{id}/root_groups/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesRootGroupsCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesRootGroupsCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_root_groups_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesRootGroupsList lists root groups for an inventory


Make a GET request to this resource to retrieve a list of root (top-level)
groups associated with this
inventory.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of groups
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more group records.

## Results

Each group data structure includes the following fields:

* `id`: Database ID for this group. (integer)
* `type`: Data type for this group. (choice)
* `url`: URL for this group. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this group was created. (datetime)
* `modified`: Timestamp when this group was last modified. (datetime)
* `name`: Name of this group. (string)
* `description`: Optional description of this group. (string)
* `inventory`:  (id)
* `variables`: Group variables in JSON or YAML format. (json)



## Sorting

To specify that groups are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) InventoriesInventoriesRootGroupsList(params *InventoriesInventoriesRootGroupsListParams) (*InventoriesInventoriesRootGroupsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesRootGroupsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_root_groups_list",
		Method:             "GET",
		PathPattern:        "/api/v2/inventories/{id}/root_groups/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesRootGroupsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesRootGroupsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_root_groups_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesScriptRead generates inventory group and host data as needed for an inventory script


Refer to [Dynamic Inventory](http://docs.ansible.com/intro_dynamic_inventory.html)
for more information on inventory scripts.

## List Response

Make a GET request to this resource without query parameters to retrieve a JSON
object containing groups, including the hosts, children and variables for each
group.  The response data is equivalent to that returned by passing the
`--list` argument to an inventory script.

Specify a query string of `?hostvars=1` to retrieve the JSON
object above including all host variables.  The `['_meta']['hostvars']` object
in the response contains an entry for each host with its variables.  This
response format can be used with Ansible 1.3 and later to avoid making a
separate API request for each host.  Refer to
[Tuning the External Inventory Script](http://docs.ansible.com/developing_inventory.html#tuning-the-external-inventory-script)
for more information on this feature.

By default, the inventory script will only return hosts that
are enabled in the inventory.  This feature allows disabled hosts to be skipped
when running jobs without removing them from the inventory.  Specify a query
string of `?all=1` to return all hosts, including disabled ones.

Specify a query string of `?towervars=1` to add variables
to the hostvars of each host that specifies its enabled state and database ID.

Specify a query string of `?subset=slice2of5` to produce an inventory that
has a restricted number of hosts according to the rules of job slicing.

To apply multiple query strings, join them with the `&` character, like `?hostvars=1&all=1`.

## Host Response

Make a GET request to this resource with a query string similar to
`?host=HOSTNAME` to retrieve a JSON object containing host variables for the
specified host.  The response data is equivalent to that returned by passing
the `--host HOSTNAME` argument to an inventory script.
*/
func (a *Client) InventoriesInventoriesScriptRead(params *InventoriesInventoriesScriptReadParams) (*InventoriesInventoriesScriptReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesScriptReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_script_read",
		Method:             "GET",
		PathPattern:        "/api/v2/inventories/{id}/script/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesScriptReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesScriptReadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_script_read: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesTreeRead groups tree for an inventory


Make a GET request to this resource to retrieve a hierarchical view of groups
associated with the selected inventory.

The resulting data structure contains a list of root groups, with each group
also containing a list of its children.

## Results

Each group data structure includes the following fields:

* `id`: Database ID for this group. (integer)
* `type`: Data type for this group. (choice)
* `url`: URL for this group. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this group was created. (datetime)
* `modified`: Timestamp when this group was last modified. (datetime)
* `name`: Name of this group. (string)
* `description`: Optional description of this group. (string)
* `inventory`:  (id)
* `variables`: Group variables in JSON or YAML format. (json)
* `children`:  (field)
*/
func (a *Client) InventoriesInventoriesTreeRead(params *InventoriesInventoriesTreeReadParams) (*InventoriesInventoriesTreeReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesTreeReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_tree_read",
		Method:             "GET",
		PathPattern:        "/api/v2/inventories/{id}/tree/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesTreeReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesTreeReadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_tree_read: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesUpdate updates an inventory


Make a PUT or PATCH request to this resource to update this
inventory.  The following fields may be modified:









* `name`: Name of this inventory. (string, required)
* `description`: Optional description of this inventory. (string, default=`""`)
* `organization`: Organization containing this inventory. (id, required)
* `kind`: Kind of inventory being represented. (choice)
    - `""`: Hosts have a direct link to this inventory. (default)
    - `smart`: Hosts for inventory generated using the host_filter property.
* `host_filter`: Filter that will be applied to the hosts of this inventory. (string, default=`""`)
* `variables`: Inventory variables in JSON or YAML format. (json, default=``)







* `insights_credential`: Credentials to be used by hosts belonging to this inventory when accessing Red Hat Insights API. (id, default=``)







For a PUT request, include **all** fields in the request.
*/
func (a *Client) InventoriesInventoriesUpdate(params *InventoriesInventoriesUpdateParams) (*InventoriesInventoriesUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_update",
		Method:             "PUT",
		PathPattern:        "/api/v2/inventories/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesUpdateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesUpdateInventorySourcesCreate updates inventory sources


Make a GET request to this resource to determine if any of the inventory sources for
this inventory can be updated. The response will include the following fields for each
inventory source:

* `inventory_source`: ID of the inventory_source
  (integer, read-only)
* `can_update`: Flag indicating if this inventory source can be updated
  (boolean, read-only)

Make a POST request to this resource to update the inventory sources. The response
status code will be a 202. The response will contain the follow fields for each of the individual
inventory sources:

* `status`: `started` or message why the update could not be started.
  (string, read-only)
* `inventory_update`: ID of the inventory update job that was started.
  (integer, read-only)
* `project_update`: ID of the project update job that was started if this inventory source is an SCM source.
  (interger, read-only, optional)
*/
func (a *Client) InventoriesInventoriesUpdateInventorySourcesCreate(params *InventoriesInventoriesUpdateInventorySourcesCreateParams) (*InventoriesInventoriesUpdateInventorySourcesCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesUpdateInventorySourcesCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_update_inventory_sources_create",
		Method:             "POST",
		PathPattern:        "/api/v2/inventories/{id}/update_inventory_sources/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesUpdateInventorySourcesCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesUpdateInventorySourcesCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_update_inventory_sources_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesUpdateInventorySourcesRead updates inventory sources


Make a GET request to this resource to determine if any of the inventory sources for
this inventory can be updated. The response will include the following fields for each
inventory source:

* `inventory_source`: ID of the inventory_source
  (integer, read-only)
* `can_update`: Flag indicating if this inventory source can be updated
  (boolean, read-only)

Make a POST request to this resource to update the inventory sources. The response
status code will be a 202. The response will contain the follow fields for each of the individual
inventory sources:

* `status`: `started` or message why the update could not be started.
  (string, read-only)
* `inventory_update`: ID of the inventory update job that was started.
  (integer, read-only)
* `project_update`: ID of the project update job that was started if this inventory source is an SCM source.
  (interger, read-only, optional)
*/
func (a *Client) InventoriesInventoriesUpdateInventorySourcesRead(params *InventoriesInventoriesUpdateInventorySourcesReadParams) (*InventoriesInventoriesUpdateInventorySourcesReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesUpdateInventorySourcesReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_update_inventory_sources_read",
		Method:             "GET",
		PathPattern:        "/api/v2/inventories/{id}/update_inventory_sources/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesUpdateInventorySourcesReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesUpdateInventorySourcesReadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_update_inventory_sources_read: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesVariableDataPartialUpdate updates inventory variable data


Make a PUT or PATCH request to this resource to update variables defined for a
inventory.
*/
func (a *Client) InventoriesInventoriesVariableDataPartialUpdate(params *InventoriesInventoriesVariableDataPartialUpdateParams) (*InventoriesInventoriesVariableDataPartialUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesVariableDataPartialUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_variable_data_partial_update",
		Method:             "PATCH",
		PathPattern:        "/api/v2/inventories/{id}/variable_data/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesVariableDataPartialUpdateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesVariableDataPartialUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_variable_data_partial_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesVariableDataRead retrieves inventory variable data


Make a GET request to this resource to retrieve all variables defined for a
inventory.
*/
func (a *Client) InventoriesInventoriesVariableDataRead(params *InventoriesInventoriesVariableDataReadParams) (*InventoriesInventoriesVariableDataReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesVariableDataReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_variable_data_read",
		Method:             "GET",
		PathPattern:        "/api/v2/inventories/{id}/variable_data/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesVariableDataReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesVariableDataReadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_variable_data_read: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  InventoriesInventoriesVariableDataUpdate updates inventory variable data


Make a PUT or PATCH request to this resource to update variables defined for a
inventory.
*/
func (a *Client) InventoriesInventoriesVariableDataUpdate(params *InventoriesInventoriesVariableDataUpdateParams) (*InventoriesInventoriesVariableDataUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewInventoriesInventoriesVariableDataUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Inventories_inventories_variable_data_update",
		Method:             "PUT",
		PathPattern:        "/api/v2/inventories/{id}/variable_data/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &InventoriesInventoriesVariableDataUpdateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*InventoriesInventoriesVariableDataUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Inventories_inventories_variable_data_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
