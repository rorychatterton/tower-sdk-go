// Code generated by go-swagger; DO NOT EDIT.

package inventory_sources

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// InventorySourcesInventorySourcesUpdate0Reader is a Reader for the InventorySourcesInventorySourcesUpdate0 structure.
type InventorySourcesInventorySourcesUpdate0Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InventorySourcesInventorySourcesUpdate0Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInventorySourcesInventorySourcesUpdate0OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewInventorySourcesInventorySourcesUpdate0OK creates a InventorySourcesInventorySourcesUpdate0OK with default headers values
func NewInventorySourcesInventorySourcesUpdate0OK() *InventorySourcesInventorySourcesUpdate0OK {
	return &InventorySourcesInventorySourcesUpdate0OK{}
}

/*InventorySourcesInventorySourcesUpdate0OK handles this case with default header values.

OK
*/
type InventorySourcesInventorySourcesUpdate0OK struct {
}

func (o *InventorySourcesInventorySourcesUpdate0OK) Error() string {
	return fmt.Sprintf("[PUT /api/v2/inventory_sources/{id}/][%d] inventorySourcesInventorySourcesUpdate0OK ", 200)
}

func (o *InventorySourcesInventorySourcesUpdate0OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*InventorySourcesInventorySourcesUpdate0Body inventory sources inventory sources update0 body
swagger:model InventorySourcesInventorySourcesUpdate0Body
*/
type InventorySourcesInventorySourcesUpdate0Body struct {

	// Cloud credential to use for inventory updates.
	Credential int64 `json:"credential,omitempty"`

	// Local absolute file path containing a custom Python virtualenv to use
	CustomVirtualenv string `json:"custom_virtualenv,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// Limit groups automatically created from inventory source (EC2 only).
	GroupBy string `json:"group_by,omitempty"`

	// Comma-separated list of filter expressions (EC2 only). Hosts are imported when ANY of the filters match.
	InstanceFilters string `json:"instance_filters,omitempty"`

	// inventory
	// Required: true
	Inventory *int64 `json:"inventory"`

	// name
	// Required: true
	Name *string `json:"name"`

	// Overwrite local groups and hosts from remote inventory source.
	Overwrite string `json:"overwrite,omitempty"`

	// Overwrite local variables from remote inventory source.
	OverwriteVars string `json:"overwrite_vars,omitempty"`

	// source
	Source string `json:"source,omitempty"`

	// source path
	SourcePath string `json:"source_path,omitempty"`

	// Project containing inventory file used as source.
	SourceProject string `json:"source_project,omitempty"`

	// source regions
	SourceRegions string `json:"source_regions,omitempty"`

	// source script
	SourceScript int64 `json:"source_script,omitempty"`

	// Inventory source variables in YAML or JSON format.
	SourceVars string `json:"source_vars,omitempty"`

	// The amount of time (in seconds) to run before the task is canceled.
	Timeout int64 `json:"timeout,omitempty"`

	// update cache timeout
	UpdateCacheTimeout int64 `json:"update_cache_timeout,omitempty"`

	// update on launch
	UpdateOnLaunch string `json:"update_on_launch,omitempty"`

	// update on project update
	UpdateOnProjectUpdate string `json:"update_on_project_update,omitempty"`

	// verbosity
	Verbosity string `json:"verbosity,omitempty"`
}

// Validate validates this inventory sources inventory sources update0 body
func (o *InventorySourcesInventorySourcesUpdate0Body) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateInventory(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InventorySourcesInventorySourcesUpdate0Body) validateInventory(formats strfmt.Registry) error {

	if err := validate.Required("data"+"."+"inventory", "body", o.Inventory); err != nil {
		return err
	}

	return nil
}

func (o *InventorySourcesInventorySourcesUpdate0Body) validateName(formats strfmt.Registry) error {

	if err := validate.Required("data"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *InventorySourcesInventorySourcesUpdate0Body) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InventorySourcesInventorySourcesUpdate0Body) UnmarshalBinary(b []byte) error {
	var res InventorySourcesInventorySourcesUpdate0Body
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
