// Code generated by go-swagger; DO NOT EDIT.

package job_templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// JobTemplatesJobTemplatesInstanceGroupsCreateReader is a Reader for the JobTemplatesJobTemplatesInstanceGroupsCreate structure.
type JobTemplatesJobTemplatesInstanceGroupsCreateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *JobTemplatesJobTemplatesInstanceGroupsCreateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewJobTemplatesJobTemplatesInstanceGroupsCreateCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewJobTemplatesJobTemplatesInstanceGroupsCreateCreated creates a JobTemplatesJobTemplatesInstanceGroupsCreateCreated with default headers values
func NewJobTemplatesJobTemplatesInstanceGroupsCreateCreated() *JobTemplatesJobTemplatesInstanceGroupsCreateCreated {
	return &JobTemplatesJobTemplatesInstanceGroupsCreateCreated{}
}

/*JobTemplatesJobTemplatesInstanceGroupsCreateCreated handles this case with default header values.

JobTemplatesJobTemplatesInstanceGroupsCreateCreated job templates job templates instance groups create created
*/
type JobTemplatesJobTemplatesInstanceGroupsCreateCreated struct {
}

func (o *JobTemplatesJobTemplatesInstanceGroupsCreateCreated) Error() string {
	return fmt.Sprintf("[POST /api/v2/job_templates/{id}/instance_groups/][%d] jobTemplatesJobTemplatesInstanceGroupsCreateCreated ", 201)
}

func (o *JobTemplatesJobTemplatesInstanceGroupsCreateCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
