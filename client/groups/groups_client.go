// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new groups API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for groups API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	GroupsGroupsActivityStreamList(params *GroupsGroupsActivityStreamListParams) (*GroupsGroupsActivityStreamListOK, error)

	GroupsGroupsAdHocCommandsCreate(params *GroupsGroupsAdHocCommandsCreateParams) (*GroupsGroupsAdHocCommandsCreateCreated, error)

	GroupsGroupsAdHocCommandsList(params *GroupsGroupsAdHocCommandsListParams) (*GroupsGroupsAdHocCommandsListOK, error)

	GroupsGroupsAllHostsList(params *GroupsGroupsAllHostsListParams) (*GroupsGroupsAllHostsListOK, error)

	GroupsGroupsChildrenCreate(params *GroupsGroupsChildrenCreateParams) (*GroupsGroupsChildrenCreateCreated, error)

	GroupsGroupsChildrenList(params *GroupsGroupsChildrenListParams) (*GroupsGroupsChildrenListOK, error)

	GroupsGroupsCreate(params *GroupsGroupsCreateParams) (*GroupsGroupsCreateCreated, error)

	GroupsGroupsDelete(params *GroupsGroupsDeleteParams) (*GroupsGroupsDeleteNoContent, error)

	GroupsGroupsHostsCreate(params *GroupsGroupsHostsCreateParams) (*GroupsGroupsHostsCreateCreated, error)

	GroupsGroupsHostsList(params *GroupsGroupsHostsListParams) (*GroupsGroupsHostsListOK, error)

	GroupsGroupsInventorySourcesList(params *GroupsGroupsInventorySourcesListParams) (*GroupsGroupsInventorySourcesListOK, error)

	GroupsGroupsJobEventsList(params *GroupsGroupsJobEventsListParams) (*GroupsGroupsJobEventsListOK, error)

	GroupsGroupsJobHostSummariesList(params *GroupsGroupsJobHostSummariesListParams) (*GroupsGroupsJobHostSummariesListOK, error)

	GroupsGroupsList(params *GroupsGroupsListParams) (*GroupsGroupsListOK, error)

	GroupsGroupsPartialUpdate(params *GroupsGroupsPartialUpdateParams) (*GroupsGroupsPartialUpdateOK, error)

	GroupsGroupsPotentialChildrenList(params *GroupsGroupsPotentialChildrenListParams) (*GroupsGroupsPotentialChildrenListOK, error)

	GroupsGroupsRead(params *GroupsGroupsReadParams) (*GroupsGroupsReadOK, error)

	GroupsGroupsUpdate(params *GroupsGroupsUpdateParams) (*GroupsGroupsUpdateOK, error)

	GroupsGroupsVariableDataPartialUpdate(params *GroupsGroupsVariableDataPartialUpdateParams) (*GroupsGroupsVariableDataPartialUpdateOK, error)

	GroupsGroupsVariableDataRead(params *GroupsGroupsVariableDataReadParams) (*GroupsGroupsVariableDataReadOK, error)

	GroupsGroupsVariableDataUpdate(params *GroupsGroupsVariableDataUpdateParams) (*GroupsGroupsVariableDataUpdateOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  GroupsGroupsActivityStreamList lists activity streams for a group


Make a GET request to this resource to retrieve a list of
activity streams associated with the selected
group.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of activity streams
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more activity stream records.

## Results

Each activity stream data structure includes the following fields:

* `id`: Database ID for this activity stream. (integer)
* `type`: Data type for this activity stream. (choice)
* `url`: URL for this activity stream. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `timestamp`:  (datetime)
* `operation`: The action taken with respect to the given object(s). (choice)
    - `create`: Entity Created
    - `update`: Entity Updated
    - `delete`: Entity Deleted
    - `associate`: Entity Associated with another Entity
    - `disassociate`: Entity was Disassociated with another Entity
* `changes`: A summary of the new and changed values when an object is created, updated, or deleted (json)
* `object1`: For create, update, and delete events this is the object type that was affected. For associate and disassociate events this is the object type associated or disassociated with object2. (string)
* `object2`: Unpopulated for create, update, and delete events. For associate and disassociate events this is the object type that object1 is being associated with. (string)
* `object_association`: When present, shows the field name of the role or relationship that changed. (field)
* `action_node`: The cluster node the activity took place on. (string)
* `object_type`: When present, shows the model on which the role or relationship was defined. (field)



## Sorting

To specify that activity streams are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) GroupsGroupsActivityStreamList(params *GroupsGroupsActivityStreamListParams) (*GroupsGroupsActivityStreamListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGroupsGroupsActivityStreamListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Groups_groups_activity_stream_list",
		Method:             "GET",
		PathPattern:        "/api/v2/groups/{id}/activity_stream/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GroupsGroupsActivityStreamListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GroupsGroupsActivityStreamListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Groups_groups_activity_stream_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GroupsGroupsAdHocCommandsCreate creates an ad hoc command for a group


Make a POST request to this resource with the following ad hoc command
fields to create a new ad hoc command associated with this
group.




















* `job_type`:  (choice)
    - `run`: Run (default)
    - `check`: Check
* `inventory`:  (id, default=``)
* `limit`:  (string, default=`""`)
* `credential`:  (id, default=``)
* `module_name`:  (choice)
    - `command` (default)
    - `shell`
    - `yum`
    - `apt`
    - `apt_key`
    - `apt_repository`
    - `apt_rpm`
    - `service`
    - `group`
    - `user`
    - `mount`
    - `ping`
    - `selinux`
    - `setup`
    - `win_ping`
    - `win_service`
    - `win_updates`
    - `win_group`
    - `win_user`
* `module_args`:  (string, default=`""`)
* `forks`:  (integer, default=`0`)
* `verbosity`:  (choice)
    - `0`: 0 (Normal) (default)
    - `1`: 1 (Verbose)
    - `2`: 2 (More Verbose)
    - `3`: 3 (Debug)
    - `4`: 4 (Connection Debug)
    - `5`: 5 (WinRM Debug)
* `extra_vars`:  (string, default=`""`)
* `become_enabled`:  (boolean, default=`False`)
* `diff_mode`:  (boolean, default=`False`)
*/
func (a *Client) GroupsGroupsAdHocCommandsCreate(params *GroupsGroupsAdHocCommandsCreateParams) (*GroupsGroupsAdHocCommandsCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGroupsGroupsAdHocCommandsCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Groups_groups_ad_hoc_commands_create",
		Method:             "POST",
		PathPattern:        "/api/v2/groups/{id}/ad_hoc_commands/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GroupsGroupsAdHocCommandsCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GroupsGroupsAdHocCommandsCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Groups_groups_ad_hoc_commands_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GroupsGroupsAdHocCommandsList lists ad hoc commands for a group


Make a GET request to this resource to retrieve a list of
ad hoc commands associated with the selected
group.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of ad hoc commands
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more ad hoc command records.

## Results

Each ad hoc command data structure includes the following fields:

* `id`: Database ID for this ad hoc command. (integer)
* `type`: Data type for this ad hoc command. (choice)
* `url`: URL for this ad hoc command. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this ad hoc command was created. (datetime)
* `modified`: Timestamp when this ad hoc command was last modified. (datetime)
* `name`: Name of this ad hoc command. (string)
* `launch_type`:  (choice)
    - `manual`: Manual
    - `relaunch`: Relaunch
    - `callback`: Callback
    - `scheduled`: Scheduled
    - `dependency`: Dependency
    - `workflow`: Workflow
    - `webhook`: Webhook
    - `sync`: Sync
    - `scm`: SCM Update
* `status`:  (choice)
    - `new`: New
    - `pending`: Pending
    - `waiting`: Waiting
    - `running`: Running
    - `successful`: Successful
    - `failed`: Failed
    - `error`: Error
    - `canceled`: Canceled
* `failed`:  (boolean)
* `started`: The date and time the job was queued for starting. (datetime)
* `finished`: The date and time the job finished execution. (datetime)
* `canceled_on`: The date and time when the cancel request was sent. (datetime)
* `elapsed`: Elapsed time in seconds that the job ran. (decimal)
* `job_explanation`: A status field to indicate the state of the job if it wasn&#39;t able to run and capture stdout (string)
* `execution_node`: The node the job executed on. (string)
* `controller_node`: The instance that managed the isolated execution environment. (string)
* `job_type`:  (choice)
    - `run`: Run
    - `check`: Check
* `inventory`:  (id)
* `limit`:  (string)
* `credential`:  (id)
* `module_name`:  (choice)
    - `command`
    - `shell`
    - `yum`
    - `apt`
    - `apt_key`
    - `apt_repository`
    - `apt_rpm`
    - `service`
    - `group`
    - `user`
    - `mount`
    - `ping`
    - `selinux`
    - `setup`
    - `win_ping`
    - `win_service`
    - `win_updates`
    - `win_group`
    - `win_user`
* `module_args`:  (string)
* `forks`:  (integer)
* `verbosity`:  (choice)
    - `0`: 0 (Normal)
    - `1`: 1 (Verbose)
    - `2`: 2 (More Verbose)
    - `3`: 3 (Debug)
    - `4`: 4 (Connection Debug)
    - `5`: 5 (WinRM Debug)
* `extra_vars`:  (string)
* `become_enabled`:  (boolean)
* `diff_mode`:  (boolean)



## Sorting

To specify that ad hoc commands are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) GroupsGroupsAdHocCommandsList(params *GroupsGroupsAdHocCommandsListParams) (*GroupsGroupsAdHocCommandsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGroupsGroupsAdHocCommandsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Groups_groups_ad_hoc_commands_list",
		Method:             "GET",
		PathPattern:        "/api/v2/groups/{id}/ad_hoc_commands/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GroupsGroupsAdHocCommandsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GroupsGroupsAdHocCommandsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Groups_groups_ad_hoc_commands_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GroupsGroupsAllHostsList lists all hosts for a group


Make a GET request to this resource to retrieve a list of all
hosts directly or indirectly belonging to this
group.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of hosts
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more host records.

## Results

Each host data structure includes the following fields:

* `id`: Database ID for this host. (integer)
* `type`: Data type for this host. (choice)
* `url`: URL for this host. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this host was created. (datetime)
* `modified`: Timestamp when this host was last modified. (datetime)
* `name`: Name of this host. (string)
* `description`: Optional description of this host. (string)
* `inventory`:  (id)
* `enabled`: Is this host online and available for running jobs? (boolean)
* `instance_id`: The value used by the remote inventory source to uniquely identify the host (string)
* `variables`: Host variables in JSON or YAML format. (json)
* `has_active_failures`:  (field)
* `has_inventory_sources`:  (field)
* `last_job`:  (id)
* `last_job_host_summary`:  (id)
* `insights_system_id`: Red Hat Insights host unique identifier. (string)
* `ansible_facts_modified`: The date and time ansible_facts was last modified. (datetime)



## Sorting

To specify that hosts are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) GroupsGroupsAllHostsList(params *GroupsGroupsAllHostsListParams) (*GroupsGroupsAllHostsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGroupsGroupsAllHostsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Groups_groups_all_hosts_list",
		Method:             "GET",
		PathPattern:        "/api/v2/groups/{id}/all_hosts/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GroupsGroupsAllHostsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GroupsGroupsAllHostsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Groups_groups_all_hosts_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GroupsGroupsChildrenCreate creates a group for a group


Make a POST request to this resource with the following group
fields to create a new group associated with this
group.









* `name`: Name of this group. (string, required)
* `description`: Optional description of this group. (string, default=`""`)
* `inventory`:  (id, required)
* `variables`: Group variables in JSON or YAML format. (json, default=``)








# Add Groups for a Group:

Make a POST request to this resource with only an `id` field to associate an
existing group with this group.

# Remove Groups from this Group:

Make a POST request to this resource with `id` and `disassociate` fields to
remove the group from this group
 without deleting the group.
*/
func (a *Client) GroupsGroupsChildrenCreate(params *GroupsGroupsChildrenCreateParams) (*GroupsGroupsChildrenCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGroupsGroupsChildrenCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Groups_groups_children_create",
		Method:             "POST",
		PathPattern:        "/api/v2/groups/{id}/children/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GroupsGroupsChildrenCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GroupsGroupsChildrenCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Groups_groups_children_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GroupsGroupsChildrenList lists groups for a group


Make a GET request to this resource to retrieve a list of
groups associated with the selected
group.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of groups
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more group records.

## Results

Each group data structure includes the following fields:

* `id`: Database ID for this group. (integer)
* `type`: Data type for this group. (choice)
* `url`: URL for this group. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this group was created. (datetime)
* `modified`: Timestamp when this group was last modified. (datetime)
* `name`: Name of this group. (string)
* `description`: Optional description of this group. (string)
* `inventory`:  (id)
* `variables`: Group variables in JSON or YAML format. (json)



## Sorting

To specify that groups are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) GroupsGroupsChildrenList(params *GroupsGroupsChildrenListParams) (*GroupsGroupsChildrenListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGroupsGroupsChildrenListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Groups_groups_children_list",
		Method:             "GET",
		PathPattern:        "/api/v2/groups/{id}/children/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GroupsGroupsChildrenListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GroupsGroupsChildrenListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Groups_groups_children_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GroupsGroupsCreate creates a group


Make a POST request to this resource with the following group
fields to create a new group:









* `name`: Name of this group. (string, required)
* `description`: Optional description of this group. (string, default=`""`)
* `inventory`:  (id, required)
* `variables`: Group variables in JSON or YAML format. (json, default=``)
*/
func (a *Client) GroupsGroupsCreate(params *GroupsGroupsCreateParams) (*GroupsGroupsCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGroupsGroupsCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Groups_groups_create",
		Method:             "POST",
		PathPattern:        "/api/v2/groups/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GroupsGroupsCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GroupsGroupsCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Groups_groups_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GroupsGroupsDelete deletes a group


Make a DELETE request to this resource to delete this group.
*/
func (a *Client) GroupsGroupsDelete(params *GroupsGroupsDeleteParams) (*GroupsGroupsDeleteNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGroupsGroupsDeleteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Groups_groups_delete",
		Method:             "DELETE",
		PathPattern:        "/api/v2/groups/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GroupsGroupsDeleteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GroupsGroupsDeleteNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Groups_groups_delete: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GroupsGroupsHostsCreate creates a host for a group


Make a POST request to this resource with the following host
fields to create a new host associated with this
group.









* `name`: Name of this host. (string, required)
* `description`: Optional description of this host. (string, default=`""`)
* `inventory`:  (id, required)
* `enabled`: Is this host online and available for running jobs? (boolean, default=`True`)
* `instance_id`: The value used by the remote inventory source to uniquely identify the host (string, default=`""`)
* `variables`: Host variables in JSON or YAML format. (json, default=``)














# Add Hosts for a Group:

Make a POST request to this resource with only an `id` field to associate an
existing host with this group.

# Remove Hosts from this Group:

Make a POST request to this resource with `id` and `disassociate` fields to
remove the host from this group
 without deleting the host.
*/
func (a *Client) GroupsGroupsHostsCreate(params *GroupsGroupsHostsCreateParams) (*GroupsGroupsHostsCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGroupsGroupsHostsCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Groups_groups_hosts_create",
		Method:             "POST",
		PathPattern:        "/api/v2/groups/{id}/hosts/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GroupsGroupsHostsCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GroupsGroupsHostsCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Groups_groups_hosts_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GroupsGroupsHostsList lists hosts for a group


Make a GET request to this resource to retrieve a list of
hosts associated with the selected
group.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of hosts
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more host records.

## Results

Each host data structure includes the following fields:

* `id`: Database ID for this host. (integer)
* `type`: Data type for this host. (choice)
* `url`: URL for this host. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this host was created. (datetime)
* `modified`: Timestamp when this host was last modified. (datetime)
* `name`: Name of this host. (string)
* `description`: Optional description of this host. (string)
* `inventory`:  (id)
* `enabled`: Is this host online and available for running jobs? (boolean)
* `instance_id`: The value used by the remote inventory source to uniquely identify the host (string)
* `variables`: Host variables in JSON or YAML format. (json)
* `has_active_failures`:  (field)
* `has_inventory_sources`:  (field)
* `last_job`:  (id)
* `last_job_host_summary`:  (id)
* `insights_system_id`: Red Hat Insights host unique identifier. (string)
* `ansible_facts_modified`: The date and time ansible_facts was last modified. (datetime)



## Sorting

To specify that hosts are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) GroupsGroupsHostsList(params *GroupsGroupsHostsListParams) (*GroupsGroupsHostsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGroupsGroupsHostsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Groups_groups_hosts_list",
		Method:             "GET",
		PathPattern:        "/api/v2/groups/{id}/hosts/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GroupsGroupsHostsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GroupsGroupsHostsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Groups_groups_hosts_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GroupsGroupsInventorySourcesList lists inventory sources for a group


Make a GET request to this resource to retrieve a list of
inventory sources associated with the selected
group.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of inventory sources
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more inventory source records.

## Results

Each inventory source data structure includes the following fields:

* `id`: Database ID for this inventory source. (integer)
* `type`: Data type for this inventory source. (choice)
* `url`: URL for this inventory source. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this inventory source was created. (datetime)
* `modified`: Timestamp when this inventory source was last modified. (datetime)
* `name`: Name of this inventory source. (string)
* `description`: Optional description of this inventory source. (string)
* `source`:  (choice)
    - `file`: File, Directory or Script
    - `scm`: Sourced from a Project
    - `ec2`: Amazon EC2
    - `gce`: Google Compute Engine
    - `azure_rm`: Microsoft Azure Resource Manager
    - `vmware`: VMware vCenter
    - `satellite6`: Red Hat Satellite 6
    - `cloudforms`: Red Hat CloudForms
    - `openstack`: OpenStack
    - `rhv`: Red Hat Virtualization
    - `tower`: Ansible Tower
    - `custom`: Custom Script
* `source_path`:  (string)
* `source_script`:  (id)
* `source_vars`: Inventory source variables in YAML or JSON format. (string)
* `credential`: Cloud credential to use for inventory updates. (integer)
* `source_regions`:  (string)
* `instance_filters`: Comma-separated list of filter expressions (EC2 only). Hosts are imported when ANY of the filters match. (string)
* `group_by`: Limit groups automatically created from inventory source (EC2 only). (string)
* `overwrite`: Overwrite local groups and hosts from remote inventory source. (boolean)
* `overwrite_vars`: Overwrite local variables from remote inventory source. (boolean)
* `custom_virtualenv`: Local absolute file path containing a custom Python virtualenv to use (string)
* `timeout`: The amount of time (in seconds) to run before the task is canceled. (integer)
* `verbosity`:  (choice)
    - `0`: 0 (WARNING)
    - `1`: 1 (INFO)
    - `2`: 2 (DEBUG)
* `last_job_run`:  (datetime)
* `last_job_failed`:  (boolean)
* `next_job_run`:  (datetime)
* `status`:  (choice)
    - `new`: New
    - `pending`: Pending
    - `waiting`: Waiting
    - `running`: Running
    - `successful`: Successful
    - `failed`: Failed
    - `error`: Error
    - `canceled`: Canceled
    - `never updated`: Never Updated
    - `none`: No External Source
* `inventory`:  (id)
* `update_on_launch`:  (boolean)
* `update_cache_timeout`:  (integer)
* `source_project`: Project containing inventory file used as source. (id)
* `update_on_project_update`:  (boolean)
* `last_update_failed`:  (boolean)
* `last_updated`:  (datetime)



## Sorting

To specify that inventory sources are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) GroupsGroupsInventorySourcesList(params *GroupsGroupsInventorySourcesListParams) (*GroupsGroupsInventorySourcesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGroupsGroupsInventorySourcesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Groups_groups_inventory_sources_list",
		Method:             "GET",
		PathPattern:        "/api/v2/groups/{id}/inventory_sources/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GroupsGroupsInventorySourcesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GroupsGroupsInventorySourcesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Groups_groups_inventory_sources_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GroupsGroupsJobEventsList lists job events for a group


Make a GET request to this resource to retrieve a list of
job events associated with the selected
group.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of job events
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more job event records.

## Results

Each job event data structure includes the following fields:

* `id`: Database ID for this job event. (integer)
* `type`: Data type for this job event. (choice)
* `url`: URL for this job event. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this job event was created. (datetime)
* `modified`: Timestamp when this job event was last modified. (datetime)
* `job`:  (id)
* `event`:  (choice)
    - `runner_on_failed`: Host Failed
    - `runner_on_start`: Host Started
    - `runner_on_ok`: Host OK
    - `runner_on_error`: Host Failure
    - `runner_on_skipped`: Host Skipped
    - `runner_on_unreachable`: Host Unreachable
    - `runner_on_no_hosts`: No Hosts Remaining
    - `runner_on_async_poll`: Host Polling
    - `runner_on_async_ok`: Host Async OK
    - `runner_on_async_failed`: Host Async Failure
    - `runner_item_on_ok`: Item OK
    - `runner_item_on_failed`: Item Failed
    - `runner_item_on_skipped`: Item Skipped
    - `runner_retry`: Host Retry
    - `runner_on_file_diff`: File Difference
    - `playbook_on_start`: Playbook Started
    - `playbook_on_notify`: Running Handlers
    - `playbook_on_include`: Including File
    - `playbook_on_no_hosts_matched`: No Hosts Matched
    - `playbook_on_no_hosts_remaining`: No Hosts Remaining
    - `playbook_on_task_start`: Task Started
    - `playbook_on_vars_prompt`: Variables Prompted
    - `playbook_on_setup`: Gathering Facts
    - `playbook_on_import_for_host`: internal: on Import for Host
    - `playbook_on_not_import_for_host`: internal: on Not Import for Host
    - `playbook_on_play_start`: Play Started
    - `playbook_on_stats`: Playbook Complete
    - `debug`: Debug
    - `verbose`: Verbose
    - `deprecated`: Deprecated
    - `warning`: Warning
    - `system_warning`: System Warning
    - `error`: Error
* `counter`:  (integer)
* `event_display`:  (string)
* `event_data`:  (json)
* `event_level`:  (integer)
* `failed`:  (boolean)
* `changed`:  (boolean)
* `uuid`:  (string)
* `parent_uuid`:  (string)
* `host`:  (id)
* `host_name`:  (string)
* `playbook`:  (string)
* `play`:  (string)
* `task`:  (string)
* `role`:  (string)
* `stdout`:  (string)
* `start_line`:  (integer)
* `end_line`:  (integer)
* `verbosity`:  (integer)



## Sorting

To specify that job events are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) GroupsGroupsJobEventsList(params *GroupsGroupsJobEventsListParams) (*GroupsGroupsJobEventsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGroupsGroupsJobEventsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Groups_groups_job_events_list",
		Method:             "GET",
		PathPattern:        "/api/v2/groups/{id}/job_events/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GroupsGroupsJobEventsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GroupsGroupsJobEventsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Groups_groups_job_events_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GroupsGroupsJobHostSummariesList lists job host summaries for a group


Make a GET request to this resource to retrieve a list of
job host summaries associated with the selected
group.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of job host summaries
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more job host summary records.

## Results

Each job host summary data structure includes the following fields:

* `id`: Database ID for this job host summary. (integer)
* `type`: Data type for this job host summary. (choice)
* `url`: URL for this job host summary. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this job host summary was created. (datetime)
* `modified`: Timestamp when this job host summary was last modified. (datetime)
* `job`:  (id)
* `host`:  (id)
* `host_name`:  (string)
* `changed`:  (integer)
* `dark`:  (integer)
* `failures`:  (integer)
* `ok`:  (integer)
* `processed`:  (integer)
* `skipped`:  (integer)
* `failed`:  (boolean)
* `ignored`:  (integer)
* `rescued`:  (integer)



## Sorting

To specify that job host summaries are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) GroupsGroupsJobHostSummariesList(params *GroupsGroupsJobHostSummariesListParams) (*GroupsGroupsJobHostSummariesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGroupsGroupsJobHostSummariesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Groups_groups_job_host_summaries_list",
		Method:             "GET",
		PathPattern:        "/api/v2/groups/{id}/job_host_summaries/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GroupsGroupsJobHostSummariesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GroupsGroupsJobHostSummariesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Groups_groups_job_host_summaries_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GroupsGroupsList lists groups


Make a GET request to this resource to retrieve the list of
groups.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of groups
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more group records.

## Results

Each group data structure includes the following fields:

* `id`: Database ID for this group. (integer)
* `type`: Data type for this group. (choice)
* `url`: URL for this group. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this group was created. (datetime)
* `modified`: Timestamp when this group was last modified. (datetime)
* `name`: Name of this group. (string)
* `description`: Optional description of this group. (string)
* `inventory`:  (id)
* `variables`: Group variables in JSON or YAML format. (json)



## Sorting

To specify that groups are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) GroupsGroupsList(params *GroupsGroupsListParams) (*GroupsGroupsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGroupsGroupsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Groups_groups_list",
		Method:             "GET",
		PathPattern:        "/api/v2/groups/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GroupsGroupsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GroupsGroupsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Groups_groups_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GroupsGroupsPartialUpdate updates a group


Make a PUT or PATCH request to this resource to update this
group.  The following fields may be modified:









* `name`: Name of this group. (string, required)
* `description`: Optional description of this group. (string, default=`""`)
* `inventory`:  (id, required)
* `variables`: Group variables in JSON or YAML format. (json, default=``)








For a PATCH request, include only the fields that are being modified.
*/
func (a *Client) GroupsGroupsPartialUpdate(params *GroupsGroupsPartialUpdateParams) (*GroupsGroupsPartialUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGroupsGroupsPartialUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Groups_groups_partial_update",
		Method:             "PATCH",
		PathPattern:        "/api/v2/groups/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GroupsGroupsPartialUpdateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GroupsGroupsPartialUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Groups_groups_partial_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GroupsGroupsPotentialChildrenList lists potential child groups for a group


Make a GET request to this resource to retrieve a list of
groups available to be added as children of the
current group.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of groups
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more group records.

## Results

Each group data structure includes the following fields:

* `id`: Database ID for this group. (integer)
* `type`: Data type for this group. (choice)
* `url`: URL for this group. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this group was created. (datetime)
* `modified`: Timestamp when this group was last modified. (datetime)
* `name`: Name of this group. (string)
* `description`: Optional description of this group. (string)
* `inventory`:  (id)
* `variables`: Group variables in JSON or YAML format. (json)



## Sorting

To specify that groups are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) GroupsGroupsPotentialChildrenList(params *GroupsGroupsPotentialChildrenListParams) (*GroupsGroupsPotentialChildrenListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGroupsGroupsPotentialChildrenListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Groups_groups_potential_children_list",
		Method:             "GET",
		PathPattern:        "/api/v2/groups/{id}/potential_children/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GroupsGroupsPotentialChildrenListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GroupsGroupsPotentialChildrenListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Groups_groups_potential_children_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GroupsGroupsRead retrieves a group


Make GET request to this resource to retrieve a single group
record containing the following fields:

* `id`: Database ID for this group. (integer)
* `type`: Data type for this group. (choice)
* `url`: URL for this group. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this group was created. (datetime)
* `modified`: Timestamp when this group was last modified. (datetime)
* `name`: Name of this group. (string)
* `description`: Optional description of this group. (string)
* `inventory`:  (id)
* `variables`: Group variables in JSON or YAML format. (json)
*/
func (a *Client) GroupsGroupsRead(params *GroupsGroupsReadParams) (*GroupsGroupsReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGroupsGroupsReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Groups_groups_read",
		Method:             "GET",
		PathPattern:        "/api/v2/groups/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GroupsGroupsReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GroupsGroupsReadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Groups_groups_read: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GroupsGroupsUpdate updates a group


Make a PUT or PATCH request to this resource to update this
group.  The following fields may be modified:









* `name`: Name of this group. (string, required)
* `description`: Optional description of this group. (string, default=`""`)
* `inventory`:  (id, required)
* `variables`: Group variables in JSON or YAML format. (json, default=``)






For a PUT request, include **all** fields in the request.
*/
func (a *Client) GroupsGroupsUpdate(params *GroupsGroupsUpdateParams) (*GroupsGroupsUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGroupsGroupsUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Groups_groups_update",
		Method:             "PUT",
		PathPattern:        "/api/v2/groups/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GroupsGroupsUpdateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GroupsGroupsUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Groups_groups_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GroupsGroupsVariableDataPartialUpdate updates group variable data


Make a PUT or PATCH request to this resource to update variables defined for a
group.
*/
func (a *Client) GroupsGroupsVariableDataPartialUpdate(params *GroupsGroupsVariableDataPartialUpdateParams) (*GroupsGroupsVariableDataPartialUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGroupsGroupsVariableDataPartialUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Groups_groups_variable_data_partial_update",
		Method:             "PATCH",
		PathPattern:        "/api/v2/groups/{id}/variable_data/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GroupsGroupsVariableDataPartialUpdateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GroupsGroupsVariableDataPartialUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Groups_groups_variable_data_partial_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GroupsGroupsVariableDataRead retrieves group variable data


Make a GET request to this resource to retrieve all variables defined for a
group.
*/
func (a *Client) GroupsGroupsVariableDataRead(params *GroupsGroupsVariableDataReadParams) (*GroupsGroupsVariableDataReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGroupsGroupsVariableDataReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Groups_groups_variable_data_read",
		Method:             "GET",
		PathPattern:        "/api/v2/groups/{id}/variable_data/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GroupsGroupsVariableDataReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GroupsGroupsVariableDataReadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Groups_groups_variable_data_read: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GroupsGroupsVariableDataUpdate updates group variable data


Make a PUT or PATCH request to this resource to update variables defined for a
group.
*/
func (a *Client) GroupsGroupsVariableDataUpdate(params *GroupsGroupsVariableDataUpdateParams) (*GroupsGroupsVariableDataUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGroupsGroupsVariableDataUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Groups_groups_variable_data_update",
		Method:             "PUT",
		PathPattern:        "/api/v2/groups/{id}/variable_data/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GroupsGroupsVariableDataUpdateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GroupsGroupsVariableDataUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Groups_groups_variable_data_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
