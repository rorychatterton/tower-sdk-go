// Code generated by go-swagger; DO NOT EDIT.

package workflow_approval_templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new workflow approval templates API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for workflow approval templates API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	WorkflowApprovalTemplatesWorkflowApprovalTemplatesApprovalsList(params *WorkflowApprovalTemplatesWorkflowApprovalTemplatesApprovalsListParams) (*WorkflowApprovalTemplatesWorkflowApprovalTemplatesApprovalsListOK, error)

	WorkflowApprovalTemplatesWorkflowApprovalTemplatesDelete(params *WorkflowApprovalTemplatesWorkflowApprovalTemplatesDeleteParams) (*WorkflowApprovalTemplatesWorkflowApprovalTemplatesDeleteNoContent, error)

	WorkflowApprovalTemplatesWorkflowApprovalTemplatesPartialUpdate(params *WorkflowApprovalTemplatesWorkflowApprovalTemplatesPartialUpdateParams) (*WorkflowApprovalTemplatesWorkflowApprovalTemplatesPartialUpdateOK, error)

	WorkflowApprovalTemplatesWorkflowApprovalTemplatesRead(params *WorkflowApprovalTemplatesWorkflowApprovalTemplatesReadParams) (*WorkflowApprovalTemplatesWorkflowApprovalTemplatesReadOK, error)

	WorkflowApprovalTemplatesWorkflowApprovalTemplatesUpdate(params *WorkflowApprovalTemplatesWorkflowApprovalTemplatesUpdateParams) (*WorkflowApprovalTemplatesWorkflowApprovalTemplatesUpdateOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  WorkflowApprovalTemplatesWorkflowApprovalTemplatesApprovalsList lists workflow approvals for a workflow approval template


Make a GET request to this resource to retrieve a list of
workflow approvals associated with the selected
workflow approval template.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of workflow approvals
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more workflow approval records.

## Results

Each workflow approval data structure includes the following fields:

* `id`: Database ID for this workflow approval. (integer)
* `type`: Data type for this workflow approval. (choice)
* `url`: URL for this workflow approval. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this workflow approval was created. (datetime)
* `modified`: Timestamp when this workflow approval was last modified. (datetime)
* `name`: Name of this workflow approval. (string)
* `description`: Optional description of this workflow approval. (string)
* `unified_job_template`:  (id)
* `launch_type`:  (choice)
    - `manual`: Manual
    - `relaunch`: Relaunch
    - `callback`: Callback
    - `scheduled`: Scheduled
    - `dependency`: Dependency
    - `workflow`: Workflow
    - `webhook`: Webhook
    - `sync`: Sync
    - `scm`: SCM Update
* `status`:  (choice)
    - `new`: New
    - `pending`: Pending
    - `waiting`: Waiting
    - `running`: Running
    - `successful`: Successful
    - `failed`: Failed
    - `error`: Error
    - `canceled`: Canceled
* `failed`:  (boolean)
* `started`: The date and time the job was queued for starting. (datetime)
* `finished`: The date and time the job finished execution. (datetime)
* `canceled_on`: The date and time when the cancel request was sent. (datetime)
* `elapsed`: Elapsed time in seconds that the job ran. (decimal)
* `job_explanation`: A status field to indicate the state of the job if it wasn&#39;t able to run and capture stdout (string)
* `can_approve_or_deny`:  (field)
* `approval_expiration`:  (field)
* `timed_out`:  (boolean)



## Sorting

To specify that workflow approvals are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) WorkflowApprovalTemplatesWorkflowApprovalTemplatesApprovalsList(params *WorkflowApprovalTemplatesWorkflowApprovalTemplatesApprovalsListParams) (*WorkflowApprovalTemplatesWorkflowApprovalTemplatesApprovalsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowApprovalTemplatesWorkflowApprovalTemplatesApprovalsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Approval Templates_workflow_approval_templates_approvals_list",
		Method:             "GET",
		PathPattern:        "/api/v2/workflow_approval_templates/{id}/approvals/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowApprovalTemplatesWorkflowApprovalTemplatesApprovalsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowApprovalTemplatesWorkflowApprovalTemplatesApprovalsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Approval Templates_workflow_approval_templates_approvals_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowApprovalTemplatesWorkflowApprovalTemplatesDelete deletes a workflow approval template


Make a DELETE request to this resource to delete this workflow approval template.
*/
func (a *Client) WorkflowApprovalTemplatesWorkflowApprovalTemplatesDelete(params *WorkflowApprovalTemplatesWorkflowApprovalTemplatesDeleteParams) (*WorkflowApprovalTemplatesWorkflowApprovalTemplatesDeleteNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowApprovalTemplatesWorkflowApprovalTemplatesDeleteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Approval Templates_workflow_approval_templates_delete",
		Method:             "DELETE",
		PathPattern:        "/api/v2/workflow_approval_templates/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowApprovalTemplatesWorkflowApprovalTemplatesDeleteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowApprovalTemplatesWorkflowApprovalTemplatesDeleteNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Approval Templates_workflow_approval_templates_delete: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowApprovalTemplatesWorkflowApprovalTemplatesPartialUpdate updates a workflow approval template


Make a PUT or PATCH request to this resource to update this
workflow approval template.  The following fields may be modified:









* `name`: Name of this workflow approval template. (string, required)
* `description`: Optional description of this workflow approval template. (string, default=`""`)




* `timeout`: The amount of time (in seconds) before the approval node expires and fails. (integer, default=`0`)








For a PATCH request, include only the fields that are being modified.
*/
func (a *Client) WorkflowApprovalTemplatesWorkflowApprovalTemplatesPartialUpdate(params *WorkflowApprovalTemplatesWorkflowApprovalTemplatesPartialUpdateParams) (*WorkflowApprovalTemplatesWorkflowApprovalTemplatesPartialUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowApprovalTemplatesWorkflowApprovalTemplatesPartialUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Approval Templates_workflow_approval_templates_partial_update",
		Method:             "PATCH",
		PathPattern:        "/api/v2/workflow_approval_templates/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowApprovalTemplatesWorkflowApprovalTemplatesPartialUpdateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowApprovalTemplatesWorkflowApprovalTemplatesPartialUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Approval Templates_workflow_approval_templates_partial_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowApprovalTemplatesWorkflowApprovalTemplatesRead retrieves a workflow approval template


Make GET request to this resource to retrieve a single workflow approval template
record containing the following fields:

* `id`: Database ID for this workflow approval template. (integer)
* `type`: Data type for this workflow approval template. (choice)
* `url`: URL for this workflow approval template. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this workflow approval template was created. (datetime)
* `modified`: Timestamp when this workflow approval template was last modified. (datetime)
* `name`: Name of this workflow approval template. (string)
* `description`: Optional description of this workflow approval template. (string)
* `last_job_run`:  (datetime)
* `last_job_failed`:  (boolean)
* `next_job_run`:  (datetime)
* `status`:  (choice)
    - `new`: New
    - `pending`: Pending
    - `waiting`: Waiting
    - `running`: Running
    - `successful`: Successful
    - `failed`: Failed
    - `error`: Error
    - `canceled`: Canceled
    - `never updated`: Never Updated
    - `ok`: OK
    - `missing`: Missing
    - `none`: No External Source
    - `updating`: Updating
* `timeout`: The amount of time (in seconds) before the approval node expires and fails. (integer)
*/
func (a *Client) WorkflowApprovalTemplatesWorkflowApprovalTemplatesRead(params *WorkflowApprovalTemplatesWorkflowApprovalTemplatesReadParams) (*WorkflowApprovalTemplatesWorkflowApprovalTemplatesReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowApprovalTemplatesWorkflowApprovalTemplatesReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Approval Templates_workflow_approval_templates_read",
		Method:             "GET",
		PathPattern:        "/api/v2/workflow_approval_templates/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowApprovalTemplatesWorkflowApprovalTemplatesReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowApprovalTemplatesWorkflowApprovalTemplatesReadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Approval Templates_workflow_approval_templates_read: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowApprovalTemplatesWorkflowApprovalTemplatesUpdate updates a workflow approval template


Make a PUT or PATCH request to this resource to update this
workflow approval template.  The following fields may be modified:









* `name`: Name of this workflow approval template. (string, required)
* `description`: Optional description of this workflow approval template. (string, default=`""`)




* `timeout`: The amount of time (in seconds) before the approval node expires and fails. (integer, default=`0`)






For a PUT request, include **all** fields in the request.
*/
func (a *Client) WorkflowApprovalTemplatesWorkflowApprovalTemplatesUpdate(params *WorkflowApprovalTemplatesWorkflowApprovalTemplatesUpdateParams) (*WorkflowApprovalTemplatesWorkflowApprovalTemplatesUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowApprovalTemplatesWorkflowApprovalTemplatesUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Approval Templates_workflow_approval_templates_update",
		Method:             "PUT",
		PathPattern:        "/api/v2/workflow_approval_templates/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowApprovalTemplatesWorkflowApprovalTemplatesUpdateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowApprovalTemplatesWorkflowApprovalTemplatesUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Approval Templates_workflow_approval_templates_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
