// Code generated by go-swagger; DO NOT EDIT.

package hosts

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// HostsHostsInsightsListReader is a Reader for the HostsHostsInsightsList structure.
type HostsHostsInsightsListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HostsHostsInsightsListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHostsHostsInsightsListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewHostsHostsInsightsListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 502:
		result := NewHostsHostsInsightsListBadGateway()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 504:
		result := NewHostsHostsInsightsListGatewayTimeout()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewHostsHostsInsightsListOK creates a HostsHostsInsightsListOK with default headers values
func NewHostsHostsInsightsListOK() *HostsHostsInsightsListOK {
	return &HostsHostsInsightsListOK{}
}

/*HostsHostsInsightsListOK handles this case with default header values.

OK
*/
type HostsHostsInsightsListOK struct {
}

func (o *HostsHostsInsightsListOK) Error() string {
	return fmt.Sprintf("[GET /api/v2/hosts/{id}/insights/][%d] hostsHostsInsightsListOK ", 200)
}

func (o *HostsHostsInsightsListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHostsHostsInsightsListNotFound creates a HostsHostsInsightsListNotFound with default headers values
func NewHostsHostsInsightsListNotFound() *HostsHostsInsightsListNotFound {
	return &HostsHostsInsightsListNotFound{}
}

/*HostsHostsInsightsListNotFound handles this case with default header values.

Not Found
*/
type HostsHostsInsightsListNotFound struct {
}

func (o *HostsHostsInsightsListNotFound) Error() string {
	return fmt.Sprintf("[GET /api/v2/hosts/{id}/insights/][%d] hostsHostsInsightsListNotFound ", 404)
}

func (o *HostsHostsInsightsListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHostsHostsInsightsListBadGateway creates a HostsHostsInsightsListBadGateway with default headers values
func NewHostsHostsInsightsListBadGateway() *HostsHostsInsightsListBadGateway {
	return &HostsHostsInsightsListBadGateway{}
}

/*HostsHostsInsightsListBadGateway handles this case with default header values.

Bad Gateway
*/
type HostsHostsInsightsListBadGateway struct {
}

func (o *HostsHostsInsightsListBadGateway) Error() string {
	return fmt.Sprintf("[GET /api/v2/hosts/{id}/insights/][%d] hostsHostsInsightsListBadGateway ", 502)
}

func (o *HostsHostsInsightsListBadGateway) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHostsHostsInsightsListGatewayTimeout creates a HostsHostsInsightsListGatewayTimeout with default headers values
func NewHostsHostsInsightsListGatewayTimeout() *HostsHostsInsightsListGatewayTimeout {
	return &HostsHostsInsightsListGatewayTimeout{}
}

/*HostsHostsInsightsListGatewayTimeout handles this case with default header values.

Gateway Timeout
*/
type HostsHostsInsightsListGatewayTimeout struct {
}

func (o *HostsHostsInsightsListGatewayTimeout) Error() string {
	return fmt.Sprintf("[GET /api/v2/hosts/{id}/insights/][%d] hostsHostsInsightsListGatewayTimeout ", 504)
}

func (o *HostsHostsInsightsListGatewayTimeout) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
