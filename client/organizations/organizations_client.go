// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new organizations API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for organizations API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	OrganizationsOrganizationsAccessListList(params *OrganizationsOrganizationsAccessListListParams) (*OrganizationsOrganizationsAccessListListOK, error)

	OrganizationsOrganizationsActivityStreamList(params *OrganizationsOrganizationsActivityStreamListParams) (*OrganizationsOrganizationsActivityStreamListOK, error)

	OrganizationsOrganizationsAdminsCreate(params *OrganizationsOrganizationsAdminsCreateParams) (*OrganizationsOrganizationsAdminsCreateCreated, error)

	OrganizationsOrganizationsAdminsList(params *OrganizationsOrganizationsAdminsListParams) (*OrganizationsOrganizationsAdminsListOK, error)

	OrganizationsOrganizationsApplicationsCreate(params *OrganizationsOrganizationsApplicationsCreateParams) (*OrganizationsOrganizationsApplicationsCreateCreated, error)

	OrganizationsOrganizationsApplicationsList(params *OrganizationsOrganizationsApplicationsListParams) (*OrganizationsOrganizationsApplicationsListOK, error)

	OrganizationsOrganizationsCreate(params *OrganizationsOrganizationsCreateParams) (*OrganizationsOrganizationsCreateCreated, error)

	OrganizationsOrganizationsCredentialsCreate(params *OrganizationsOrganizationsCredentialsCreateParams) (*OrganizationsOrganizationsCredentialsCreateCreated, error)

	OrganizationsOrganizationsCredentialsList(params *OrganizationsOrganizationsCredentialsListParams) (*OrganizationsOrganizationsCredentialsListOK, error)

	OrganizationsOrganizationsDelete(params *OrganizationsOrganizationsDeleteParams) (*OrganizationsOrganizationsDeleteNoContent, error)

	OrganizationsOrganizationsInstanceGroupsCreate(params *OrganizationsOrganizationsInstanceGroupsCreateParams) (*OrganizationsOrganizationsInstanceGroupsCreateCreated, error)

	OrganizationsOrganizationsInstanceGroupsList(params *OrganizationsOrganizationsInstanceGroupsListParams) (*OrganizationsOrganizationsInstanceGroupsListOK, error)

	OrganizationsOrganizationsInventoriesList(params *OrganizationsOrganizationsInventoriesListParams) (*OrganizationsOrganizationsInventoriesListOK, error)

	OrganizationsOrganizationsJobTemplatesCreate(params *OrganizationsOrganizationsJobTemplatesCreateParams) (*OrganizationsOrganizationsJobTemplatesCreateCreated, error)

	OrganizationsOrganizationsJobTemplatesList(params *OrganizationsOrganizationsJobTemplatesListParams) (*OrganizationsOrganizationsJobTemplatesListOK, error)

	OrganizationsOrganizationsList(params *OrganizationsOrganizationsListParams) (*OrganizationsOrganizationsListOK, error)

	OrganizationsOrganizationsNotificationTemplatesApprovalsCreate(params *OrganizationsOrganizationsNotificationTemplatesApprovalsCreateParams) (*OrganizationsOrganizationsNotificationTemplatesApprovalsCreateCreated, error)

	OrganizationsOrganizationsNotificationTemplatesApprovalsList(params *OrganizationsOrganizationsNotificationTemplatesApprovalsListParams) (*OrganizationsOrganizationsNotificationTemplatesApprovalsListOK, error)

	OrganizationsOrganizationsNotificationTemplatesCreate(params *OrganizationsOrganizationsNotificationTemplatesCreateParams) (*OrganizationsOrganizationsNotificationTemplatesCreateCreated, error)

	OrganizationsOrganizationsNotificationTemplatesErrorCreate(params *OrganizationsOrganizationsNotificationTemplatesErrorCreateParams) (*OrganizationsOrganizationsNotificationTemplatesErrorCreateCreated, error)

	OrganizationsOrganizationsNotificationTemplatesErrorList(params *OrganizationsOrganizationsNotificationTemplatesErrorListParams) (*OrganizationsOrganizationsNotificationTemplatesErrorListOK, error)

	OrganizationsOrganizationsNotificationTemplatesList(params *OrganizationsOrganizationsNotificationTemplatesListParams) (*OrganizationsOrganizationsNotificationTemplatesListOK, error)

	OrganizationsOrganizationsNotificationTemplatesStartedCreate(params *OrganizationsOrganizationsNotificationTemplatesStartedCreateParams) (*OrganizationsOrganizationsNotificationTemplatesStartedCreateCreated, error)

	OrganizationsOrganizationsNotificationTemplatesStartedList(params *OrganizationsOrganizationsNotificationTemplatesStartedListParams) (*OrganizationsOrganizationsNotificationTemplatesStartedListOK, error)

	OrganizationsOrganizationsNotificationTemplatesSuccessCreate(params *OrganizationsOrganizationsNotificationTemplatesSuccessCreateParams) (*OrganizationsOrganizationsNotificationTemplatesSuccessCreateCreated, error)

	OrganizationsOrganizationsNotificationTemplatesSuccessList(params *OrganizationsOrganizationsNotificationTemplatesSuccessListParams) (*OrganizationsOrganizationsNotificationTemplatesSuccessListOK, error)

	OrganizationsOrganizationsObjectRolesList(params *OrganizationsOrganizationsObjectRolesListParams) (*OrganizationsOrganizationsObjectRolesListOK, error)

	OrganizationsOrganizationsPartialUpdate(params *OrganizationsOrganizationsPartialUpdateParams) (*OrganizationsOrganizationsPartialUpdateOK, error)

	OrganizationsOrganizationsProjectsCreate(params *OrganizationsOrganizationsProjectsCreateParams) (*OrganizationsOrganizationsProjectsCreateCreated, error)

	OrganizationsOrganizationsProjectsList(params *OrganizationsOrganizationsProjectsListParams) (*OrganizationsOrganizationsProjectsListOK, error)

	OrganizationsOrganizationsRead(params *OrganizationsOrganizationsReadParams) (*OrganizationsOrganizationsReadOK, error)

	OrganizationsOrganizationsTeamsCreate(params *OrganizationsOrganizationsTeamsCreateParams) (*OrganizationsOrganizationsTeamsCreateCreated, error)

	OrganizationsOrganizationsTeamsList(params *OrganizationsOrganizationsTeamsListParams) (*OrganizationsOrganizationsTeamsListOK, error)

	OrganizationsOrganizationsUpdate(params *OrganizationsOrganizationsUpdateParams) (*OrganizationsOrganizationsUpdateOK, error)

	OrganizationsOrganizationsUsersCreate(params *OrganizationsOrganizationsUsersCreateParams) (*OrganizationsOrganizationsUsersCreateCreated, error)

	OrganizationsOrganizationsUsersList(params *OrganizationsOrganizationsUsersListParams) (*OrganizationsOrganizationsUsersListOK, error)

	OrganizationsOrganizationsWorkflowJobTemplatesCreate(params *OrganizationsOrganizationsWorkflowJobTemplatesCreateParams) (*OrganizationsOrganizationsWorkflowJobTemplatesCreateCreated, error)

	OrganizationsOrganizationsWorkflowJobTemplatesList(params *OrganizationsOrganizationsWorkflowJobTemplatesListParams) (*OrganizationsOrganizationsWorkflowJobTemplatesListOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  OrganizationsOrganizationsAccessListList lists users


Make a GET request to this resource to retrieve the list of
users.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of users
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more user records.

## Results

Each user data structure includes the following fields:

* `id`: Database ID for this user. (integer)
* `type`: Data type for this user. (choice)
* `url`: URL for this user. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this user was created. (datetime)
* `username`: Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. (string)
* `first_name`:  (string)
* `last_name`:  (string)
* `email`:  (string)
* `is_superuser`: Designates that this user has all permissions without explicitly assigning them. (boolean)
* `is_system_auditor`:  (boolean)

* `ldap_dn`:  (string)
* `last_login`:  (datetime)
* `external_account`: Set if the account is managed by an external service (field)



## Sorting

To specify that users are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=username

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-username

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=username,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) OrganizationsOrganizationsAccessListList(params *OrganizationsOrganizationsAccessListListParams) (*OrganizationsOrganizationsAccessListListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsAccessListListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_access_list_list",
		Method:             "GET",
		PathPattern:        "/api/v2/organizations/{id}/access_list/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsAccessListListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsAccessListListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_access_list_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsActivityStreamList lists activity streams for an organization


Make a GET request to this resource to retrieve a list of
activity streams associated with the selected
organization.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of activity streams
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more activity stream records.

## Results

Each activity stream data structure includes the following fields:

* `id`: Database ID for this activity stream. (integer)
* `type`: Data type for this activity stream. (choice)
* `url`: URL for this activity stream. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `timestamp`:  (datetime)
* `operation`: The action taken with respect to the given object(s). (choice)
    - `create`: Entity Created
    - `update`: Entity Updated
    - `delete`: Entity Deleted
    - `associate`: Entity Associated with another Entity
    - `disassociate`: Entity was Disassociated with another Entity
* `changes`: A summary of the new and changed values when an object is created, updated, or deleted (json)
* `object1`: For create, update, and delete events this is the object type that was affected. For associate and disassociate events this is the object type associated or disassociated with object2. (string)
* `object2`: Unpopulated for create, update, and delete events. For associate and disassociate events this is the object type that object1 is being associated with. (string)
* `object_association`: When present, shows the field name of the role or relationship that changed. (field)
* `action_node`: The cluster node the activity took place on. (string)
* `object_type`: When present, shows the model on which the role or relationship was defined. (field)



## Sorting

To specify that activity streams are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) OrganizationsOrganizationsActivityStreamList(params *OrganizationsOrganizationsActivityStreamListParams) (*OrganizationsOrganizationsActivityStreamListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsActivityStreamListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_activity_stream_list",
		Method:             "GET",
		PathPattern:        "/api/v2/organizations/{id}/activity_stream/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsActivityStreamListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsActivityStreamListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_activity_stream_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsAdminsCreate creates an admin user for an organization


Make a POST request to this resource with the following admin user
fields to create a new admin user associated with this
organization.








* `username`: Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. (string, required)
* `first_name`:  (string, default=`""`)
* `last_name`:  (string, default=`""`)
* `email`:  (string, default=`""`)
* `is_superuser`: Designates that this user has all permissions without explicitly assigning them. (boolean, default=`False`)
* `is_system_auditor`:  (boolean, default=`False`)
* `password`: Write-only field used to change the password. (string, default=`""`)











# Add Admin Users for an Organization:

Make a POST request to this resource with only an `id` field to associate an
existing admin user with this organization.

# Remove Admin Users from this Organization:

Make a POST request to this resource with `id` and `disassociate` fields to
remove the admin user from this organization
 without deleting the admin user.
*/
func (a *Client) OrganizationsOrganizationsAdminsCreate(params *OrganizationsOrganizationsAdminsCreateParams) (*OrganizationsOrganizationsAdminsCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsAdminsCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_admins_create",
		Method:             "POST",
		PathPattern:        "/api/v2/organizations/{id}/admins/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsAdminsCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsAdminsCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_admins_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsAdminsList lists admin users for an organization


Make a GET request to this resource to retrieve a list of
admin users associated with the selected
organization.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of admin users
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more admin user records.

## Results

Each admin user data structure includes the following fields:

* `id`: Database ID for this user. (integer)
* `type`: Data type for this user. (choice)
* `url`: URL for this user. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this user was created. (datetime)
* `username`: Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. (string)
* `first_name`:  (string)
* `last_name`:  (string)
* `email`:  (string)
* `is_superuser`: Designates that this user has all permissions without explicitly assigning them. (boolean)
* `is_system_auditor`:  (boolean)

* `ldap_dn`:  (string)
* `last_login`:  (datetime)
* `external_account`: Set if the account is managed by an external service (field)



## Sorting

To specify that admin users are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=username

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-username

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=username,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) OrganizationsOrganizationsAdminsList(params *OrganizationsOrganizationsAdminsListParams) (*OrganizationsOrganizationsAdminsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsAdminsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_admins_list",
		Method:             "GET",
		PathPattern:        "/api/v2/organizations/{id}/admins/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsAdminsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsAdminsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_admins_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsApplicationsCreate creates an application for an organization


Make a POST request to this resource with the following application
fields to create a new application associated with this
organization.









* `name`: Name of this application. (string, required)
* `description`: Optional description of this application. (string, default=`""`)


* `client_type`: Set to Public or Confidential depending on how secure the client device is. (choice, required)
    - `confidential`: Confidential
    - `public`: Public
* `redirect_uris`: Allowed URIs list, space separated (string, default=`""`)
* `authorization_grant_type`: The Grant type the user must use for acquire tokens for this application. (choice, required)
    - `authorization-code`: Authorization code
    - `password`: Resource owner password-based
* `skip_authorization`: Set True to skip authorization step for completely trusted applications. (boolean, default=`False`)
*/
func (a *Client) OrganizationsOrganizationsApplicationsCreate(params *OrganizationsOrganizationsApplicationsCreateParams) (*OrganizationsOrganizationsApplicationsCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsApplicationsCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_applications_create",
		Method:             "POST",
		PathPattern:        "/api/v2/organizations/{id}/applications/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsApplicationsCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsApplicationsCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_applications_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsApplicationsList lists applications for an organization


Make a GET request to this resource to retrieve a list of
applications associated with the selected
organization.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of applications
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more application records.

## Results

Each application data structure includes the following fields:

* `id`: Database ID for this application. (integer)
* `type`: Data type for this application. (choice)
* `url`: URL for this application. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this application was created. (datetime)
* `modified`: Timestamp when this application was last modified. (datetime)
* `name`: Name of this application. (string)
* `description`: Optional description of this application. (string)
* `client_id`:  (string)
* `client_secret`: Used for more stringent verification of access to an application when creating a token. (string)
* `client_type`: Set to Public or Confidential depending on how secure the client device is. (choice)
    - `confidential`: Confidential
    - `public`: Public
* `redirect_uris`: Allowed URIs list, space separated (string)
* `authorization_grant_type`: The Grant type the user must use for acquire tokens for this application. (choice)
    - `authorization-code`: Authorization code
    - `password`: Resource owner password-based
* `skip_authorization`: Set True to skip authorization step for completely trusted applications. (boolean)
* `organization`: Organization containing this application. (id)



## Sorting

To specify that applications are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) OrganizationsOrganizationsApplicationsList(params *OrganizationsOrganizationsApplicationsListParams) (*OrganizationsOrganizationsApplicationsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsApplicationsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_applications_list",
		Method:             "GET",
		PathPattern:        "/api/v2/organizations/{id}/applications/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsApplicationsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsApplicationsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_applications_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsCreate creates an organization


Make a POST request to this resource with the following organization
fields to create a new organization:









* `name`: Name of this organization. (string, required)
* `description`: Optional description of this organization. (string, default=`""`)
* `max_hosts`: Maximum number of hosts allowed to be managed by this organization. (integer, default=`0`)
* `custom_virtualenv`: Local absolute file path containing a custom Python virtualenv to use (string, default=`""`)
*/
func (a *Client) OrganizationsOrganizationsCreate(params *OrganizationsOrganizationsCreateParams) (*OrganizationsOrganizationsCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_create",
		Method:             "POST",
		PathPattern:        "/api/v2/organizations/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsCredentialsCreate creates a credential for an organization


Make a POST request to this resource with the following credential
fields to create a new credential associated with this
organization.









* `name`: Name of this credential. (string, required)
* `description`: Optional description of this credential. (string, default=`""`)

* `credential_type`: Specify the type of credential you want to create. Refer to the Ansible Tower documentation for details on each type. (id, required)
* `inputs`: Enter inputs using either JSON or YAML syntax. Refer to the Ansible Tower documentation for example syntax. (json, default=`{}`)
*/
func (a *Client) OrganizationsOrganizationsCredentialsCreate(params *OrganizationsOrganizationsCredentialsCreateParams) (*OrganizationsOrganizationsCredentialsCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsCredentialsCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_credentials_create",
		Method:             "POST",
		PathPattern:        "/api/v2/organizations/{id}/credentials/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsCredentialsCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsCredentialsCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_credentials_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsCredentialsList lists credentials for an organization


Make a GET request to this resource to retrieve a list of
credentials associated with the selected
organization.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of credentials
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more credential records.

## Results

Each credential data structure includes the following fields:

* `id`: Database ID for this credential. (integer)
* `type`: Data type for this credential. (choice)
* `url`: URL for this credential. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this credential was created. (datetime)
* `modified`: Timestamp when this credential was last modified. (datetime)
* `name`: Name of this credential. (string)
* `description`: Optional description of this credential. (string)
* `organization`: Inherit permissions from organization roles. If provided on creation, do not give either user or team. (id)
* `credential_type`: Specify the type of credential you want to create. Refer to the Ansible Tower documentation for details on each type. (id)
* `inputs`: Enter inputs using either JSON or YAML syntax. Refer to the Ansible Tower documentation for example syntax. (json)
* `kind`:  (field)
* `cloud`:  (field)
* `kubernetes`:  (field)



## Sorting

To specify that credentials are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) OrganizationsOrganizationsCredentialsList(params *OrganizationsOrganizationsCredentialsListParams) (*OrganizationsOrganizationsCredentialsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsCredentialsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_credentials_list",
		Method:             "GET",
		PathPattern:        "/api/v2/organizations/{id}/credentials/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsCredentialsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsCredentialsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_credentials_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsDelete deletes an organization


Make a DELETE request to this resource to delete this organization.
*/
func (a *Client) OrganizationsOrganizationsDelete(params *OrganizationsOrganizationsDeleteParams) (*OrganizationsOrganizationsDeleteNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsDeleteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_delete",
		Method:             "DELETE",
		PathPattern:        "/api/v2/organizations/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsDeleteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsDeleteNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_delete: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsInstanceGroupsCreate creates an instance group for an organization


Make a POST request to this resource with the following instance group
fields to create a new instance group associated with this
organization.






* `name`: Name of this instance group. (string, required)













* `credential`:  (id, default=``)
* `policy_instance_percentage`: Minimum percentage of all instances that will be automatically assigned to this group when new instances come online. (integer, default=`0`)
* `policy_instance_minimum`: Static minimum number of Instances that will be automatically assign to this group when new instances come online. (integer, default=`0`)
* `policy_instance_list`: List of exact-match Instances that will be assigned to this group (json, default=``)
* `pod_spec_override`:  (string, default=`""`)









# Add Instance Groups for an Organization:

Make a POST request to this resource with only an `id` field to associate an
existing instance group with this organization.

# Remove Instance Groups from this Organization:

Make a POST request to this resource with `id` and `disassociate` fields to
remove the instance group from this organization
 without deleting the instance group.
*/
func (a *Client) OrganizationsOrganizationsInstanceGroupsCreate(params *OrganizationsOrganizationsInstanceGroupsCreateParams) (*OrganizationsOrganizationsInstanceGroupsCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsInstanceGroupsCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_instance_groups_create",
		Method:             "POST",
		PathPattern:        "/api/v2/organizations/{id}/instance_groups/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsInstanceGroupsCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsInstanceGroupsCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_instance_groups_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsInstanceGroupsList lists instance groups for an organization


Make a GET request to this resource to retrieve a list of
instance groups associated with the selected
organization.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of instance groups
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more instance group records.

## Results

Each instance group data structure includes the following fields:

* `id`: Database ID for this instance group. (integer)
* `type`: Data type for this instance group. (choice)
* `url`: URL for this instance group. (string)
* `related`: Data structure with URLs of related resources. (object)
* `name`: Name of this instance group. (string)
* `created`: Timestamp when this instance group was created. (datetime)
* `modified`: Timestamp when this instance group was last modified. (datetime)
* `capacity`:  (field)
* `committed_capacity`:  (field)
* `consumed_capacity`:  (field)
* `percent_capacity_remaining`:  (field)
* `jobs_running`: Count of jobs in the running or waiting state that are targeted for this instance group (integer)
* `jobs_total`: Count of all jobs that target this instance group (integer)
* `instances`:  (field)
* `controller`: Instance Group to remotely control this group. (id)
* `is_controller`: Indicates whether instance group controls any other group (boolean)
* `is_isolated`: Indicates whether instances in this group are isolated.Isolated groups have a designated controller group. (boolean)
* `is_containerized`: Indicates whether instances in this group are containerized.Containerized groups have a designated Openshift or Kubernetes cluster. (boolean)
* `credential`:  (id)
* `policy_instance_percentage`: Minimum percentage of all instances that will be automatically assigned to this group when new instances come online. (integer)
* `policy_instance_minimum`: Static minimum number of Instances that will be automatically assign to this group when new instances come online. (integer)
* `policy_instance_list`: List of exact-match Instances that will be assigned to this group (json)
* `pod_spec_override`:  (string)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)



## Sorting

To specify that instance groups are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) OrganizationsOrganizationsInstanceGroupsList(params *OrganizationsOrganizationsInstanceGroupsListParams) (*OrganizationsOrganizationsInstanceGroupsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsInstanceGroupsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_instance_groups_list",
		Method:             "GET",
		PathPattern:        "/api/v2/organizations/{id}/instance_groups/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsInstanceGroupsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsInstanceGroupsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_instance_groups_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsInventoriesList lists inventories for an organization


Make a GET request to this resource to retrieve a list of
inventories associated with the selected
organization.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of inventories
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more inventory records.

## Results

Each inventory data structure includes the following fields:

* `id`: Database ID for this inventory. (integer)
* `type`: Data type for this inventory. (choice)
* `url`: URL for this inventory. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this inventory was created. (datetime)
* `modified`: Timestamp when this inventory was last modified. (datetime)
* `name`: Name of this inventory. (string)
* `description`: Optional description of this inventory. (string)
* `organization`: Organization containing this inventory. (id)
* `kind`: Kind of inventory being represented. (choice)
    - `""`: Hosts have a direct link to this inventory.
    - `smart`: Hosts for inventory generated using the host_filter property.
* `host_filter`: Filter that will be applied to the hosts of this inventory. (string)
* `variables`: Inventory variables in JSON or YAML format. (json)
* `has_active_failures`: This field is deprecated and will be removed in a future release. Flag indicating whether any hosts in this inventory have failed. (boolean)
* `total_hosts`: This field is deprecated and will be removed in a future release. Total number of hosts in this inventory. (integer)
* `hosts_with_active_failures`: This field is deprecated and will be removed in a future release. Number of hosts in this inventory with active failures. (integer)
* `total_groups`: This field is deprecated and will be removed in a future release. Total number of groups in this inventory. (integer)
* `has_inventory_sources`: This field is deprecated and will be removed in a future release. Flag indicating whether this inventory has any external inventory sources. (boolean)
* `total_inventory_sources`: Total number of external inventory sources configured within this inventory. (integer)
* `inventory_sources_with_failures`: Number of external inventory sources in this inventory with failures. (integer)
* `insights_credential`: Credentials to be used by hosts belonging to this inventory when accessing Red Hat Insights API. (id)
* `pending_deletion`: Flag indicating the inventory is being deleted. (boolean)



## Sorting

To specify that inventories are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) OrganizationsOrganizationsInventoriesList(params *OrganizationsOrganizationsInventoriesListParams) (*OrganizationsOrganizationsInventoriesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsInventoriesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_inventories_list",
		Method:             "GET",
		PathPattern:        "/api/v2/organizations/{id}/inventories/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsInventoriesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsInventoriesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_inventories_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsJobTemplatesCreate creates a job template for an organization


Make a POST request to this resource with the following job template
fields to create a new job template associated with this
organization.









* `name`: Name of this job template. (string, required)
* `description`: Optional description of this job template. (string, default=`""`)
* `job_type`:  (choice)
    - `run`: Run (default)
    - `check`: Check
* `inventory`:  (id, default=``)
* `project`:  (id, default=``)
* `playbook`:  (string, default=`""`)
* `scm_branch`: Branch to use in job run. Project default used if blank. Only allowed if project allow_override field is set to true. (string, default=`""`)
* `forks`:  (integer, default=`0`)
* `limit`:  (string, default=`""`)
* `verbosity`:  (choice)
    - `0`: 0 (Normal) (default)
    - `1`: 1 (Verbose)
    - `2`: 2 (More Verbose)
    - `3`: 3 (Debug)
    - `4`: 4 (Connection Debug)
    - `5`: 5 (WinRM Debug)
* `extra_vars`:  (json, default=``)
* `job_tags`:  (string, default=`""`)
* `force_handlers`:  (boolean, default=`False`)
* `skip_tags`:  (string, default=`""`)
* `start_at_task`:  (string, default=`""`)
* `timeout`: The amount of time (in seconds) to run before the task is canceled. (integer, default=`0`)
* `use_fact_cache`: If enabled, Tower will act as an Ansible Fact Cache Plugin; persisting facts at the end of a playbook run to the database and caching facts for use by Ansible. (boolean, default=`False`)





* `host_config_key`:  (string, default=`""`)
* `ask_scm_branch_on_launch`:  (boolean, default=`False`)
* `ask_diff_mode_on_launch`:  (boolean, default=`False`)
* `ask_variables_on_launch`:  (boolean, default=`False`)
* `ask_limit_on_launch`:  (boolean, default=`False`)
* `ask_tags_on_launch`:  (boolean, default=`False`)
* `ask_skip_tags_on_launch`:  (boolean, default=`False`)
* `ask_job_type_on_launch`:  (boolean, default=`False`)
* `ask_verbosity_on_launch`:  (boolean, default=`False`)
* `ask_inventory_on_launch`:  (boolean, default=`False`)
* `ask_credential_on_launch`:  (boolean, default=`False`)
* `survey_enabled`:  (boolean, default=`False`)
* `become_enabled`:  (boolean, default=`False`)
* `diff_mode`: If enabled, textual changes made to any templated files on the host are shown in the standard output (boolean, default=`False`)
* `allow_simultaneous`:  (boolean, default=`False`)
* `custom_virtualenv`: Local absolute file path containing a custom Python virtualenv to use (string, default=`""`)
* `job_slice_count`: The number of jobs to slice into at runtime. Will cause the Job Template to launch a workflow if value is greater than 1. (integer, default=`1`)
* `webhook_service`: Service that webhook requests will be accepted from (choice)
    - `""`: ---------
    - `github`: GitHub
    - `gitlab`: GitLab
* `webhook_credential`: Personal Access Token for posting back the status to the service API (id, default=``)
*/
func (a *Client) OrganizationsOrganizationsJobTemplatesCreate(params *OrganizationsOrganizationsJobTemplatesCreateParams) (*OrganizationsOrganizationsJobTemplatesCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsJobTemplatesCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_job_templates_create",
		Method:             "POST",
		PathPattern:        "/api/v2/organizations/{id}/job_templates/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsJobTemplatesCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsJobTemplatesCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_job_templates_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsJobTemplatesList lists job templates for an organization


Make a GET request to this resource to retrieve a list of
job templates associated with the selected
organization.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of job templates
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more job template records.

## Results

Each job template data structure includes the following fields:

* `id`: Database ID for this job template. (integer)
* `type`: Data type for this job template. (choice)
* `url`: URL for this job template. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this job template was created. (datetime)
* `modified`: Timestamp when this job template was last modified. (datetime)
* `name`: Name of this job template. (string)
* `description`: Optional description of this job template. (string)
* `job_type`:  (choice)
    - `run`: Run
    - `check`: Check
* `inventory`:  (id)
* `project`:  (id)
* `playbook`:  (string)
* `scm_branch`: Branch to use in job run. Project default used if blank. Only allowed if project allow_override field is set to true. (string)
* `forks`:  (integer)
* `limit`:  (string)
* `verbosity`:  (choice)
    - `0`: 0 (Normal)
    - `1`: 1 (Verbose)
    - `2`: 2 (More Verbose)
    - `3`: 3 (Debug)
    - `4`: 4 (Connection Debug)
    - `5`: 5 (WinRM Debug)
* `extra_vars`:  (json)
* `job_tags`:  (string)
* `force_handlers`:  (boolean)
* `skip_tags`:  (string)
* `start_at_task`:  (string)
* `timeout`: The amount of time (in seconds) to run before the task is canceled. (integer)
* `use_fact_cache`: If enabled, Tower will act as an Ansible Fact Cache Plugin; persisting facts at the end of a playbook run to the database and caching facts for use by Ansible. (boolean)
* `organization`: The organization used to determine access to this template. (id)
* `last_job_run`:  (datetime)
* `last_job_failed`:  (boolean)
* `next_job_run`:  (datetime)
* `status`:  (choice)
    - `new`: New
    - `pending`: Pending
    - `waiting`: Waiting
    - `running`: Running
    - `successful`: Successful
    - `failed`: Failed
    - `error`: Error
    - `canceled`: Canceled
    - `never updated`: Never Updated
* `host_config_key`:  (string)
* `ask_scm_branch_on_launch`:  (boolean)
* `ask_diff_mode_on_launch`:  (boolean)
* `ask_variables_on_launch`:  (boolean)
* `ask_limit_on_launch`:  (boolean)
* `ask_tags_on_launch`:  (boolean)
* `ask_skip_tags_on_launch`:  (boolean)
* `ask_job_type_on_launch`:  (boolean)
* `ask_verbosity_on_launch`:  (boolean)
* `ask_inventory_on_launch`:  (boolean)
* `ask_credential_on_launch`:  (boolean)
* `survey_enabled`:  (boolean)
* `become_enabled`:  (boolean)
* `diff_mode`: If enabled, textual changes made to any templated files on the host are shown in the standard output (boolean)
* `allow_simultaneous`:  (boolean)
* `custom_virtualenv`: Local absolute file path containing a custom Python virtualenv to use (string)
* `job_slice_count`: The number of jobs to slice into at runtime. Will cause the Job Template to launch a workflow if value is greater than 1. (integer)
* `webhook_service`: Service that webhook requests will be accepted from (choice)
    - `""`: ---------
    - `github`: GitHub
    - `gitlab`: GitLab
* `webhook_credential`: Personal Access Token for posting back the status to the service API (id)



## Sorting

To specify that job templates are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) OrganizationsOrganizationsJobTemplatesList(params *OrganizationsOrganizationsJobTemplatesListParams) (*OrganizationsOrganizationsJobTemplatesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsJobTemplatesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_job_templates_list",
		Method:             "GET",
		PathPattern:        "/api/v2/organizations/{id}/job_templates/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsJobTemplatesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsJobTemplatesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_job_templates_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsList lists organizations


Make a GET request to this resource to retrieve the list of
organizations.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of organizations
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more organization records.

## Results

Each organization data structure includes the following fields:

* `id`: Database ID for this organization. (integer)
* `type`: Data type for this organization. (choice)
* `url`: URL for this organization. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this organization was created. (datetime)
* `modified`: Timestamp when this organization was last modified. (datetime)
* `name`: Name of this organization. (string)
* `description`: Optional description of this organization. (string)
* `max_hosts`: Maximum number of hosts allowed to be managed by this organization. (integer)
* `custom_virtualenv`: Local absolute file path containing a custom Python virtualenv to use (string)



## Sorting

To specify that organizations are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) OrganizationsOrganizationsList(params *OrganizationsOrganizationsListParams) (*OrganizationsOrganizationsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_list",
		Method:             "GET",
		PathPattern:        "/api/v2/organizations/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsNotificationTemplatesApprovalsCreate creates a notification template for an organization


Make a POST request to this resource with the following notification template
fields to create a new notification template associated with this
organization.









* `name`: Name of this notification template. (string, required)
* `description`: Optional description of this notification template. (string, default=`""`)
* `organization`:  (id, required)
* `notification_type`:  (choice, required)
    - `email`: Email
    - `grafana`: Grafana
    - `hipchat`: HipChat
    - `irc`: IRC
    - `mattermost`: Mattermost
    - `pagerduty`: Pagerduty
    - `rocketchat`: Rocket.Chat
    - `slack`: Slack
    - `twilio`: Twilio
    - `webhook`: Webhook
* `notification_configuration`:  (json, default=`{}`)
* `messages`: Optional custom messages for notification template. (json, default=`{&#39;started&#39;: None, &#39;success&#39;: None, &#39;error&#39;: None, &#39;workflow_approval&#39;: None}`)








# Add Notification Templates for an Organization:

Make a POST request to this resource with only an `id` field to associate an
existing notification template with this organization.

# Remove Notification Templates from this Organization:

Make a POST request to this resource with `id` and `disassociate` fields to
remove the notification template from this organization
 without deleting the notification template.
*/
func (a *Client) OrganizationsOrganizationsNotificationTemplatesApprovalsCreate(params *OrganizationsOrganizationsNotificationTemplatesApprovalsCreateParams) (*OrganizationsOrganizationsNotificationTemplatesApprovalsCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsNotificationTemplatesApprovalsCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_notification_templates_approvals_create",
		Method:             "POST",
		PathPattern:        "/api/v2/organizations/{id}/notification_templates_approvals/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsNotificationTemplatesApprovalsCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsNotificationTemplatesApprovalsCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_notification_templates_approvals_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsNotificationTemplatesApprovalsList lists notification templates for an organization


Make a GET request to this resource to retrieve a list of
notification templates associated with the selected
organization.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of notification templates
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more notification template records.

## Results

Each notification template data structure includes the following fields:

* `id`: Database ID for this notification template. (integer)
* `type`: Data type for this notification template. (choice)
* `url`: URL for this notification template. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this notification template was created. (datetime)
* `modified`: Timestamp when this notification template was last modified. (datetime)
* `name`: Name of this notification template. (string)
* `description`: Optional description of this notification template. (string)
* `organization`:  (id)
* `notification_type`:  (choice)
    - `email`: Email
    - `grafana`: Grafana
    - `hipchat`: HipChat
    - `irc`: IRC
    - `mattermost`: Mattermost
    - `pagerduty`: Pagerduty
    - `rocketchat`: Rocket.Chat
    - `slack`: Slack
    - `twilio`: Twilio
    - `webhook`: Webhook
* `notification_configuration`:  (json)
* `messages`: Optional custom messages for notification template. (json)



## Sorting

To specify that notification templates are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) OrganizationsOrganizationsNotificationTemplatesApprovalsList(params *OrganizationsOrganizationsNotificationTemplatesApprovalsListParams) (*OrganizationsOrganizationsNotificationTemplatesApprovalsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsNotificationTemplatesApprovalsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_notification_templates_approvals_list",
		Method:             "GET",
		PathPattern:        "/api/v2/organizations/{id}/notification_templates_approvals/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsNotificationTemplatesApprovalsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsNotificationTemplatesApprovalsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_notification_templates_approvals_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsNotificationTemplatesCreate creates a notification template for an organization


Make a POST request to this resource with the following notification template
fields to create a new notification template associated with this
organization.









* `name`: Name of this notification template. (string, required)
* `description`: Optional description of this notification template. (string, default=`""`)

* `notification_type`:  (choice, required)
    - `email`: Email
    - `grafana`: Grafana
    - `hipchat`: HipChat
    - `irc`: IRC
    - `mattermost`: Mattermost
    - `pagerduty`: Pagerduty
    - `rocketchat`: Rocket.Chat
    - `slack`: Slack
    - `twilio`: Twilio
    - `webhook`: Webhook
* `notification_configuration`:  (json, default=`{}`)
* `messages`: Optional custom messages for notification template. (json, default=`{&#39;started&#39;: None, &#39;success&#39;: None, &#39;error&#39;: None, &#39;workflow_approval&#39;: None}`)








# Remove Organization Notification Templates:

Make a POST request to this resource with `id` and `disassociate` fields to
delete the associated notification template.

    {
        "id": 123,
        "disassociate": true
    }
*/
func (a *Client) OrganizationsOrganizationsNotificationTemplatesCreate(params *OrganizationsOrganizationsNotificationTemplatesCreateParams) (*OrganizationsOrganizationsNotificationTemplatesCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsNotificationTemplatesCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_notification_templates_create",
		Method:             "POST",
		PathPattern:        "/api/v2/organizations/{id}/notification_templates/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsNotificationTemplatesCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsNotificationTemplatesCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_notification_templates_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsNotificationTemplatesErrorCreate creates a notification template for an organization


Make a POST request to this resource with the following notification template
fields to create a new notification template associated with this
organization.









* `name`: Name of this notification template. (string, required)
* `description`: Optional description of this notification template. (string, default=`""`)
* `organization`:  (id, required)
* `notification_type`:  (choice, required)
    - `email`: Email
    - `grafana`: Grafana
    - `hipchat`: HipChat
    - `irc`: IRC
    - `mattermost`: Mattermost
    - `pagerduty`: Pagerduty
    - `rocketchat`: Rocket.Chat
    - `slack`: Slack
    - `twilio`: Twilio
    - `webhook`: Webhook
* `notification_configuration`:  (json, default=`{}`)
* `messages`: Optional custom messages for notification template. (json, default=`{&#39;started&#39;: None, &#39;success&#39;: None, &#39;error&#39;: None, &#39;workflow_approval&#39;: None}`)








# Add Notification Templates for an Organization:

Make a POST request to this resource with only an `id` field to associate an
existing notification template with this organization.

# Remove Notification Templates from this Organization:

Make a POST request to this resource with `id` and `disassociate` fields to
remove the notification template from this organization
 without deleting the notification template.
*/
func (a *Client) OrganizationsOrganizationsNotificationTemplatesErrorCreate(params *OrganizationsOrganizationsNotificationTemplatesErrorCreateParams) (*OrganizationsOrganizationsNotificationTemplatesErrorCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsNotificationTemplatesErrorCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_notification_templates_error_create",
		Method:             "POST",
		PathPattern:        "/api/v2/organizations/{id}/notification_templates_error/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsNotificationTemplatesErrorCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsNotificationTemplatesErrorCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_notification_templates_error_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsNotificationTemplatesErrorList lists notification templates for an organization


Make a GET request to this resource to retrieve a list of
notification templates associated with the selected
organization.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of notification templates
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more notification template records.

## Results

Each notification template data structure includes the following fields:

* `id`: Database ID for this notification template. (integer)
* `type`: Data type for this notification template. (choice)
* `url`: URL for this notification template. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this notification template was created. (datetime)
* `modified`: Timestamp when this notification template was last modified. (datetime)
* `name`: Name of this notification template. (string)
* `description`: Optional description of this notification template. (string)
* `organization`:  (id)
* `notification_type`:  (choice)
    - `email`: Email
    - `grafana`: Grafana
    - `hipchat`: HipChat
    - `irc`: IRC
    - `mattermost`: Mattermost
    - `pagerduty`: Pagerduty
    - `rocketchat`: Rocket.Chat
    - `slack`: Slack
    - `twilio`: Twilio
    - `webhook`: Webhook
* `notification_configuration`:  (json)
* `messages`: Optional custom messages for notification template. (json)



## Sorting

To specify that notification templates are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) OrganizationsOrganizationsNotificationTemplatesErrorList(params *OrganizationsOrganizationsNotificationTemplatesErrorListParams) (*OrganizationsOrganizationsNotificationTemplatesErrorListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsNotificationTemplatesErrorListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_notification_templates_error_list",
		Method:             "GET",
		PathPattern:        "/api/v2/organizations/{id}/notification_templates_error/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsNotificationTemplatesErrorListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsNotificationTemplatesErrorListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_notification_templates_error_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsNotificationTemplatesList lists notification templates for an organization


Make a GET request to this resource to retrieve a list of
notification templates associated with the selected
organization.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of notification templates
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more notification template records.

## Results

Each notification template data structure includes the following fields:

* `id`: Database ID for this notification template. (integer)
* `type`: Data type for this notification template. (choice)
* `url`: URL for this notification template. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this notification template was created. (datetime)
* `modified`: Timestamp when this notification template was last modified. (datetime)
* `name`: Name of this notification template. (string)
* `description`: Optional description of this notification template. (string)
* `organization`:  (id)
* `notification_type`:  (choice)
    - `email`: Email
    - `grafana`: Grafana
    - `hipchat`: HipChat
    - `irc`: IRC
    - `mattermost`: Mattermost
    - `pagerduty`: Pagerduty
    - `rocketchat`: Rocket.Chat
    - `slack`: Slack
    - `twilio`: Twilio
    - `webhook`: Webhook
* `notification_configuration`:  (json)
* `messages`: Optional custom messages for notification template. (json)



## Sorting

To specify that notification templates are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) OrganizationsOrganizationsNotificationTemplatesList(params *OrganizationsOrganizationsNotificationTemplatesListParams) (*OrganizationsOrganizationsNotificationTemplatesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsNotificationTemplatesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_notification_templates_list",
		Method:             "GET",
		PathPattern:        "/api/v2/organizations/{id}/notification_templates/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsNotificationTemplatesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsNotificationTemplatesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_notification_templates_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsNotificationTemplatesStartedCreate creates a notification template for an organization


Make a POST request to this resource with the following notification template
fields to create a new notification template associated with this
organization.









* `name`: Name of this notification template. (string, required)
* `description`: Optional description of this notification template. (string, default=`""`)
* `organization`:  (id, required)
* `notification_type`:  (choice, required)
    - `email`: Email
    - `grafana`: Grafana
    - `hipchat`: HipChat
    - `irc`: IRC
    - `mattermost`: Mattermost
    - `pagerduty`: Pagerduty
    - `rocketchat`: Rocket.Chat
    - `slack`: Slack
    - `twilio`: Twilio
    - `webhook`: Webhook
* `notification_configuration`:  (json, default=`{}`)
* `messages`: Optional custom messages for notification template. (json, default=`{&#39;started&#39;: None, &#39;success&#39;: None, &#39;error&#39;: None, &#39;workflow_approval&#39;: None}`)








# Add Notification Templates for an Organization:

Make a POST request to this resource with only an `id` field to associate an
existing notification template with this organization.

# Remove Notification Templates from this Organization:

Make a POST request to this resource with `id` and `disassociate` fields to
remove the notification template from this organization
 without deleting the notification template.
*/
func (a *Client) OrganizationsOrganizationsNotificationTemplatesStartedCreate(params *OrganizationsOrganizationsNotificationTemplatesStartedCreateParams) (*OrganizationsOrganizationsNotificationTemplatesStartedCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsNotificationTemplatesStartedCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_notification_templates_started_create",
		Method:             "POST",
		PathPattern:        "/api/v2/organizations/{id}/notification_templates_started/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsNotificationTemplatesStartedCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsNotificationTemplatesStartedCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_notification_templates_started_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsNotificationTemplatesStartedList lists notification templates for an organization


Make a GET request to this resource to retrieve a list of
notification templates associated with the selected
organization.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of notification templates
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more notification template records.

## Results

Each notification template data structure includes the following fields:

* `id`: Database ID for this notification template. (integer)
* `type`: Data type for this notification template. (choice)
* `url`: URL for this notification template. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this notification template was created. (datetime)
* `modified`: Timestamp when this notification template was last modified. (datetime)
* `name`: Name of this notification template. (string)
* `description`: Optional description of this notification template. (string)
* `organization`:  (id)
* `notification_type`:  (choice)
    - `email`: Email
    - `grafana`: Grafana
    - `hipchat`: HipChat
    - `irc`: IRC
    - `mattermost`: Mattermost
    - `pagerduty`: Pagerduty
    - `rocketchat`: Rocket.Chat
    - `slack`: Slack
    - `twilio`: Twilio
    - `webhook`: Webhook
* `notification_configuration`:  (json)
* `messages`: Optional custom messages for notification template. (json)



## Sorting

To specify that notification templates are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) OrganizationsOrganizationsNotificationTemplatesStartedList(params *OrganizationsOrganizationsNotificationTemplatesStartedListParams) (*OrganizationsOrganizationsNotificationTemplatesStartedListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsNotificationTemplatesStartedListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_notification_templates_started_list",
		Method:             "GET",
		PathPattern:        "/api/v2/organizations/{id}/notification_templates_started/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsNotificationTemplatesStartedListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsNotificationTemplatesStartedListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_notification_templates_started_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsNotificationTemplatesSuccessCreate creates a notification template for an organization


Make a POST request to this resource with the following notification template
fields to create a new notification template associated with this
organization.









* `name`: Name of this notification template. (string, required)
* `description`: Optional description of this notification template. (string, default=`""`)
* `organization`:  (id, required)
* `notification_type`:  (choice, required)
    - `email`: Email
    - `grafana`: Grafana
    - `hipchat`: HipChat
    - `irc`: IRC
    - `mattermost`: Mattermost
    - `pagerduty`: Pagerduty
    - `rocketchat`: Rocket.Chat
    - `slack`: Slack
    - `twilio`: Twilio
    - `webhook`: Webhook
* `notification_configuration`:  (json, default=`{}`)
* `messages`: Optional custom messages for notification template. (json, default=`{&#39;started&#39;: None, &#39;success&#39;: None, &#39;error&#39;: None, &#39;workflow_approval&#39;: None}`)








# Add Notification Templates for an Organization:

Make a POST request to this resource with only an `id` field to associate an
existing notification template with this organization.

# Remove Notification Templates from this Organization:

Make a POST request to this resource with `id` and `disassociate` fields to
remove the notification template from this organization
 without deleting the notification template.
*/
func (a *Client) OrganizationsOrganizationsNotificationTemplatesSuccessCreate(params *OrganizationsOrganizationsNotificationTemplatesSuccessCreateParams) (*OrganizationsOrganizationsNotificationTemplatesSuccessCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsNotificationTemplatesSuccessCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_notification_templates_success_create",
		Method:             "POST",
		PathPattern:        "/api/v2/organizations/{id}/notification_templates_success/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsNotificationTemplatesSuccessCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsNotificationTemplatesSuccessCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_notification_templates_success_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsNotificationTemplatesSuccessList lists notification templates for an organization


Make a GET request to this resource to retrieve a list of
notification templates associated with the selected
organization.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of notification templates
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more notification template records.

## Results

Each notification template data structure includes the following fields:

* `id`: Database ID for this notification template. (integer)
* `type`: Data type for this notification template. (choice)
* `url`: URL for this notification template. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this notification template was created. (datetime)
* `modified`: Timestamp when this notification template was last modified. (datetime)
* `name`: Name of this notification template. (string)
* `description`: Optional description of this notification template. (string)
* `organization`:  (id)
* `notification_type`:  (choice)
    - `email`: Email
    - `grafana`: Grafana
    - `hipchat`: HipChat
    - `irc`: IRC
    - `mattermost`: Mattermost
    - `pagerduty`: Pagerduty
    - `rocketchat`: Rocket.Chat
    - `slack`: Slack
    - `twilio`: Twilio
    - `webhook`: Webhook
* `notification_configuration`:  (json)
* `messages`: Optional custom messages for notification template. (json)



## Sorting

To specify that notification templates are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) OrganizationsOrganizationsNotificationTemplatesSuccessList(params *OrganizationsOrganizationsNotificationTemplatesSuccessListParams) (*OrganizationsOrganizationsNotificationTemplatesSuccessListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsNotificationTemplatesSuccessListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_notification_templates_success_list",
		Method:             "GET",
		PathPattern:        "/api/v2/organizations/{id}/notification_templates_success/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsNotificationTemplatesSuccessListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsNotificationTemplatesSuccessListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_notification_templates_success_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsObjectRolesList lists roles for an organization


Make a GET request to this resource to retrieve a list of
roles associated with the selected
organization.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of roles
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more role records.

## Results

Each role data structure includes the following fields:

* `id`: Database ID for this role. (integer)
* `type`: Data type for this role. (choice)
* `url`: URL for this role. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `name`: Name of this role. (field)
* `description`: Optional description of this role. (field)



## Sorting

To specify that roles are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) OrganizationsOrganizationsObjectRolesList(params *OrganizationsOrganizationsObjectRolesListParams) (*OrganizationsOrganizationsObjectRolesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsObjectRolesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_object_roles_list",
		Method:             "GET",
		PathPattern:        "/api/v2/organizations/{id}/object_roles/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsObjectRolesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsObjectRolesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_object_roles_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsPartialUpdate updates an organization


Make a PUT or PATCH request to this resource to update this
organization.  The following fields may be modified:









* `name`: Name of this organization. (string, required)
* `description`: Optional description of this organization. (string, default=`""`)
* `max_hosts`: Maximum number of hosts allowed to be managed by this organization. (integer, default=`0`)
* `custom_virtualenv`: Local absolute file path containing a custom Python virtualenv to use (string, default=`""`)








For a PATCH request, include only the fields that are being modified.
*/
func (a *Client) OrganizationsOrganizationsPartialUpdate(params *OrganizationsOrganizationsPartialUpdateParams) (*OrganizationsOrganizationsPartialUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsPartialUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_partial_update",
		Method:             "PATCH",
		PathPattern:        "/api/v2/organizations/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsPartialUpdateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsPartialUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_partial_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsProjectsCreate creates a project for an organization


Make a POST request to this resource with the following project
fields to create a new project associated with this
organization.









* `name`: Name of this project. (string, required)
* `description`: Optional description of this project. (string, default=`""`)
* `local_path`: Local path (relative to PROJECTS_ROOT) containing playbooks and related files for this project. (string, default=`""`)
* `scm_type`: Specifies the source control system used to store the project. (choice)
    - `""`: Manual (default)
    - `git`: Git
    - `hg`: Mercurial
    - `svn`: Subversion
    - `insights`: Red Hat Insights
* `scm_url`: The location where the project is stored. (string, default=`""`)
* `scm_branch`: Specific branch, tag or commit to checkout. (string, default=`""`)
* `scm_refspec`: For git projects, an additional refspec to fetch. (string, default=`""`)
* `scm_clean`: Discard any local changes before syncing the project. (boolean, default=`False`)
* `scm_delete_on_update`: Delete the project before syncing. (boolean, default=`False`)
* `credential`:  (id, default=``)
* `timeout`: The amount of time (in seconds) to run before the task is canceled. (integer, default=`0`)






* `scm_update_on_launch`: Update the project when a job is launched that uses the project. (boolean, default=`False`)
* `scm_update_cache_timeout`: The number of seconds after the last project update ran that a new project update will be launched as a job dependency. (integer, default=`0`)
* `allow_override`: Allow changing the SCM branch or revision in a job template that uses this project. (boolean, default=`False`)
* `custom_virtualenv`: Local absolute file path containing a custom Python virtualenv to use (string, default=`""`)
*/
func (a *Client) OrganizationsOrganizationsProjectsCreate(params *OrganizationsOrganizationsProjectsCreateParams) (*OrganizationsOrganizationsProjectsCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsProjectsCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_projects_create",
		Method:             "POST",
		PathPattern:        "/api/v2/organizations/{id}/projects/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsProjectsCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsProjectsCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_projects_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsProjectsList lists projects for an organization


Make a GET request to this resource to retrieve a list of
projects associated with the selected
organization.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of projects
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more project records.

## Results

Each project data structure includes the following fields:

* `id`: Database ID for this project. (integer)
* `type`: Data type for this project. (choice)
* `url`: URL for this project. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this project was created. (datetime)
* `modified`: Timestamp when this project was last modified. (datetime)
* `name`: Name of this project. (string)
* `description`: Optional description of this project. (string)
* `local_path`: Local path (relative to PROJECTS_ROOT) containing playbooks and related files for this project. (string)
* `scm_type`: Specifies the source control system used to store the project. (choice)
    - `""`: Manual
    - `git`: Git
    - `hg`: Mercurial
    - `svn`: Subversion
    - `insights`: Red Hat Insights
* `scm_url`: The location where the project is stored. (string)
* `scm_branch`: Specific branch, tag or commit to checkout. (string)
* `scm_refspec`: For git projects, an additional refspec to fetch. (string)
* `scm_clean`: Discard any local changes before syncing the project. (boolean)
* `scm_delete_on_update`: Delete the project before syncing. (boolean)
* `credential`:  (id)
* `timeout`: The amount of time (in seconds) to run before the task is canceled. (integer)
* `scm_revision`: The last revision fetched by a project update (string)
* `last_job_run`:  (datetime)
* `last_job_failed`:  (boolean)
* `next_job_run`:  (datetime)
* `status`:  (choice)
    - `new`: New
    - `pending`: Pending
    - `waiting`: Waiting
    - `running`: Running
    - `successful`: Successful
    - `failed`: Failed
    - `error`: Error
    - `canceled`: Canceled
    - `never updated`: Never Updated
    - `ok`: OK
    - `missing`: Missing
* `organization`: The organization used to determine access to this template. (id)
* `scm_update_on_launch`: Update the project when a job is launched that uses the project. (boolean)
* `scm_update_cache_timeout`: The number of seconds after the last project update ran that a new project update will be launched as a job dependency. (integer)
* `allow_override`: Allow changing the SCM branch or revision in a job template that uses this project. (boolean)
* `custom_virtualenv`: Local absolute file path containing a custom Python virtualenv to use (string)
* `last_update_failed`:  (boolean)
* `last_updated`:  (datetime)



## Sorting

To specify that projects are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) OrganizationsOrganizationsProjectsList(params *OrganizationsOrganizationsProjectsListParams) (*OrganizationsOrganizationsProjectsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsProjectsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_projects_list",
		Method:             "GET",
		PathPattern:        "/api/v2/organizations/{id}/projects/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsProjectsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsProjectsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_projects_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsRead retrieves an organization


Make GET request to this resource to retrieve a single organization
record containing the following fields:

* `id`: Database ID for this organization. (integer)
* `type`: Data type for this organization. (choice)
* `url`: URL for this organization. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this organization was created. (datetime)
* `modified`: Timestamp when this organization was last modified. (datetime)
* `name`: Name of this organization. (string)
* `description`: Optional description of this organization. (string)
* `max_hosts`: Maximum number of hosts allowed to be managed by this organization. (integer)
* `custom_virtualenv`: Local absolute file path containing a custom Python virtualenv to use (string)
*/
func (a *Client) OrganizationsOrganizationsRead(params *OrganizationsOrganizationsReadParams) (*OrganizationsOrganizationsReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_read",
		Method:             "GET",
		PathPattern:        "/api/v2/organizations/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsReadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_read: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsTeamsCreate creates a team for an organization


Make a POST request to this resource with the following team
fields to create a new team associated with this
organization.









* `name`: Name of this team. (string, required)
* `description`: Optional description of this team. (string, default=`""`)









# Remove Organization Teams:

Make a POST request to this resource with `id` and `disassociate` fields to
delete the associated team.

    {
        "id": 123,
        "disassociate": true
    }
*/
func (a *Client) OrganizationsOrganizationsTeamsCreate(params *OrganizationsOrganizationsTeamsCreateParams) (*OrganizationsOrganizationsTeamsCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsTeamsCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_teams_create",
		Method:             "POST",
		PathPattern:        "/api/v2/organizations/{id}/teams/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsTeamsCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsTeamsCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_teams_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsTeamsList lists teams for an organization


Make a GET request to this resource to retrieve a list of
teams associated with the selected
organization.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of teams
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more team records.

## Results

Each team data structure includes the following fields:

* `id`: Database ID for this team. (integer)
* `type`: Data type for this team. (choice)
* `url`: URL for this team. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this team was created. (datetime)
* `modified`: Timestamp when this team was last modified. (datetime)
* `name`: Name of this team. (string)
* `description`: Optional description of this team. (string)
* `organization`:  (id)



## Sorting

To specify that teams are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) OrganizationsOrganizationsTeamsList(params *OrganizationsOrganizationsTeamsListParams) (*OrganizationsOrganizationsTeamsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsTeamsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_teams_list",
		Method:             "GET",
		PathPattern:        "/api/v2/organizations/{id}/teams/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsTeamsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsTeamsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_teams_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsUpdate updates an organization


Make a PUT or PATCH request to this resource to update this
organization.  The following fields may be modified:









* `name`: Name of this organization. (string, required)
* `description`: Optional description of this organization. (string, default=`""`)
* `max_hosts`: Maximum number of hosts allowed to be managed by this organization. (integer, default=`0`)
* `custom_virtualenv`: Local absolute file path containing a custom Python virtualenv to use (string, default=`""`)






For a PUT request, include **all** fields in the request.
*/
func (a *Client) OrganizationsOrganizationsUpdate(params *OrganizationsOrganizationsUpdateParams) (*OrganizationsOrganizationsUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_update",
		Method:             "PUT",
		PathPattern:        "/api/v2/organizations/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsUpdateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsUsersCreate creates a user for an organization


Make a POST request to this resource with the following user
fields to create a new user associated with this
organization.








* `username`: Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. (string, required)
* `first_name`:  (string, default=`""`)
* `last_name`:  (string, default=`""`)
* `email`:  (string, default=`""`)
* `is_superuser`: Designates that this user has all permissions without explicitly assigning them. (boolean, default=`False`)
* `is_system_auditor`:  (boolean, default=`False`)
* `password`: Write-only field used to change the password. (string, default=`""`)











# Add Users for an Organization:

Make a POST request to this resource with only an `id` field to associate an
existing user with this organization.

# Remove Users from this Organization:

Make a POST request to this resource with `id` and `disassociate` fields to
remove the user from this organization
 without deleting the user.
*/
func (a *Client) OrganizationsOrganizationsUsersCreate(params *OrganizationsOrganizationsUsersCreateParams) (*OrganizationsOrganizationsUsersCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsUsersCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_users_create",
		Method:             "POST",
		PathPattern:        "/api/v2/organizations/{id}/users/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsUsersCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsUsersCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_users_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsUsersList lists users for an organization


Make a GET request to this resource to retrieve a list of
users associated with the selected
organization.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of users
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more user records.

## Results

Each user data structure includes the following fields:

* `id`: Database ID for this user. (integer)
* `type`: Data type for this user. (choice)
* `url`: URL for this user. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this user was created. (datetime)
* `username`: Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. (string)
* `first_name`:  (string)
* `last_name`:  (string)
* `email`:  (string)
* `is_superuser`: Designates that this user has all permissions without explicitly assigning them. (boolean)
* `is_system_auditor`:  (boolean)

* `ldap_dn`:  (string)
* `last_login`:  (datetime)
* `external_account`: Set if the account is managed by an external service (field)



## Sorting

To specify that users are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=username

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-username

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=username,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) OrganizationsOrganizationsUsersList(params *OrganizationsOrganizationsUsersListParams) (*OrganizationsOrganizationsUsersListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsUsersListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_users_list",
		Method:             "GET",
		PathPattern:        "/api/v2/organizations/{id}/users/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsUsersListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsUsersListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_users_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsWorkflowJobTemplatesCreate creates a workflow job template for an organization


Make a POST request to this resource with the following workflow job template
fields to create a new workflow job template associated with this
organization.









* `name`: Name of this workflow job template. (string, required)
* `description`: Optional description of this workflow job template. (string, default=`""`)




* `extra_vars`:  (json, default=``)

* `survey_enabled`:  (boolean, default=`False`)
* `allow_simultaneous`:  (boolean, default=`False`)
* `ask_variables_on_launch`:  (boolean, default=`False`)
* `inventory`: Inventory applied as a prompt, assuming job template prompts for inventory (id, default=``)
* `limit`:  (string, default=`""`)
* `scm_branch`:  (string, default=`""`)
* `ask_inventory_on_launch`:  (boolean, default=`False`)
* `ask_scm_branch_on_launch`:  (boolean, default=`False`)
* `ask_limit_on_launch`:  (boolean, default=`False`)
* `webhook_service`: Service that webhook requests will be accepted from (choice)
    - `""`: ---------
    - `github`: GitHub
    - `gitlab`: GitLab
* `webhook_credential`: Personal Access Token for posting back the status to the service API (id, default=``)
*/
func (a *Client) OrganizationsOrganizationsWorkflowJobTemplatesCreate(params *OrganizationsOrganizationsWorkflowJobTemplatesCreateParams) (*OrganizationsOrganizationsWorkflowJobTemplatesCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsWorkflowJobTemplatesCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_workflow_job_templates_create",
		Method:             "POST",
		PathPattern:        "/api/v2/organizations/{id}/workflow_job_templates/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsWorkflowJobTemplatesCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsWorkflowJobTemplatesCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_workflow_job_templates_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  OrganizationsOrganizationsWorkflowJobTemplatesList lists workflow job templates for an organization


Make a GET request to this resource to retrieve a list of
workflow job templates associated with the selected
organization.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of workflow job templates
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more workflow job template records.

## Results

Each workflow job template data structure includes the following fields:

* `id`: Database ID for this workflow job template. (integer)
* `type`: Data type for this workflow job template. (choice)
* `url`: URL for this workflow job template. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this workflow job template was created. (datetime)
* `modified`: Timestamp when this workflow job template was last modified. (datetime)
* `name`: Name of this workflow job template. (string)
* `description`: Optional description of this workflow job template. (string)
* `last_job_run`:  (datetime)
* `last_job_failed`:  (boolean)
* `next_job_run`:  (datetime)
* `status`:  (choice)
    - `new`: New
    - `pending`: Pending
    - `waiting`: Waiting
    - `running`: Running
    - `successful`: Successful
    - `failed`: Failed
    - `error`: Error
    - `canceled`: Canceled
    - `never updated`: Never Updated
    - `ok`: OK
    - `missing`: Missing
    - `none`: No External Source
    - `updating`: Updating
* `extra_vars`:  (json)
* `organization`: The organization used to determine access to this template. (id)
* `survey_enabled`:  (boolean)
* `allow_simultaneous`:  (boolean)
* `ask_variables_on_launch`:  (boolean)
* `inventory`: Inventory applied as a prompt, assuming job template prompts for inventory (id)
* `limit`:  (string)
* `scm_branch`:  (string)
* `ask_inventory_on_launch`:  (boolean)
* `ask_scm_branch_on_launch`:  (boolean)
* `ask_limit_on_launch`:  (boolean)
* `webhook_service`: Service that webhook requests will be accepted from (choice)
    - `""`: ---------
    - `github`: GitHub
    - `gitlab`: GitLab
* `webhook_credential`: Personal Access Token for posting back the status to the service API (id)



## Sorting

To specify that workflow job templates are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) OrganizationsOrganizationsWorkflowJobTemplatesList(params *OrganizationsOrganizationsWorkflowJobTemplatesListParams) (*OrganizationsOrganizationsWorkflowJobTemplatesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewOrganizationsOrganizationsWorkflowJobTemplatesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Organizations_organizations_workflow_job_templates_list",
		Method:             "GET",
		PathPattern:        "/api/v2/organizations/{id}/workflow_job_templates/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &OrganizationsOrganizationsWorkflowJobTemplatesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*OrganizationsOrganizationsWorkflowJobTemplatesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Organizations_organizations_workflow_job_templates_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
