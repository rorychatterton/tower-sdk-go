// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"client/activity_streams"
	"client/ad_hoc_command_events"
	"client/ad_hoc_commands"
	"client/authentication"
	"client/credential_input_sources"
	"client/credential_types"
	"client/credentials"
	"client/custom_inventory_scripts"
	"client/dashboard"
	"client/groups"
	"client/hosts"
	"client/instance_groups"
	"client/instances"
	"client/inventories"
	"client/inventory_sources"
	"client/inventory_updates"
	"client/job_events"
	"client/job_host_summaries"
	"client/job_templates"
	"client/jobs"
	"client/labels"
	"client/metrics"
	"client/notification_templates"
	"client/notifications"
	"client/organizations"
	"client/project_updates"
	"client/projects"
	"client/roles"
	"client/schedules"
	"client/settings"
	"client/system_configuration"
	"client/system_job_templates"
	"client/system_jobs"
	"client/teams"
	"client/unified_job_templates"
	"client/unified_jobs"
	"client/users"
	"client/versioning"
	"client/workflow_approval_templates"
	"client/workflow_approvals"
	"client/workflow_job_nodes"
	"client/workflow_job_template_nodes"
	"client/workflow_job_templates"
	"client/workflow_jobs"
)

// Default ansible tower HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "localhost"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new ansible tower HTTP client.
func NewHTTPClient(formats strfmt.Registry) *AnsibleTower {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new ansible tower HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *AnsibleTower {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new ansible tower client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *AnsibleTower {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(AnsibleTower)
	cli.Transport = transport
	cli.ActivityStreams = activity_streams.New(transport, formats)
	cli.AdHocCommandEvents = ad_hoc_command_events.New(transport, formats)
	cli.AdHocCommands = ad_hoc_commands.New(transport, formats)
	cli.Authentication = authentication.New(transport, formats)
	cli.CredentialInputSources = credential_input_sources.New(transport, formats)
	cli.CredentialTypes = credential_types.New(transport, formats)
	cli.Credentials = credentials.New(transport, formats)
	cli.CustomInventoryScripts = custom_inventory_scripts.New(transport, formats)
	cli.Dashboard = dashboard.New(transport, formats)
	cli.Groups = groups.New(transport, formats)
	cli.Hosts = hosts.New(transport, formats)
	cli.InstanceGroups = instance_groups.New(transport, formats)
	cli.Instances = instances.New(transport, formats)
	cli.Inventories = inventories.New(transport, formats)
	cli.InventorySources = inventory_sources.New(transport, formats)
	cli.InventoryUpdates = inventory_updates.New(transport, formats)
	cli.JobEvents = job_events.New(transport, formats)
	cli.JobHostSummaries = job_host_summaries.New(transport, formats)
	cli.JobTemplates = job_templates.New(transport, formats)
	cli.Jobs = jobs.New(transport, formats)
	cli.Labels = labels.New(transport, formats)
	cli.Metrics = metrics.New(transport, formats)
	cli.NotificationTemplates = notification_templates.New(transport, formats)
	cli.Notifications = notifications.New(transport, formats)
	cli.Organizations = organizations.New(transport, formats)
	cli.ProjectUpdates = project_updates.New(transport, formats)
	cli.Projects = projects.New(transport, formats)
	cli.Roles = roles.New(transport, formats)
	cli.Schedules = schedules.New(transport, formats)
	cli.Settings = settings.New(transport, formats)
	cli.SystemConfiguration = system_configuration.New(transport, formats)
	cli.SystemJobTemplates = system_job_templates.New(transport, formats)
	cli.SystemJobs = system_jobs.New(transport, formats)
	cli.Teams = teams.New(transport, formats)
	cli.UnifiedJobTemplates = unified_job_templates.New(transport, formats)
	cli.UnifiedJobs = unified_jobs.New(transport, formats)
	cli.Users = users.New(transport, formats)
	cli.Versioning = versioning.New(transport, formats)
	cli.WorkflowApprovalTemplates = workflow_approval_templates.New(transport, formats)
	cli.WorkflowApprovals = workflow_approvals.New(transport, formats)
	cli.WorkflowJobNodes = workflow_job_nodes.New(transport, formats)
	cli.WorkflowJobTemplateNodes = workflow_job_template_nodes.New(transport, formats)
	cli.WorkflowJobTemplates = workflow_job_templates.New(transport, formats)
	cli.WorkflowJobs = workflow_jobs.New(transport, formats)
	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// AnsibleTower is a client for ansible tower
type AnsibleTower struct {
	ActivityStreams activity_streams.ClientService

	AdHocCommandEvents ad_hoc_command_events.ClientService

	AdHocCommands ad_hoc_commands.ClientService

	Authentication authentication.ClientService

	CredentialInputSources credential_input_sources.ClientService

	CredentialTypes credential_types.ClientService

	Credentials credentials.ClientService

	CustomInventoryScripts custom_inventory_scripts.ClientService

	Dashboard dashboard.ClientService

	Groups groups.ClientService

	Hosts hosts.ClientService

	InstanceGroups instance_groups.ClientService

	Instances instances.ClientService

	Inventories inventories.ClientService

	InventorySources inventory_sources.ClientService

	InventoryUpdates inventory_updates.ClientService

	JobEvents job_events.ClientService

	JobHostSummaries job_host_summaries.ClientService

	JobTemplates job_templates.ClientService

	Jobs jobs.ClientService

	Labels labels.ClientService

	Metrics metrics.ClientService

	NotificationTemplates notification_templates.ClientService

	Notifications notifications.ClientService

	Organizations organizations.ClientService

	ProjectUpdates project_updates.ClientService

	Projects projects.ClientService

	Roles roles.ClientService

	Schedules schedules.ClientService

	Settings settings.ClientService

	SystemConfiguration system_configuration.ClientService

	SystemJobTemplates system_job_templates.ClientService

	SystemJobs system_jobs.ClientService

	Teams teams.ClientService

	UnifiedJobTemplates unified_job_templates.ClientService

	UnifiedJobs unified_jobs.ClientService

	Users users.ClientService

	Versioning versioning.ClientService

	WorkflowApprovalTemplates workflow_approval_templates.ClientService

	WorkflowApprovals workflow_approvals.ClientService

	WorkflowJobNodes workflow_job_nodes.ClientService

	WorkflowJobTemplateNodes workflow_job_template_nodes.ClientService

	WorkflowJobTemplates workflow_job_templates.ClientService

	WorkflowJobs workflow_jobs.ClientService

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *AnsibleTower) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport
	c.ActivityStreams.SetTransport(transport)
	c.AdHocCommandEvents.SetTransport(transport)
	c.AdHocCommands.SetTransport(transport)
	c.Authentication.SetTransport(transport)
	c.CredentialInputSources.SetTransport(transport)
	c.CredentialTypes.SetTransport(transport)
	c.Credentials.SetTransport(transport)
	c.CustomInventoryScripts.SetTransport(transport)
	c.Dashboard.SetTransport(transport)
	c.Groups.SetTransport(transport)
	c.Hosts.SetTransport(transport)
	c.InstanceGroups.SetTransport(transport)
	c.Instances.SetTransport(transport)
	c.Inventories.SetTransport(transport)
	c.InventorySources.SetTransport(transport)
	c.InventoryUpdates.SetTransport(transport)
	c.JobEvents.SetTransport(transport)
	c.JobHostSummaries.SetTransport(transport)
	c.JobTemplates.SetTransport(transport)
	c.Jobs.SetTransport(transport)
	c.Labels.SetTransport(transport)
	c.Metrics.SetTransport(transport)
	c.NotificationTemplates.SetTransport(transport)
	c.Notifications.SetTransport(transport)
	c.Organizations.SetTransport(transport)
	c.ProjectUpdates.SetTransport(transport)
	c.Projects.SetTransport(transport)
	c.Roles.SetTransport(transport)
	c.Schedules.SetTransport(transport)
	c.Settings.SetTransport(transport)
	c.SystemConfiguration.SetTransport(transport)
	c.SystemJobTemplates.SetTransport(transport)
	c.SystemJobs.SetTransport(transport)
	c.Teams.SetTransport(transport)
	c.UnifiedJobTemplates.SetTransport(transport)
	c.UnifiedJobs.SetTransport(transport)
	c.Users.SetTransport(transport)
	c.Versioning.SetTransport(transport)
	c.WorkflowApprovalTemplates.SetTransport(transport)
	c.WorkflowApprovals.SetTransport(transport)
	c.WorkflowJobNodes.SetTransport(transport)
	c.WorkflowJobTemplateNodes.SetTransport(transport)
	c.WorkflowJobTemplates.SetTransport(transport)
	c.WorkflowJobs.SetTransport(transport)
}
