// Code generated by go-swagger; DO NOT EDIT.

package workflow_job_templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new workflow job templates API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for workflow job templates API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	WorkflowJobTemplatesWorkflowJobTemplatesAccessListList(params *WorkflowJobTemplatesWorkflowJobTemplatesAccessListListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesAccessListListOK, error)

	WorkflowJobTemplatesWorkflowJobTemplatesActivityStreamList(params *WorkflowJobTemplatesWorkflowJobTemplatesActivityStreamListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesActivityStreamListOK, error)

	WorkflowJobTemplatesWorkflowJobTemplatesCopyCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesCopyCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesCopyCreateCreated, error)

	WorkflowJobTemplatesWorkflowJobTemplatesCopyList(params *WorkflowJobTemplatesWorkflowJobTemplatesCopyListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesCopyListOK, error)

	WorkflowJobTemplatesWorkflowJobTemplatesCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesCreateCreated, error)

	WorkflowJobTemplatesWorkflowJobTemplatesDelete(params *WorkflowJobTemplatesWorkflowJobTemplatesDeleteParams) (*WorkflowJobTemplatesWorkflowJobTemplatesDeleteNoContent, error)

	WorkflowJobTemplatesWorkflowJobTemplatesGithubCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesGithubCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesGithubCreateCreated, error)

	WorkflowJobTemplatesWorkflowJobTemplatesGitlabCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesGitlabCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesGitlabCreateCreated, error)

	WorkflowJobTemplatesWorkflowJobTemplatesLabelsCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesLabelsCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesLabelsCreateCreated, error)

	WorkflowJobTemplatesWorkflowJobTemplatesLabelsList(params *WorkflowJobTemplatesWorkflowJobTemplatesLabelsListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesLabelsListOK, error)

	WorkflowJobTemplatesWorkflowJobTemplatesLaunchCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesLaunchCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesLaunchCreateCreated, error)

	WorkflowJobTemplatesWorkflowJobTemplatesLaunchRead(params *WorkflowJobTemplatesWorkflowJobTemplatesLaunchReadParams) (*WorkflowJobTemplatesWorkflowJobTemplatesLaunchReadOK, error)

	WorkflowJobTemplatesWorkflowJobTemplatesList(params *WorkflowJobTemplatesWorkflowJobTemplatesListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesListOK, error)

	WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesApprovalsCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesApprovalsCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesApprovalsCreateCreated, error)

	WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesApprovalsList(params *WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesApprovalsListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesApprovalsListOK, error)

	WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesErrorCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesErrorCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesErrorCreateCreated, error)

	WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesErrorList(params *WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesErrorListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesErrorListOK, error)

	WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesStartedCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesStartedCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesStartedCreateCreated, error)

	WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesStartedList(params *WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesStartedListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesStartedListOK, error)

	WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesSuccessCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesSuccessCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesSuccessCreateCreated, error)

	WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesSuccessList(params *WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesSuccessListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesSuccessListOK, error)

	WorkflowJobTemplatesWorkflowJobTemplatesObjectRolesList(params *WorkflowJobTemplatesWorkflowJobTemplatesObjectRolesListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesObjectRolesListOK, error)

	WorkflowJobTemplatesWorkflowJobTemplatesPartialUpdate(params *WorkflowJobTemplatesWorkflowJobTemplatesPartialUpdateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesPartialUpdateOK, error)

	WorkflowJobTemplatesWorkflowJobTemplatesRead(params *WorkflowJobTemplatesWorkflowJobTemplatesReadParams) (*WorkflowJobTemplatesWorkflowJobTemplatesReadOK, error)

	WorkflowJobTemplatesWorkflowJobTemplatesSchedulesCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesSchedulesCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesSchedulesCreateCreated, error)

	WorkflowJobTemplatesWorkflowJobTemplatesSchedulesList(params *WorkflowJobTemplatesWorkflowJobTemplatesSchedulesListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesSchedulesListOK, error)

	WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecCreateCreated, error)

	WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecDelete(params *WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecDeleteParams) (*WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecDeleteNoContent, error)

	WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecList(params *WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecListOK, error)

	WorkflowJobTemplatesWorkflowJobTemplatesUpdate(params *WorkflowJobTemplatesWorkflowJobTemplatesUpdateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesUpdateOK, error)

	WorkflowJobTemplatesWorkflowJobTemplatesWebhookKeyCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesWebhookKeyCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesWebhookKeyCreateCreated, error)

	WorkflowJobTemplatesWorkflowJobTemplatesWebhookKeyList(params *WorkflowJobTemplatesWorkflowJobTemplatesWebhookKeyListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesWebhookKeyListOK, error)

	WorkflowJobTemplatesWorkflowJobTemplatesWorkflowJobsList(params *WorkflowJobTemplatesWorkflowJobTemplatesWorkflowJobsListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesWorkflowJobsListOK, error)

	WorkflowJobTemplatesWorkflowJobTemplatesWorkflowNodesCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesWorkflowNodesCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesWorkflowNodesCreateCreated, error)

	WorkflowJobTemplatesWorkflowJobTemplatesWorkflowNodesList(params *WorkflowJobTemplatesWorkflowJobTemplatesWorkflowNodesListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesWorkflowNodesListOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesAccessListList lists users


Make a GET request to this resource to retrieve the list of
users.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of users
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more user records.

## Results

Each user data structure includes the following fields:

* `id`: Database ID for this user. (integer)
* `type`: Data type for this user. (choice)
* `url`: URL for this user. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this user was created. (datetime)
* `username`: Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only. (string)
* `first_name`:  (string)
* `last_name`:  (string)
* `email`:  (string)
* `is_superuser`: Designates that this user has all permissions without explicitly assigning them. (boolean)
* `is_system_auditor`:  (boolean)

* `ldap_dn`:  (string)
* `last_login`:  (datetime)
* `external_account`: Set if the account is managed by an external service (field)



## Sorting

To specify that users are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=username

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-username

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=username,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesAccessListList(params *WorkflowJobTemplatesWorkflowJobTemplatesAccessListListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesAccessListListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesAccessListListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_access_list_list",
		Method:             "GET",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/access_list/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesAccessListListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesAccessListListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_access_list_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesActivityStreamList lists activity streams for a workflow job template


Make a GET request to this resource to retrieve a list of
activity streams associated with the selected
workflow job template.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of activity streams
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more activity stream records.

## Results

Each activity stream data structure includes the following fields:

* `id`: Database ID for this activity stream. (integer)
* `type`: Data type for this activity stream. (choice)
* `url`: URL for this activity stream. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `timestamp`:  (datetime)
* `operation`: The action taken with respect to the given object(s). (choice)
    - `create`: Entity Created
    - `update`: Entity Updated
    - `delete`: Entity Deleted
    - `associate`: Entity Associated with another Entity
    - `disassociate`: Entity was Disassociated with another Entity
* `changes`: A summary of the new and changed values when an object is created, updated, or deleted (json)
* `object1`: For create, update, and delete events this is the object type that was affected. For associate and disassociate events this is the object type associated or disassociated with object2. (string)
* `object2`: Unpopulated for create, update, and delete events. For associate and disassociate events this is the object type that object1 is being associated with. (string)
* `object_association`: When present, shows the field name of the role or relationship that changed. (field)
* `action_node`: The cluster node the activity took place on. (string)
* `object_type`: When present, shows the model on which the role or relationship was defined. (field)



## Sorting

To specify that activity streams are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesActivityStreamList(params *WorkflowJobTemplatesWorkflowJobTemplatesActivityStreamListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesActivityStreamListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesActivityStreamListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_activity_stream_list",
		Method:             "GET",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/activity_stream/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesActivityStreamListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesActivityStreamListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_activity_stream_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesCopyCreate copies a workflow job template


Make a GET request to this resource to determine if the current user has
permission to copy the workflow job template and whether any linked
templates or prompted fields will be ignored due to permissions problems.
The response will include the following fields:

* `can_copy`: Flag indicating whether the active user has permission to make
  a copy of this workflow job template, provides same content as the
  workflow job template detail view summary_fields.user_capabilities.copy
  (boolean, read-only)
* `can_copy_without_user_input`: Flag indicating if the user should be
  prompted for confirmation before the copy is executed (boolean, read-only)
* `templates_unable_to_copy`: List of node ids of nodes that have a related
  job template, project, or inventory that the current user lacks permission
  to use and will be missing in workflow nodes of the copy (array, read-only)
* `inventories_unable_to_copy`: List of node ids of nodes that have a related
  prompted inventory that the current user lacks permission
  to use and will be missing in workflow nodes of the copy (array, read-only)
* `credentials_unable_to_copy`: List of node ids of nodes that have a related
  prompted credential that the current user lacks permission
  to use and will be missing in workflow nodes of the copy (array, read-only)

Make a POST request to this endpoint to save a copy of this
workflow job template. No POST data is accepted for this action.

If successful, the response status code will be 201. The response body will
contain serialized data about the new workflow job template, which will be
similar to the original workflow job template, but with an additional `@`
and a timestamp in the name.

All workflow nodes and connections in the original will also exist in the
copy. The nodes will be missing related resources if the user did not have
access to use them.
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesCopyCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesCopyCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesCopyCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesCopyCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_copy_create",
		Method:             "POST",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/copy/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesCopyCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesCopyCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_copy_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesCopyList copies a workflow job template


Make a GET request to this resource to determine if the current user has
permission to copy the workflow job template and whether any linked
templates or prompted fields will be ignored due to permissions problems.
The response will include the following fields:

* `can_copy`: Flag indicating whether the active user has permission to make
  a copy of this workflow job template, provides same content as the
  workflow job template detail view summary_fields.user_capabilities.copy
  (boolean, read-only)
* `can_copy_without_user_input`: Flag indicating if the user should be
  prompted for confirmation before the copy is executed (boolean, read-only)
* `templates_unable_to_copy`: List of node ids of nodes that have a related
  job template, project, or inventory that the current user lacks permission
  to use and will be missing in workflow nodes of the copy (array, read-only)
* `inventories_unable_to_copy`: List of node ids of nodes that have a related
  prompted inventory that the current user lacks permission
  to use and will be missing in workflow nodes of the copy (array, read-only)
* `credentials_unable_to_copy`: List of node ids of nodes that have a related
  prompted credential that the current user lacks permission
  to use and will be missing in workflow nodes of the copy (array, read-only)

Make a POST request to this endpoint to save a copy of this
workflow job template. No POST data is accepted for this action.

If successful, the response status code will be 201. The response body will
contain serialized data about the new workflow job template, which will be
similar to the original workflow job template, but with an additional `@`
and a timestamp in the name.

All workflow nodes and connections in the original will also exist in the
copy. The nodes will be missing related resources if the user did not have
access to use them.
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesCopyList(params *WorkflowJobTemplatesWorkflowJobTemplatesCopyListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesCopyListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesCopyListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_copy_list",
		Method:             "GET",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/copy/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesCopyListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesCopyListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_copy_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesCreate creates a workflow job template


Make a POST request to this resource with the following workflow job template
fields to create a new workflow job template:









* `name`: Name of this workflow job template. (string, required)
* `description`: Optional description of this workflow job template. (string, default=`""`)




* `extra_vars`:  (json, default=``)
* `organization`: The organization used to determine access to this template. (id, default=``)
* `survey_enabled`:  (boolean, default=`False`)
* `allow_simultaneous`:  (boolean, default=`False`)
* `ask_variables_on_launch`:  (boolean, default=`False`)
* `inventory`: Inventory applied as a prompt, assuming job template prompts for inventory (id, default=``)
* `limit`:  (string, default=`""`)
* `scm_branch`:  (string, default=`""`)
* `ask_inventory_on_launch`:  (boolean, default=`False`)
* `ask_scm_branch_on_launch`:  (boolean, default=`False`)
* `ask_limit_on_launch`:  (boolean, default=`False`)
* `webhook_service`: Service that webhook requests will be accepted from (choice)
    - `""`: ---------
    - `github`: GitHub
    - `gitlab`: GitLab
* `webhook_credential`: Personal Access Token for posting back the status to the service API (id, default=``)
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_create",
		Method:             "POST",
		PathPattern:        "/api/v2/workflow_job_templates/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesDelete deletes a workflow job template


Make a DELETE request to this resource to delete this workflow job template.
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesDelete(params *WorkflowJobTemplatesWorkflowJobTemplatesDeleteParams) (*WorkflowJobTemplatesWorkflowJobTemplatesDeleteNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesDeleteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_delete",
		Method:             "DELETE",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesDeleteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesDeleteNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_delete: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesGithubCreate workflow job templates workflow job templates github create API
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesGithubCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesGithubCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesGithubCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesGithubCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_github_create",
		Method:             "POST",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/github/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesGithubCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesGithubCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_github_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesGitlabCreate workflow job templates workflow job templates gitlab create API
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesGitlabCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesGitlabCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesGitlabCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesGitlabCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_gitlab_create",
		Method:             "POST",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/gitlab/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesGitlabCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesGitlabCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_gitlab_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesLabelsCreate creates a label for a workflow job template


Make a POST request to this resource with the following label
fields to create a new label associated with this
workflow job template.









* `name`: Name of this label. (string, required)
* `organization`: Organization this label belongs to. (id, required)








# Add Labels for a Workflow Job Template:

Make a POST request to this resource with only an `id` field to associate an
existing label with this workflow job template.

# Remove Labels from this Workflow Job Template:

Make a POST request to this resource with `id` and `disassociate` fields to
remove the label from this workflow job template
.




Labels not associated with any other resources are deleted. A label can become disassociated with a resource as a result of 3 events.

1. A label is explicitly disassociated with a related job template
2. A job is deleted with labels
3. A cleanup job deletes a job with labels
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesLabelsCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesLabelsCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesLabelsCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesLabelsCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_labels_create",
		Method:             "POST",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/labels/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesLabelsCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesLabelsCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_labels_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesLabelsList lists labels for a workflow job template


Make a GET request to this resource to retrieve a list of
labels associated with the selected
workflow job template.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of labels
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more label records.

## Results

Each label data structure includes the following fields:

* `id`: Database ID for this label. (integer)
* `type`: Data type for this label. (choice)
* `url`: URL for this label. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this label was created. (datetime)
* `modified`: Timestamp when this label was last modified. (datetime)
* `name`: Name of this label. (string)
* `organization`: Organization this label belongs to. (id)



## Sorting

To specify that labels are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesLabelsList(params *WorkflowJobTemplatesWorkflowJobTemplatesLabelsListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesLabelsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesLabelsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_labels_list",
		Method:             "GET",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/labels/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesLabelsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesLabelsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_labels_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesLaunchCreate launches a workflow job template


Make a GET request to this resource to determine if the workflow_job_template
can be launched and whether any passwords are required to launch the
workflow_job_template. The response will include the following fields:

* `can_start_without_user_input`: Flag indicating if the workflow_job_template
  can be launched without user-input (boolean, read-only)
* `variables_needed_to_start`: Required variable names required to launch the
  workflow_job_template (array, read-only)
* `survey_enabled`: Flag indicating whether the workflow_job_template has an
  enabled survey (boolean, read-only)
* `extra_vars`: Text which is the `extra_vars` field of this workflow_job_template
  (text, read-only)
* `node_templates_missing`: List of node ids of all nodes that have a
  null `unified_job_template`, which will cause their branches to stop
  execution (list, read-only)
* `node_prompts_rejected`: List of node ids of all nodes that have
  specified a field that will be rejected because its  `unified_job_template`
  does not allow prompting for this field, this will not halt execution of
  the branch but the field will be ignored (list, read-only)
* `workflow_job_template_data`: JSON object listing general information of
  this workflow_job_template (JSON object, read-only)

Make a POST request to this resource to launch the workflow_job_template. If any
credential, inventory, project or extra variables (extra_vars) are required, they
must be passed via POST data, with extra_vars given as a YAML or JSON string and
escaped parentheses.

If successful, the response status code will be 201.  If any required passwords
are not provided, a 400 status code will be returned.  If the workflow job cannot
be launched, a 405 status code will be returned. If the provided credential or
inventory are not allowed to be used by the user, then a 403 status code will
be returned.
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesLaunchCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesLaunchCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesLaunchCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesLaunchCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_launch_create",
		Method:             "POST",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/launch/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesLaunchCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesLaunchCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_launch_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesLaunchRead launches a workflow job template


Make a GET request to this resource to determine if the workflow_job_template
can be launched and whether any passwords are required to launch the
workflow_job_template. The response will include the following fields:

* `can_start_without_user_input`: Flag indicating if the workflow_job_template
  can be launched without user-input (boolean, read-only)
* `variables_needed_to_start`: Required variable names required to launch the
  workflow_job_template (array, read-only)
* `survey_enabled`: Flag indicating whether the workflow_job_template has an
  enabled survey (boolean, read-only)
* `extra_vars`: Text which is the `extra_vars` field of this workflow_job_template
  (text, read-only)
* `node_templates_missing`: List of node ids of all nodes that have a
  null `unified_job_template`, which will cause their branches to stop
  execution (list, read-only)
* `node_prompts_rejected`: List of node ids of all nodes that have
  specified a field that will be rejected because its  `unified_job_template`
  does not allow prompting for this field, this will not halt execution of
  the branch but the field will be ignored (list, read-only)
* `workflow_job_template_data`: JSON object listing general information of
  this workflow_job_template (JSON object, read-only)

Make a POST request to this resource to launch the workflow_job_template. If any
credential, inventory, project or extra variables (extra_vars) are required, they
must be passed via POST data, with extra_vars given as a YAML or JSON string and
escaped parentheses.

If successful, the response status code will be 201.  If any required passwords
are not provided, a 400 status code will be returned.  If the workflow job cannot
be launched, a 405 status code will be returned. If the provided credential or
inventory are not allowed to be used by the user, then a 403 status code will
be returned.
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesLaunchRead(params *WorkflowJobTemplatesWorkflowJobTemplatesLaunchReadParams) (*WorkflowJobTemplatesWorkflowJobTemplatesLaunchReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesLaunchReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_launch_read",
		Method:             "GET",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/launch/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesLaunchReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesLaunchReadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_launch_read: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesList lists workflow job templates


Make a GET request to this resource to retrieve the list of
workflow job templates.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of workflow job templates
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more workflow job template records.

## Results

Each workflow job template data structure includes the following fields:

* `id`: Database ID for this workflow job template. (integer)
* `type`: Data type for this workflow job template. (choice)
* `url`: URL for this workflow job template. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this workflow job template was created. (datetime)
* `modified`: Timestamp when this workflow job template was last modified. (datetime)
* `name`: Name of this workflow job template. (string)
* `description`: Optional description of this workflow job template. (string)
* `last_job_run`:  (datetime)
* `last_job_failed`:  (boolean)
* `next_job_run`:  (datetime)
* `status`:  (choice)
    - `new`: New
    - `pending`: Pending
    - `waiting`: Waiting
    - `running`: Running
    - `successful`: Successful
    - `failed`: Failed
    - `error`: Error
    - `canceled`: Canceled
    - `never updated`: Never Updated
    - `ok`: OK
    - `missing`: Missing
    - `none`: No External Source
    - `updating`: Updating
* `extra_vars`:  (json)
* `organization`: The organization used to determine access to this template. (id)
* `survey_enabled`:  (boolean)
* `allow_simultaneous`:  (boolean)
* `ask_variables_on_launch`:  (boolean)
* `inventory`: Inventory applied as a prompt, assuming job template prompts for inventory (id)
* `limit`:  (string)
* `scm_branch`:  (string)
* `ask_inventory_on_launch`:  (boolean)
* `ask_scm_branch_on_launch`:  (boolean)
* `ask_limit_on_launch`:  (boolean)
* `webhook_service`: Service that webhook requests will be accepted from (choice)
    - `""`: ---------
    - `github`: GitHub
    - `gitlab`: GitLab
* `webhook_credential`: Personal Access Token for posting back the status to the service API (id)



## Sorting

To specify that workflow job templates are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesList(params *WorkflowJobTemplatesWorkflowJobTemplatesListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_list",
		Method:             "GET",
		PathPattern:        "/api/v2/workflow_job_templates/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesApprovalsCreate creates a notification template for a workflow job template


Make a POST request to this resource with the following notification template
fields to create a new notification template associated with this
workflow job template.









* `name`: Name of this notification template. (string, required)
* `description`: Optional description of this notification template. (string, default=`""`)
* `organization`:  (id, required)
* `notification_type`:  (choice, required)
    - `email`: Email
    - `grafana`: Grafana
    - `hipchat`: HipChat
    - `irc`: IRC
    - `mattermost`: Mattermost
    - `pagerduty`: Pagerduty
    - `rocketchat`: Rocket.Chat
    - `slack`: Slack
    - `twilio`: Twilio
    - `webhook`: Webhook
* `notification_configuration`:  (json, default=`{}`)
* `messages`: Optional custom messages for notification template. (json, default=`{&#39;started&#39;: None, &#39;success&#39;: None, &#39;error&#39;: None, &#39;workflow_approval&#39;: None}`)








# Add Notification Templates for a Workflow Job Template:

Make a POST request to this resource with only an `id` field to associate an
existing notification template with this workflow job template.

# Remove Notification Templates from this Workflow Job Template:

Make a POST request to this resource with `id` and `disassociate` fields to
remove the notification template from this workflow job template
 without deleting the notification template.
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesApprovalsCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesApprovalsCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesApprovalsCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesApprovalsCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_notification_templates_approvals_create",
		Method:             "POST",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/notification_templates_approvals/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesApprovalsCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesApprovalsCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_notification_templates_approvals_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesApprovalsList lists notification templates for a workflow job template


Make a GET request to this resource to retrieve a list of
notification templates associated with the selected
workflow job template.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of notification templates
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more notification template records.

## Results

Each notification template data structure includes the following fields:

* `id`: Database ID for this notification template. (integer)
* `type`: Data type for this notification template. (choice)
* `url`: URL for this notification template. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this notification template was created. (datetime)
* `modified`: Timestamp when this notification template was last modified. (datetime)
* `name`: Name of this notification template. (string)
* `description`: Optional description of this notification template. (string)
* `organization`:  (id)
* `notification_type`:  (choice)
    - `email`: Email
    - `grafana`: Grafana
    - `hipchat`: HipChat
    - `irc`: IRC
    - `mattermost`: Mattermost
    - `pagerduty`: Pagerduty
    - `rocketchat`: Rocket.Chat
    - `slack`: Slack
    - `twilio`: Twilio
    - `webhook`: Webhook
* `notification_configuration`:  (json)
* `messages`: Optional custom messages for notification template. (json)



## Sorting

To specify that notification templates are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesApprovalsList(params *WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesApprovalsListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesApprovalsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesApprovalsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_notification_templates_approvals_list",
		Method:             "GET",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/notification_templates_approvals/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesApprovalsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesApprovalsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_notification_templates_approvals_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesErrorCreate creates a notification template for a workflow job template


Make a POST request to this resource with the following notification template
fields to create a new notification template associated with this
workflow job template.









* `name`: Name of this notification template. (string, required)
* `description`: Optional description of this notification template. (string, default=`""`)
* `organization`:  (id, required)
* `notification_type`:  (choice, required)
    - `email`: Email
    - `grafana`: Grafana
    - `hipchat`: HipChat
    - `irc`: IRC
    - `mattermost`: Mattermost
    - `pagerduty`: Pagerduty
    - `rocketchat`: Rocket.Chat
    - `slack`: Slack
    - `twilio`: Twilio
    - `webhook`: Webhook
* `notification_configuration`:  (json, default=`{}`)
* `messages`: Optional custom messages for notification template. (json, default=`{&#39;started&#39;: None, &#39;success&#39;: None, &#39;error&#39;: None, &#39;workflow_approval&#39;: None}`)








# Add Notification Templates for a Workflow Job Template:

Make a POST request to this resource with only an `id` field to associate an
existing notification template with this workflow job template.

# Remove Notification Templates from this Workflow Job Template:

Make a POST request to this resource with `id` and `disassociate` fields to
remove the notification template from this workflow job template
 without deleting the notification template.
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesErrorCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesErrorCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesErrorCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesErrorCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_notification_templates_error_create",
		Method:             "POST",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/notification_templates_error/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesErrorCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesErrorCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_notification_templates_error_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesErrorList lists notification templates for a workflow job template


Make a GET request to this resource to retrieve a list of
notification templates associated with the selected
workflow job template.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of notification templates
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more notification template records.

## Results

Each notification template data structure includes the following fields:

* `id`: Database ID for this notification template. (integer)
* `type`: Data type for this notification template. (choice)
* `url`: URL for this notification template. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this notification template was created. (datetime)
* `modified`: Timestamp when this notification template was last modified. (datetime)
* `name`: Name of this notification template. (string)
* `description`: Optional description of this notification template. (string)
* `organization`:  (id)
* `notification_type`:  (choice)
    - `email`: Email
    - `grafana`: Grafana
    - `hipchat`: HipChat
    - `irc`: IRC
    - `mattermost`: Mattermost
    - `pagerduty`: Pagerduty
    - `rocketchat`: Rocket.Chat
    - `slack`: Slack
    - `twilio`: Twilio
    - `webhook`: Webhook
* `notification_configuration`:  (json)
* `messages`: Optional custom messages for notification template. (json)



## Sorting

To specify that notification templates are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesErrorList(params *WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesErrorListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesErrorListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesErrorListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_notification_templates_error_list",
		Method:             "GET",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/notification_templates_error/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesErrorListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesErrorListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_notification_templates_error_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesStartedCreate creates a notification template for a workflow job template


Make a POST request to this resource with the following notification template
fields to create a new notification template associated with this
workflow job template.









* `name`: Name of this notification template. (string, required)
* `description`: Optional description of this notification template. (string, default=`""`)
* `organization`:  (id, required)
* `notification_type`:  (choice, required)
    - `email`: Email
    - `grafana`: Grafana
    - `hipchat`: HipChat
    - `irc`: IRC
    - `mattermost`: Mattermost
    - `pagerduty`: Pagerduty
    - `rocketchat`: Rocket.Chat
    - `slack`: Slack
    - `twilio`: Twilio
    - `webhook`: Webhook
* `notification_configuration`:  (json, default=`{}`)
* `messages`: Optional custom messages for notification template. (json, default=`{&#39;started&#39;: None, &#39;success&#39;: None, &#39;error&#39;: None, &#39;workflow_approval&#39;: None}`)








# Add Notification Templates for a Workflow Job Template:

Make a POST request to this resource with only an `id` field to associate an
existing notification template with this workflow job template.

# Remove Notification Templates from this Workflow Job Template:

Make a POST request to this resource with `id` and `disassociate` fields to
remove the notification template from this workflow job template
 without deleting the notification template.
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesStartedCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesStartedCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesStartedCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesStartedCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_notification_templates_started_create",
		Method:             "POST",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/notification_templates_started/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesStartedCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesStartedCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_notification_templates_started_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesStartedList lists notification templates for a workflow job template


Make a GET request to this resource to retrieve a list of
notification templates associated with the selected
workflow job template.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of notification templates
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more notification template records.

## Results

Each notification template data structure includes the following fields:

* `id`: Database ID for this notification template. (integer)
* `type`: Data type for this notification template. (choice)
* `url`: URL for this notification template. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this notification template was created. (datetime)
* `modified`: Timestamp when this notification template was last modified. (datetime)
* `name`: Name of this notification template. (string)
* `description`: Optional description of this notification template. (string)
* `organization`:  (id)
* `notification_type`:  (choice)
    - `email`: Email
    - `grafana`: Grafana
    - `hipchat`: HipChat
    - `irc`: IRC
    - `mattermost`: Mattermost
    - `pagerduty`: Pagerduty
    - `rocketchat`: Rocket.Chat
    - `slack`: Slack
    - `twilio`: Twilio
    - `webhook`: Webhook
* `notification_configuration`:  (json)
* `messages`: Optional custom messages for notification template. (json)



## Sorting

To specify that notification templates are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesStartedList(params *WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesStartedListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesStartedListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesStartedListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_notification_templates_started_list",
		Method:             "GET",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/notification_templates_started/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesStartedListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesStartedListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_notification_templates_started_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesSuccessCreate creates a notification template for a workflow job template


Make a POST request to this resource with the following notification template
fields to create a new notification template associated with this
workflow job template.









* `name`: Name of this notification template. (string, required)
* `description`: Optional description of this notification template. (string, default=`""`)
* `organization`:  (id, required)
* `notification_type`:  (choice, required)
    - `email`: Email
    - `grafana`: Grafana
    - `hipchat`: HipChat
    - `irc`: IRC
    - `mattermost`: Mattermost
    - `pagerduty`: Pagerduty
    - `rocketchat`: Rocket.Chat
    - `slack`: Slack
    - `twilio`: Twilio
    - `webhook`: Webhook
* `notification_configuration`:  (json, default=`{}`)
* `messages`: Optional custom messages for notification template. (json, default=`{&#39;started&#39;: None, &#39;success&#39;: None, &#39;error&#39;: None, &#39;workflow_approval&#39;: None}`)








# Add Notification Templates for a Workflow Job Template:

Make a POST request to this resource with only an `id` field to associate an
existing notification template with this workflow job template.

# Remove Notification Templates from this Workflow Job Template:

Make a POST request to this resource with `id` and `disassociate` fields to
remove the notification template from this workflow job template
 without deleting the notification template.
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesSuccessCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesSuccessCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesSuccessCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesSuccessCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_notification_templates_success_create",
		Method:             "POST",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/notification_templates_success/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesSuccessCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesSuccessCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_notification_templates_success_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesSuccessList lists notification templates for a workflow job template


Make a GET request to this resource to retrieve a list of
notification templates associated with the selected
workflow job template.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of notification templates
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more notification template records.

## Results

Each notification template data structure includes the following fields:

* `id`: Database ID for this notification template. (integer)
* `type`: Data type for this notification template. (choice)
* `url`: URL for this notification template. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this notification template was created. (datetime)
* `modified`: Timestamp when this notification template was last modified. (datetime)
* `name`: Name of this notification template. (string)
* `description`: Optional description of this notification template. (string)
* `organization`:  (id)
* `notification_type`:  (choice)
    - `email`: Email
    - `grafana`: Grafana
    - `hipchat`: HipChat
    - `irc`: IRC
    - `mattermost`: Mattermost
    - `pagerduty`: Pagerduty
    - `rocketchat`: Rocket.Chat
    - `slack`: Slack
    - `twilio`: Twilio
    - `webhook`: Webhook
* `notification_configuration`:  (json)
* `messages`: Optional custom messages for notification template. (json)



## Sorting

To specify that notification templates are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesSuccessList(params *WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesSuccessListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesSuccessListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesSuccessListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_notification_templates_success_list",
		Method:             "GET",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/notification_templates_success/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesSuccessListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesNotificationTemplatesSuccessListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_notification_templates_success_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesObjectRolesList lists roles for a workflow job template


Make a GET request to this resource to retrieve a list of
roles associated with the selected
workflow job template.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of roles
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more role records.

## Results

Each role data structure includes the following fields:

* `id`: Database ID for this role. (integer)
* `type`: Data type for this role. (choice)
* `url`: URL for this role. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `name`: Name of this role. (field)
* `description`: Optional description of this role. (field)



## Sorting

To specify that roles are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesObjectRolesList(params *WorkflowJobTemplatesWorkflowJobTemplatesObjectRolesListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesObjectRolesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesObjectRolesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_object_roles_list",
		Method:             "GET",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/object_roles/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesObjectRolesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesObjectRolesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_object_roles_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesPartialUpdate updates a workflow job template


Make a PUT or PATCH request to this resource to update this
workflow job template.  The following fields may be modified:









* `name`: Name of this workflow job template. (string, required)
* `description`: Optional description of this workflow job template. (string, default=`""`)




* `extra_vars`:  (json, default=``)
* `organization`: The organization used to determine access to this template. (id, default=``)
* `survey_enabled`:  (boolean, default=`False`)
* `allow_simultaneous`:  (boolean, default=`False`)
* `ask_variables_on_launch`:  (boolean, default=`False`)
* `inventory`: Inventory applied as a prompt, assuming job template prompts for inventory (id, default=``)
* `limit`:  (string, default=`""`)
* `scm_branch`:  (string, default=`""`)
* `ask_inventory_on_launch`:  (boolean, default=`False`)
* `ask_scm_branch_on_launch`:  (boolean, default=`False`)
* `ask_limit_on_launch`:  (boolean, default=`False`)
* `webhook_service`: Service that webhook requests will be accepted from (choice)
    - `""`: ---------
    - `github`: GitHub
    - `gitlab`: GitLab
* `webhook_credential`: Personal Access Token for posting back the status to the service API (id, default=``)








For a PATCH request, include only the fields that are being modified.
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesPartialUpdate(params *WorkflowJobTemplatesWorkflowJobTemplatesPartialUpdateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesPartialUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesPartialUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_partial_update",
		Method:             "PATCH",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesPartialUpdateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesPartialUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_partial_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesRead retrieves a workflow job template


Make GET request to this resource to retrieve a single workflow job template
record containing the following fields:

* `id`: Database ID for this workflow job template. (integer)
* `type`: Data type for this workflow job template. (choice)
* `url`: URL for this workflow job template. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this workflow job template was created. (datetime)
* `modified`: Timestamp when this workflow job template was last modified. (datetime)
* `name`: Name of this workflow job template. (string)
* `description`: Optional description of this workflow job template. (string)
* `last_job_run`:  (datetime)
* `last_job_failed`:  (boolean)
* `next_job_run`:  (datetime)
* `status`:  (choice)
    - `new`: New
    - `pending`: Pending
    - `waiting`: Waiting
    - `running`: Running
    - `successful`: Successful
    - `failed`: Failed
    - `error`: Error
    - `canceled`: Canceled
    - `never updated`: Never Updated
    - `ok`: OK
    - `missing`: Missing
    - `none`: No External Source
    - `updating`: Updating
* `extra_vars`:  (json)
* `organization`: The organization used to determine access to this template. (id)
* `survey_enabled`:  (boolean)
* `allow_simultaneous`:  (boolean)
* `ask_variables_on_launch`:  (boolean)
* `inventory`: Inventory applied as a prompt, assuming job template prompts for inventory (id)
* `limit`:  (string)
* `scm_branch`:  (string)
* `ask_inventory_on_launch`:  (boolean)
* `ask_scm_branch_on_launch`:  (boolean)
* `ask_limit_on_launch`:  (boolean)
* `webhook_service`: Service that webhook requests will be accepted from (choice)
    - `""`: ---------
    - `github`: GitHub
    - `gitlab`: GitLab
* `webhook_credential`: Personal Access Token for posting back the status to the service API (id)
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesRead(params *WorkflowJobTemplatesWorkflowJobTemplatesReadParams) (*WorkflowJobTemplatesWorkflowJobTemplatesReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_read",
		Method:             "GET",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesReadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_read: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesSchedulesCreate creates a schedule for a workflow job template


Make a POST request to this resource with the following schedule
fields to create a new schedule associated with this
workflow job template.


* `rrule`: A value representing the schedules iCal recurrence rule. (string, required)







* `name`: Name of this schedule. (string, required)
* `description`: Optional description of this schedule. (string, default=`""`)
* `extra_data`:  (json, default=`{}`)
* `inventory`: Inventory applied as a prompt, assuming job template prompts for inventory (id, default=``)
* `scm_branch`:  (string, default=`""`)
* `job_type`:  (choice)
    - `None`: --------- (default)
    - `""`: ---------
    - `run`: Run
    - `check`: Check
* `job_tags`:  (string, default=`""`)
* `skip_tags`:  (string, default=`""`)
* `limit`:  (string, default=`""`)
* `diff_mode`:  (boolean, default=`None`)
* `verbosity`:  (choice)
    - `None`: --------- (default)
    - `0`: 0 (Normal)
    - `1`: 1 (Verbose)
    - `2`: 2 (More Verbose)
    - `3`: 3 (Debug)
    - `4`: 4 (Connection Debug)
    - `5`: 5 (WinRM Debug)

* `enabled`: Enables processing of this schedule. (boolean, default=`True`)
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesSchedulesCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesSchedulesCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesSchedulesCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesSchedulesCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_schedules_create",
		Method:             "POST",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/schedules/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesSchedulesCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesSchedulesCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_schedules_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesSchedulesList lists schedules for a workflow job template


Make a GET request to this resource to retrieve a list of
schedules associated with the selected
workflow job template.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of schedules
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more schedule records.

## Results

Each schedule data structure includes the following fields:

* `rrule`: A value representing the schedules iCal recurrence rule. (string)
* `id`: Database ID for this schedule. (integer)
* `type`: Data type for this schedule. (choice)
* `url`: URL for this schedule. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this schedule was created. (datetime)
* `modified`: Timestamp when this schedule was last modified. (datetime)
* `name`: Name of this schedule. (string)
* `description`: Optional description of this schedule. (string)
* `extra_data`:  (json)
* `inventory`: Inventory applied as a prompt, assuming job template prompts for inventory (id)
* `scm_branch`:  (string)
* `job_type`:  (choice)
    - `None`: ---------
    - `""`: ---------
    - `run`: Run
    - `check`: Check
* `job_tags`:  (string)
* `skip_tags`:  (string)
* `limit`:  (string)
* `diff_mode`:  (boolean)
* `verbosity`:  (choice)
    - `None`: ---------
    - `0`: 0 (Normal)
    - `1`: 1 (Verbose)
    - `2`: 2 (More Verbose)
    - `3`: 3 (Debug)
    - `4`: 4 (Connection Debug)
    - `5`: 5 (WinRM Debug)
* `unified_job_template`:  (id)
* `enabled`: Enables processing of this schedule. (boolean)
* `dtstart`: The first occurrence of the schedule occurs on or after this time. (datetime)
* `dtend`: The last occurrence of the schedule occurs before this time, aftewards the schedule expires. (datetime)
* `next_run`: The next time that the scheduled action will run. (datetime)
* `timezone`:  (field)
* `until`:  (field)



## Sorting

To specify that schedules are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesSchedulesList(params *WorkflowJobTemplatesWorkflowJobTemplatesSchedulesListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesSchedulesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesSchedulesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_schedules_list",
		Method:             "GET",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/schedules/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesSchedulesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesSchedulesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_schedules_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecCreate ps o s t requests to this resource should include the full specification for a workflow job template s survey


Here is an example survey specification:

    {
        "name": "Simple Survey",
        "description": "Description of the simple survey",
        "spec": [
            {
        	"type": "text",
        	"question_name": "example question",
        	"question_description": "What is your favorite color?",
        	"variable": "favorite_color",
        	"required": false,
        	"default": "blue"
            }
        ]
    }

`name` and `description` are required elements at the beginning of the survey specification. `spec` must be a
list of survey items.

Within each survey item `type` must be one of:

* text: For survey questions expecting a textual answer
* password: For survey questions expecting a password or other sensitive information
* integer: For survey questions expecting a whole number answer
* float: For survey questions expecting a decimal number
* multiplechoice: For survey questions where one option from a list is required
* multiselect: For survey questions where multiple items from a presented list can be selected

Each item must contain a `question_name` and `question_description` field that describes the survey question itself.
The `variable` elements of each survey items represents the key that will be given to the playbook when the workflow job template
is launched.  It will contain the value as a result of the survey.

Here is a more comprehensive example showing the various question types and their acceptable parameters:

    {
        "name": "Simple",
        "description": "Description",
        "spec": [
            {
        	"type": "text",
        	"question_name": "cantbeshort",
        	"question_description": "What is a long answer",
        	"variable": "long_answer",
        	"choices": "",
        	"min": 5,
        	"max": "",
        	"required": false,
        	"default": "Leeloo Minai Lekarariba-Laminai-Tchai Ekbat De Sebat"
            },
            {
        	"type": "text",
        	"question_name": "cantbelong",
        	"question_description": "What is a short answer",
        	"variable": "short_answer",
        	"choices": "",
        	"min": "",
        	"max": 7,
        	"required": false,
        	"default": "leeloo"
            },
            {
        	"type": "text",
        	"question_name": "reqd",
        	"question_description": "I should be required",
        	"variable": "reqd_answer",
        	"choices": "",
        	"min": "",
        	"max": "",
        	"required": true,
        	"default": "NOT OPTIONAL"
            },
            {
        	"type": "multiplechoice",
        	"question_name": "achoice",
        	"question_description": "Need one of these",
        	"variable": "single_choice",
        	"choices": ["one", "two"],
        	"min": "",
        	"max": "",
        	"required": false,
        	"default": "one"
            },
            {
        	"type": "multiselect",
        	"question_name": "mchoice",
        	"question_description": "Can have multiples of these",
        	"variable": "multi_choice",
        	"choices": ["one", "two", "three"],
        	"min": "",
        	"max": "",
        	"required": false,
        	"default": "one\nthree"
            },
            {
                "type": "integer",
                "question_name": "integerchoice",
                "question_description": "I need an int here",
                "variable": "int_answer",
                "choices": "",
                "min": 1,
                "max": 5,
                "required": false,
                "default": ""
            },
            {
                "type": "float",
                "question_name": "float",
                "question_description": "I need a float here",
                "variable": "float_answer",
                "choices": "",
                "min": 2,
                "max": 5,
                "required": false,
                "default": ""
            }
        ]
    }
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesSurveySpecCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_survey_spec_create",
		Method:             "POST",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/survey_spec/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_survey_spec_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecDelete ps o s t requests to this resource should include the full specification for a workflow job template s survey


Here is an example survey specification:

    {
        "name": "Simple Survey",
        "description": "Description of the simple survey",
        "spec": [
            {
        	"type": "text",
        	"question_name": "example question",
        	"question_description": "What is your favorite color?",
        	"variable": "favorite_color",
        	"required": false,
        	"default": "blue"
            }
        ]
    }

`name` and `description` are required elements at the beginning of the survey specification. `spec` must be a
list of survey items.

Within each survey item `type` must be one of:

* text: For survey questions expecting a textual answer
* password: For survey questions expecting a password or other sensitive information
* integer: For survey questions expecting a whole number answer
* float: For survey questions expecting a decimal number
* multiplechoice: For survey questions where one option from a list is required
* multiselect: For survey questions where multiple items from a presented list can be selected

Each item must contain a `question_name` and `question_description` field that describes the survey question itself.
The `variable` elements of each survey items represents the key that will be given to the playbook when the workflow job template
is launched.  It will contain the value as a result of the survey.

Here is a more comprehensive example showing the various question types and their acceptable parameters:

    {
        "name": "Simple",
        "description": "Description",
        "spec": [
            {
        	"type": "text",
        	"question_name": "cantbeshort",
        	"question_description": "What is a long answer",
        	"variable": "long_answer",
        	"choices": "",
        	"min": 5,
        	"max": "",
        	"required": false,
        	"default": "Leeloo Minai Lekarariba-Laminai-Tchai Ekbat De Sebat"
            },
            {
        	"type": "text",
        	"question_name": "cantbelong",
        	"question_description": "What is a short answer",
        	"variable": "short_answer",
        	"choices": "",
        	"min": "",
        	"max": 7,
        	"required": false,
        	"default": "leeloo"
            },
            {
        	"type": "text",
        	"question_name": "reqd",
        	"question_description": "I should be required",
        	"variable": "reqd_answer",
        	"choices": "",
        	"min": "",
        	"max": "",
        	"required": true,
        	"default": "NOT OPTIONAL"
            },
            {
        	"type": "multiplechoice",
        	"question_name": "achoice",
        	"question_description": "Need one of these",
        	"variable": "single_choice",
        	"choices": ["one", "two"],
        	"min": "",
        	"max": "",
        	"required": false,
        	"default": "one"
            },
            {
        	"type": "multiselect",
        	"question_name": "mchoice",
        	"question_description": "Can have multiples of these",
        	"variable": "multi_choice",
        	"choices": ["one", "two", "three"],
        	"min": "",
        	"max": "",
        	"required": false,
        	"default": "one\nthree"
            },
            {
                "type": "integer",
                "question_name": "integerchoice",
                "question_description": "I need an int here",
                "variable": "int_answer",
                "choices": "",
                "min": 1,
                "max": 5,
                "required": false,
                "default": ""
            },
            {
                "type": "float",
                "question_name": "float",
                "question_description": "I need a float here",
                "variable": "float_answer",
                "choices": "",
                "min": 2,
                "max": 5,
                "required": false,
                "default": ""
            }
        ]
    }
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecDelete(params *WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecDeleteParams) (*WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecDeleteNoContent, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesSurveySpecDeleteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_survey_spec_delete",
		Method:             "DELETE",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/survey_spec/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecDeleteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecDeleteNoContent)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_survey_spec_delete: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecList ps o s t requests to this resource should include the full specification for a workflow job template s survey


Here is an example survey specification:

    {
        "name": "Simple Survey",
        "description": "Description of the simple survey",
        "spec": [
            {
        	"type": "text",
        	"question_name": "example question",
        	"question_description": "What is your favorite color?",
        	"variable": "favorite_color",
        	"required": false,
        	"default": "blue"
            }
        ]
    }

`name` and `description` are required elements at the beginning of the survey specification. `spec` must be a
list of survey items.

Within each survey item `type` must be one of:

* text: For survey questions expecting a textual answer
* password: For survey questions expecting a password or other sensitive information
* integer: For survey questions expecting a whole number answer
* float: For survey questions expecting a decimal number
* multiplechoice: For survey questions where one option from a list is required
* multiselect: For survey questions where multiple items from a presented list can be selected

Each item must contain a `question_name` and `question_description` field that describes the survey question itself.
The `variable` elements of each survey items represents the key that will be given to the playbook when the workflow job template
is launched.  It will contain the value as a result of the survey.

Here is a more comprehensive example showing the various question types and their acceptable parameters:

    {
        "name": "Simple",
        "description": "Description",
        "spec": [
            {
        	"type": "text",
        	"question_name": "cantbeshort",
        	"question_description": "What is a long answer",
        	"variable": "long_answer",
        	"choices": "",
        	"min": 5,
        	"max": "",
        	"required": false,
        	"default": "Leeloo Minai Lekarariba-Laminai-Tchai Ekbat De Sebat"
            },
            {
        	"type": "text",
        	"question_name": "cantbelong",
        	"question_description": "What is a short answer",
        	"variable": "short_answer",
        	"choices": "",
        	"min": "",
        	"max": 7,
        	"required": false,
        	"default": "leeloo"
            },
            {
        	"type": "text",
        	"question_name": "reqd",
        	"question_description": "I should be required",
        	"variable": "reqd_answer",
        	"choices": "",
        	"min": "",
        	"max": "",
        	"required": true,
        	"default": "NOT OPTIONAL"
            },
            {
        	"type": "multiplechoice",
        	"question_name": "achoice",
        	"question_description": "Need one of these",
        	"variable": "single_choice",
        	"choices": ["one", "two"],
        	"min": "",
        	"max": "",
        	"required": false,
        	"default": "one"
            },
            {
        	"type": "multiselect",
        	"question_name": "mchoice",
        	"question_description": "Can have multiples of these",
        	"variable": "multi_choice",
        	"choices": ["one", "two", "three"],
        	"min": "",
        	"max": "",
        	"required": false,
        	"default": "one\nthree"
            },
            {
                "type": "integer",
                "question_name": "integerchoice",
                "question_description": "I need an int here",
                "variable": "int_answer",
                "choices": "",
                "min": 1,
                "max": 5,
                "required": false,
                "default": ""
            },
            {
                "type": "float",
                "question_name": "float",
                "question_description": "I need a float here",
                "variable": "float_answer",
                "choices": "",
                "min": 2,
                "max": 5,
                "required": false,
                "default": ""
            }
        ]
    }
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecList(params *WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesSurveySpecListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_survey_spec_list",
		Method:             "GET",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/survey_spec/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesSurveySpecListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_survey_spec_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesUpdate updates a workflow job template


Make a PUT or PATCH request to this resource to update this
workflow job template.  The following fields may be modified:









* `name`: Name of this workflow job template. (string, required)
* `description`: Optional description of this workflow job template. (string, default=`""`)




* `extra_vars`:  (json, default=``)
* `organization`: The organization used to determine access to this template. (id, default=``)
* `survey_enabled`:  (boolean, default=`False`)
* `allow_simultaneous`:  (boolean, default=`False`)
* `ask_variables_on_launch`:  (boolean, default=`False`)
* `inventory`: Inventory applied as a prompt, assuming job template prompts for inventory (id, default=``)
* `limit`:  (string, default=`""`)
* `scm_branch`:  (string, default=`""`)
* `ask_inventory_on_launch`:  (boolean, default=`False`)
* `ask_scm_branch_on_launch`:  (boolean, default=`False`)
* `ask_limit_on_launch`:  (boolean, default=`False`)
* `webhook_service`: Service that webhook requests will be accepted from (choice)
    - `""`: ---------
    - `github`: GitHub
    - `gitlab`: GitLab
* `webhook_credential`: Personal Access Token for posting back the status to the service API (id, default=``)






For a PUT request, include **all** fields in the request.
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesUpdate(params *WorkflowJobTemplatesWorkflowJobTemplatesUpdateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesUpdateOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesUpdateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_update",
		Method:             "PUT",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesUpdateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesUpdateOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_update: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesWebhookKeyCreate workflow job templates workflow job templates webhook key create API
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesWebhookKeyCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesWebhookKeyCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesWebhookKeyCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesWebhookKeyCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_webhook_key_create",
		Method:             "POST",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/webhook_key/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesWebhookKeyCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesWebhookKeyCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_webhook_key_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesWebhookKeyList workflow job templates workflow job templates webhook key list API
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesWebhookKeyList(params *WorkflowJobTemplatesWorkflowJobTemplatesWebhookKeyListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesWebhookKeyListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesWebhookKeyListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_webhook_key_list",
		Method:             "GET",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/webhook_key/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesWebhookKeyListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesWebhookKeyListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_webhook_key_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesWorkflowJobsList lists workflow jobs for a workflow job template


Make a GET request to this resource to retrieve a list of
workflow jobs associated with the selected
workflow job template.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of workflow jobs
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more workflow job records.

## Results

Each workflow job data structure includes the following fields:

* `id`: Database ID for this workflow job. (integer)
* `type`: Data type for this workflow job. (choice)
* `url`: URL for this workflow job. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this workflow job was created. (datetime)
* `modified`: Timestamp when this workflow job was last modified. (datetime)
* `name`: Name of this workflow job. (string)
* `description`: Optional description of this workflow job. (string)
* `unified_job_template`:  (id)
* `launch_type`:  (choice)
    - `manual`: Manual
    - `relaunch`: Relaunch
    - `callback`: Callback
    - `scheduled`: Scheduled
    - `dependency`: Dependency
    - `workflow`: Workflow
    - `webhook`: Webhook
    - `sync`: Sync
    - `scm`: SCM Update
* `status`:  (choice)
    - `new`: New
    - `pending`: Pending
    - `waiting`: Waiting
    - `running`: Running
    - `successful`: Successful
    - `failed`: Failed
    - `error`: Error
    - `canceled`: Canceled
* `failed`:  (boolean)
* `started`: The date and time the job was queued for starting. (datetime)
* `finished`: The date and time the job finished execution. (datetime)
* `canceled_on`: The date and time when the cancel request was sent. (datetime)
* `elapsed`: Elapsed time in seconds that the job ran. (decimal)
* `job_explanation`: A status field to indicate the state of the job if it wasn&#39;t able to run and capture stdout (string)
* `workflow_job_template`:  (id)
* `extra_vars`:  (json)
* `allow_simultaneous`:  (boolean)
* `job_template`: If automatically created for a sliced job run, the job template the workflow job was created from. (id)
* `is_sliced_job`:  (boolean)
* `inventory`: Inventory applied as a prompt, assuming job template prompts for inventory (id)
* `limit`:  (string)
* `scm_branch`:  (string)
* `webhook_service`: Service that webhook requests will be accepted from (choice)
    - `""`: ---------
    - `github`: GitHub
    - `gitlab`: GitLab
* `webhook_credential`: Personal Access Token for posting back the status to the service API (id)
* `webhook_guid`: Unique identifier of the event that triggered this webhook (string)



## Sorting

To specify that workflow jobs are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesWorkflowJobsList(params *WorkflowJobTemplatesWorkflowJobTemplatesWorkflowJobsListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesWorkflowJobsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesWorkflowJobsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_workflow_jobs_list",
		Method:             "GET",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/workflow_jobs/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesWorkflowJobsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesWorkflowJobsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_workflow_jobs_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesWorkflowNodesCreate workflows job template workflow node list


Workflow nodes reference templates to execute and define the ordering
in which to execute them. After a job in this workflow finishes,
the subsequent actions are to:

 - run nodes contained in "failure_nodes" or "always_nodes" if job failed
 - run nodes contained in "success_nodes" or "always_nodes" if job succeeded

The workflow job is marked as `successful` if all of the jobs running as
a part of the workflow job have completed, and the workflow job has not
been canceled. Even if a job within the workflow has failed, the workflow
job will not be marked as failed.




# Create a Workflow Job Template Node for a Workflow Job Template:

Make a POST request to this resource with the following workflow job template node
fields to create a new workflow job template node associated with this
workflow job template.









* `extra_data`:  (json, default=`{}`)
* `inventory`: Inventory applied as a prompt, assuming job template prompts for inventory (id, default=``)
* `scm_branch`:  (string, default=`""`)
* `job_type`:  (choice)
    - `None`: --------- (default)
    - `""`: ---------
    - `run`: Run
    - `check`: Check
* `job_tags`:  (string, default=`""`)
* `skip_tags`:  (string, default=`""`)
* `limit`:  (string, default=`""`)
* `diff_mode`:  (boolean, default=`None`)
* `verbosity`:  (choice)
    - `None`: --------- (default)
    - `0`: 0 (Normal)
    - `1`: 1 (Verbose)
    - `2`: 2 (More Verbose)
    - `3`: 3 (Debug)
    - `4`: 4 (Connection Debug)
    - `5`: 5 (WinRM Debug)

* `unified_job_template`:  (id, default=``)



* `all_parents_must_converge`: If enabled then the node will only run if all of the parent nodes have met the criteria to reach this node (boolean, default=`False`)
* `identifier`: An identifier for this node that is unique within its workflow. It is copied to workflow job nodes corresponding to this node. (string, default=`"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"`)
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesWorkflowNodesCreate(params *WorkflowJobTemplatesWorkflowJobTemplatesWorkflowNodesCreateParams) (*WorkflowJobTemplatesWorkflowJobTemplatesWorkflowNodesCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesWorkflowNodesCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_workflow_nodes_create",
		Method:             "POST",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/workflow_nodes/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesWorkflowNodesCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesWorkflowNodesCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_workflow_nodes_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobTemplatesWorkflowJobTemplatesWorkflowNodesList workflows job template workflow node list


Workflow nodes reference templates to execute and define the ordering
in which to execute them. After a job in this workflow finishes,
the subsequent actions are to:

 - run nodes contained in "failure_nodes" or "always_nodes" if job failed
 - run nodes contained in "success_nodes" or "always_nodes" if job succeeded

The workflow job is marked as `successful` if all of the jobs running as
a part of the workflow job have completed, and the workflow job has not
been canceled. Even if a job within the workflow has failed, the workflow
job will not be marked as failed.


# List Workflow Job Template Nodes for a Workflow Job Template:

Make a GET request to this resource to retrieve a list of
workflow job template nodes associated with the selected
workflow job template.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of workflow job template nodes
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more workflow job template node records.

## Results

Each workflow job template node data structure includes the following fields:

* `id`: Database ID for this workflow job template node. (integer)
* `type`: Data type for this workflow job template node. (choice)
* `url`: URL for this workflow job template node. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this workflow job template node was created. (datetime)
* `modified`: Timestamp when this workflow job template node was last modified. (datetime)
* `extra_data`:  (json)
* `inventory`: Inventory applied as a prompt, assuming job template prompts for inventory (id)
* `scm_branch`:  (string)
* `job_type`:  (choice)
    - `None`: ---------
    - `""`: ---------
    - `run`: Run
    - `check`: Check
* `job_tags`:  (string)
* `skip_tags`:  (string)
* `limit`:  (string)
* `diff_mode`:  (boolean)
* `verbosity`:  (choice)
    - `None`: ---------
    - `0`: 0 (Normal)
    - `1`: 1 (Verbose)
    - `2`: 2 (More Verbose)
    - `3`: 3 (Debug)
    - `4`: 4 (Connection Debug)
    - `5`: 5 (WinRM Debug)
* `workflow_job_template`:  (id)
* `unified_job_template`:  (id)
* `success_nodes`:  (field)
* `failure_nodes`:  (field)
* `always_nodes`:  (field)
* `all_parents_must_converge`: If enabled then the node will only run if all of the parent nodes have met the criteria to reach this node (boolean)
* `identifier`: An identifier for this node that is unique within its workflow. It is copied to workflow job nodes corresponding to this node. (string)



## Sorting

To specify that workflow job template nodes are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) WorkflowJobTemplatesWorkflowJobTemplatesWorkflowNodesList(params *WorkflowJobTemplatesWorkflowJobTemplatesWorkflowNodesListParams) (*WorkflowJobTemplatesWorkflowJobTemplatesWorkflowNodesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobTemplatesWorkflowJobTemplatesWorkflowNodesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Templates_workflow_job_templates_workflow_nodes_list",
		Method:             "GET",
		PathPattern:        "/api/v2/workflow_job_templates/{id}/workflow_nodes/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobTemplatesWorkflowJobTemplatesWorkflowNodesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobTemplatesWorkflowJobTemplatesWorkflowNodesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Templates_workflow_job_templates_workflow_nodes_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
