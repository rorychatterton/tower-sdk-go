// Code generated by go-swagger; DO NOT EDIT.

package workflow_job_nodes

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new workflow job nodes API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for workflow job nodes API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	WorkflowJobNodesWorkflowJobNodesAlwaysNodesList(params *WorkflowJobNodesWorkflowJobNodesAlwaysNodesListParams) (*WorkflowJobNodesWorkflowJobNodesAlwaysNodesListOK, error)

	WorkflowJobNodesWorkflowJobNodesCredentialsList(params *WorkflowJobNodesWorkflowJobNodesCredentialsListParams) (*WorkflowJobNodesWorkflowJobNodesCredentialsListOK, error)

	WorkflowJobNodesWorkflowJobNodesFailureNodesList(params *WorkflowJobNodesWorkflowJobNodesFailureNodesListParams) (*WorkflowJobNodesWorkflowJobNodesFailureNodesListOK, error)

	WorkflowJobNodesWorkflowJobNodesList(params *WorkflowJobNodesWorkflowJobNodesListParams) (*WorkflowJobNodesWorkflowJobNodesListOK, error)

	WorkflowJobNodesWorkflowJobNodesRead(params *WorkflowJobNodesWorkflowJobNodesReadParams) (*WorkflowJobNodesWorkflowJobNodesReadOK, error)

	WorkflowJobNodesWorkflowJobNodesSuccessNodesList(params *WorkflowJobNodesWorkflowJobNodesSuccessNodesListParams) (*WorkflowJobNodesWorkflowJobNodesSuccessNodesListOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  WorkflowJobNodesWorkflowJobNodesAlwaysNodesList lists workflow job nodes for a workflow job node


Make a GET request to this resource to retrieve a list of
workflow job nodes associated with the selected
workflow job node.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of workflow job nodes
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more workflow job node records.

## Results

Each workflow job node data structure includes the following fields:

* `id`: Database ID for this workflow job node. (integer)
* `type`: Data type for this workflow job node. (choice)
* `url`: URL for this workflow job node. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this workflow job node was created. (datetime)
* `modified`: Timestamp when this workflow job node was last modified. (datetime)
* `extra_data`:  (json)
* `inventory`: Inventory applied as a prompt, assuming job template prompts for inventory (id)
* `scm_branch`:  (string)
* `job_type`:  (choice)
    - `None`: ---------
    - `""`: ---------
    - `run`: Run
    - `check`: Check
* `job_tags`:  (string)
* `skip_tags`:  (string)
* `limit`:  (string)
* `diff_mode`:  (boolean)
* `verbosity`:  (choice)
    - `None`: ---------
    - `0`: 0 (Normal)
    - `1`: 1 (Verbose)
    - `2`: 2 (More Verbose)
    - `3`: 3 (Debug)
    - `4`: 4 (Connection Debug)
    - `5`: 5 (WinRM Debug)
* `job`:  (id)
* `workflow_job`:  (id)
* `unified_job_template`:  (id)
* `success_nodes`:  (field)
* `failure_nodes`:  (field)
* `always_nodes`:  (field)
* `all_parents_must_converge`: If enabled then the node will only run if all of the parent nodes have met the criteria to reach this node (boolean)
* `do_not_run`: Indicates that a job will not be created when True. Workflow runtime semantics will mark this True if the node is in a path that will decidedly not be ran. A value of False means the node may not run. (boolean)
* `identifier`: An identifier coresponding to the workflow job template node that this node was created from. (string)



## Sorting

To specify that workflow job nodes are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) WorkflowJobNodesWorkflowJobNodesAlwaysNodesList(params *WorkflowJobNodesWorkflowJobNodesAlwaysNodesListParams) (*WorkflowJobNodesWorkflowJobNodesAlwaysNodesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobNodesWorkflowJobNodesAlwaysNodesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Nodes_workflow_job_nodes_always_nodes_list",
		Method:             "GET",
		PathPattern:        "/api/v2/workflow_job_nodes/{id}/always_nodes/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobNodesWorkflowJobNodesAlwaysNodesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobNodesWorkflowJobNodesAlwaysNodesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Nodes_workflow_job_nodes_always_nodes_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobNodesWorkflowJobNodesCredentialsList lists credentials for a workflow job node


Make a GET request to this resource to retrieve a list of
credentials associated with the selected
workflow job node.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of credentials
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more credential records.

## Results

Each credential data structure includes the following fields:

* `id`: Database ID for this credential. (integer)
* `type`: Data type for this credential. (choice)
* `url`: URL for this credential. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this credential was created. (datetime)
* `modified`: Timestamp when this credential was last modified. (datetime)
* `name`: Name of this credential. (string)
* `description`: Optional description of this credential. (string)
* `organization`:  (id)
* `credential_type`: Specify the type of credential you want to create. Refer to the Ansible Tower documentation for details on each type. (id)
* `inputs`: Enter inputs using either JSON or YAML syntax. Refer to the Ansible Tower documentation for example syntax. (json)
* `kind`:  (field)
* `cloud`:  (field)
* `kubernetes`:  (field)



## Sorting

To specify that credentials are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) WorkflowJobNodesWorkflowJobNodesCredentialsList(params *WorkflowJobNodesWorkflowJobNodesCredentialsListParams) (*WorkflowJobNodesWorkflowJobNodesCredentialsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobNodesWorkflowJobNodesCredentialsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Nodes_workflow_job_nodes_credentials_list",
		Method:             "GET",
		PathPattern:        "/api/v2/workflow_job_nodes/{id}/credentials/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobNodesWorkflowJobNodesCredentialsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobNodesWorkflowJobNodesCredentialsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Nodes_workflow_job_nodes_credentials_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobNodesWorkflowJobNodesFailureNodesList lists workflow job nodes for a workflow job node


Make a GET request to this resource to retrieve a list of
workflow job nodes associated with the selected
workflow job node.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of workflow job nodes
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more workflow job node records.

## Results

Each workflow job node data structure includes the following fields:

* `id`: Database ID for this workflow job node. (integer)
* `type`: Data type for this workflow job node. (choice)
* `url`: URL for this workflow job node. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this workflow job node was created. (datetime)
* `modified`: Timestamp when this workflow job node was last modified. (datetime)
* `extra_data`:  (json)
* `inventory`: Inventory applied as a prompt, assuming job template prompts for inventory (id)
* `scm_branch`:  (string)
* `job_type`:  (choice)
    - `None`: ---------
    - `""`: ---------
    - `run`: Run
    - `check`: Check
* `job_tags`:  (string)
* `skip_tags`:  (string)
* `limit`:  (string)
* `diff_mode`:  (boolean)
* `verbosity`:  (choice)
    - `None`: ---------
    - `0`: 0 (Normal)
    - `1`: 1 (Verbose)
    - `2`: 2 (More Verbose)
    - `3`: 3 (Debug)
    - `4`: 4 (Connection Debug)
    - `5`: 5 (WinRM Debug)
* `job`:  (id)
* `workflow_job`:  (id)
* `unified_job_template`:  (id)
* `success_nodes`:  (field)
* `failure_nodes`:  (field)
* `always_nodes`:  (field)
* `all_parents_must_converge`: If enabled then the node will only run if all of the parent nodes have met the criteria to reach this node (boolean)
* `do_not_run`: Indicates that a job will not be created when True. Workflow runtime semantics will mark this True if the node is in a path that will decidedly not be ran. A value of False means the node may not run. (boolean)
* `identifier`: An identifier coresponding to the workflow job template node that this node was created from. (string)



## Sorting

To specify that workflow job nodes are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) WorkflowJobNodesWorkflowJobNodesFailureNodesList(params *WorkflowJobNodesWorkflowJobNodesFailureNodesListParams) (*WorkflowJobNodesWorkflowJobNodesFailureNodesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobNodesWorkflowJobNodesFailureNodesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Nodes_workflow_job_nodes_failure_nodes_list",
		Method:             "GET",
		PathPattern:        "/api/v2/workflow_job_nodes/{id}/failure_nodes/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobNodesWorkflowJobNodesFailureNodesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobNodesWorkflowJobNodesFailureNodesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Nodes_workflow_job_nodes_failure_nodes_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobNodesWorkflowJobNodesList lists workflow job nodes


Make a GET request to this resource to retrieve the list of
workflow job nodes.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of workflow job nodes
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more workflow job node records.

## Results

Each workflow job node data structure includes the following fields:

* `id`: Database ID for this workflow job node. (integer)
* `type`: Data type for this workflow job node. (choice)
* `url`: URL for this workflow job node. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this workflow job node was created. (datetime)
* `modified`: Timestamp when this workflow job node was last modified. (datetime)
* `extra_data`:  (json)
* `inventory`: Inventory applied as a prompt, assuming job template prompts for inventory (id)
* `scm_branch`:  (string)
* `job_type`:  (choice)
    - `None`: ---------
    - `""`: ---------
    - `run`: Run
    - `check`: Check
* `job_tags`:  (string)
* `skip_tags`:  (string)
* `limit`:  (string)
* `diff_mode`:  (boolean)
* `verbosity`:  (choice)
    - `None`: ---------
    - `0`: 0 (Normal)
    - `1`: 1 (Verbose)
    - `2`: 2 (More Verbose)
    - `3`: 3 (Debug)
    - `4`: 4 (Connection Debug)
    - `5`: 5 (WinRM Debug)
* `job`:  (id)
* `workflow_job`:  (id)
* `unified_job_template`:  (id)
* `success_nodes`:  (field)
* `failure_nodes`:  (field)
* `always_nodes`:  (field)
* `all_parents_must_converge`: If enabled then the node will only run if all of the parent nodes have met the criteria to reach this node (boolean)
* `do_not_run`: Indicates that a job will not be created when True. Workflow runtime semantics will mark this True if the node is in a path that will decidedly not be ran. A value of False means the node may not run. (boolean)
* `identifier`: An identifier coresponding to the workflow job template node that this node was created from. (string)



## Sorting

To specify that workflow job nodes are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) WorkflowJobNodesWorkflowJobNodesList(params *WorkflowJobNodesWorkflowJobNodesListParams) (*WorkflowJobNodesWorkflowJobNodesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobNodesWorkflowJobNodesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Nodes_workflow_job_nodes_list",
		Method:             "GET",
		PathPattern:        "/api/v2/workflow_job_nodes/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobNodesWorkflowJobNodesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobNodesWorkflowJobNodesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Nodes_workflow_job_nodes_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobNodesWorkflowJobNodesRead retrieves a workflow job node


Make GET request to this resource to retrieve a single workflow job node
record containing the following fields:

* `id`: Database ID for this workflow job node. (integer)
* `type`: Data type for this workflow job node. (choice)
* `url`: URL for this workflow job node. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this workflow job node was created. (datetime)
* `modified`: Timestamp when this workflow job node was last modified. (datetime)
* `extra_data`:  (json)
* `inventory`: Inventory applied as a prompt, assuming job template prompts for inventory (id)
* `scm_branch`:  (string)
* `job_type`:  (choice)
    - `None`: ---------
    - `""`: ---------
    - `run`: Run
    - `check`: Check
* `job_tags`:  (string)
* `skip_tags`:  (string)
* `limit`:  (string)
* `diff_mode`:  (boolean)
* `verbosity`:  (choice)
    - `None`: ---------
    - `0`: 0 (Normal)
    - `1`: 1 (Verbose)
    - `2`: 2 (More Verbose)
    - `3`: 3 (Debug)
    - `4`: 4 (Connection Debug)
    - `5`: 5 (WinRM Debug)
* `job`:  (id)
* `workflow_job`:  (id)
* `unified_job_template`:  (id)
* `success_nodes`:  (field)
* `failure_nodes`:  (field)
* `always_nodes`:  (field)
* `all_parents_must_converge`: If enabled then the node will only run if all of the parent nodes have met the criteria to reach this node (boolean)
* `do_not_run`: Indicates that a job will not be created when True. Workflow runtime semantics will mark this True if the node is in a path that will decidedly not be ran. A value of False means the node may not run. (boolean)
* `identifier`: An identifier coresponding to the workflow job template node that this node was created from. (string)
*/
func (a *Client) WorkflowJobNodesWorkflowJobNodesRead(params *WorkflowJobNodesWorkflowJobNodesReadParams) (*WorkflowJobNodesWorkflowJobNodesReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobNodesWorkflowJobNodesReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Nodes_workflow_job_nodes_read",
		Method:             "GET",
		PathPattern:        "/api/v2/workflow_job_nodes/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobNodesWorkflowJobNodesReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobNodesWorkflowJobNodesReadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Nodes_workflow_job_nodes_read: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  WorkflowJobNodesWorkflowJobNodesSuccessNodesList lists workflow job nodes for a workflow job node


Make a GET request to this resource to retrieve a list of
workflow job nodes associated with the selected
workflow job node.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of workflow job nodes
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more workflow job node records.

## Results

Each workflow job node data structure includes the following fields:

* `id`: Database ID for this workflow job node. (integer)
* `type`: Data type for this workflow job node. (choice)
* `url`: URL for this workflow job node. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this workflow job node was created. (datetime)
* `modified`: Timestamp when this workflow job node was last modified. (datetime)
* `extra_data`:  (json)
* `inventory`: Inventory applied as a prompt, assuming job template prompts for inventory (id)
* `scm_branch`:  (string)
* `job_type`:  (choice)
    - `None`: ---------
    - `""`: ---------
    - `run`: Run
    - `check`: Check
* `job_tags`:  (string)
* `skip_tags`:  (string)
* `limit`:  (string)
* `diff_mode`:  (boolean)
* `verbosity`:  (choice)
    - `None`: ---------
    - `0`: 0 (Normal)
    - `1`: 1 (Verbose)
    - `2`: 2 (More Verbose)
    - `3`: 3 (Debug)
    - `4`: 4 (Connection Debug)
    - `5`: 5 (WinRM Debug)
* `job`:  (id)
* `workflow_job`:  (id)
* `unified_job_template`:  (id)
* `success_nodes`:  (field)
* `failure_nodes`:  (field)
* `always_nodes`:  (field)
* `all_parents_must_converge`: If enabled then the node will only run if all of the parent nodes have met the criteria to reach this node (boolean)
* `do_not_run`: Indicates that a job will not be created when True. Workflow runtime semantics will mark this True if the node is in a path that will decidedly not be ran. A value of False means the node may not run. (boolean)
* `identifier`: An identifier coresponding to the workflow job template node that this node was created from. (string)



## Sorting

To specify that workflow job nodes are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) WorkflowJobNodesWorkflowJobNodesSuccessNodesList(params *WorkflowJobNodesWorkflowJobNodesSuccessNodesListParams) (*WorkflowJobNodesWorkflowJobNodesSuccessNodesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewWorkflowJobNodesWorkflowJobNodesSuccessNodesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "Workflow Job Nodes_workflow_job_nodes_success_nodes_list",
		Method:             "GET",
		PathPattern:        "/api/v2/workflow_job_nodes/{id}/success_nodes/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &WorkflowJobNodesWorkflowJobNodesSuccessNodesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*WorkflowJobNodesWorkflowJobNodesSuccessNodesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for Workflow Job Nodes_workflow_job_nodes_success_nodes_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
