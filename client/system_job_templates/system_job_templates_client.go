// Code generated by go-swagger; DO NOT EDIT.

package system_job_templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new system job templates API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for system job templates API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	SystemJobTemplatesSystemJobTemplatesJobsList(params *SystemJobTemplatesSystemJobTemplatesJobsListParams) (*SystemJobTemplatesSystemJobTemplatesJobsListOK, error)

	SystemJobTemplatesSystemJobTemplatesLaunchCreate(params *SystemJobTemplatesSystemJobTemplatesLaunchCreateParams) (*SystemJobTemplatesSystemJobTemplatesLaunchCreateCreated, error)

	SystemJobTemplatesSystemJobTemplatesLaunchList(params *SystemJobTemplatesSystemJobTemplatesLaunchListParams) (*SystemJobTemplatesSystemJobTemplatesLaunchListOK, error)

	SystemJobTemplatesSystemJobTemplatesList(params *SystemJobTemplatesSystemJobTemplatesListParams) (*SystemJobTemplatesSystemJobTemplatesListOK, error)

	SystemJobTemplatesSystemJobTemplatesNotificationTemplatesErrorCreate(params *SystemJobTemplatesSystemJobTemplatesNotificationTemplatesErrorCreateParams) (*SystemJobTemplatesSystemJobTemplatesNotificationTemplatesErrorCreateCreated, error)

	SystemJobTemplatesSystemJobTemplatesNotificationTemplatesErrorList(params *SystemJobTemplatesSystemJobTemplatesNotificationTemplatesErrorListParams) (*SystemJobTemplatesSystemJobTemplatesNotificationTemplatesErrorListOK, error)

	SystemJobTemplatesSystemJobTemplatesNotificationTemplatesStartedCreate(params *SystemJobTemplatesSystemJobTemplatesNotificationTemplatesStartedCreateParams) (*SystemJobTemplatesSystemJobTemplatesNotificationTemplatesStartedCreateCreated, error)

	SystemJobTemplatesSystemJobTemplatesNotificationTemplatesStartedList(params *SystemJobTemplatesSystemJobTemplatesNotificationTemplatesStartedListParams) (*SystemJobTemplatesSystemJobTemplatesNotificationTemplatesStartedListOK, error)

	SystemJobTemplatesSystemJobTemplatesNotificationTemplatesSuccessCreate(params *SystemJobTemplatesSystemJobTemplatesNotificationTemplatesSuccessCreateParams) (*SystemJobTemplatesSystemJobTemplatesNotificationTemplatesSuccessCreateCreated, error)

	SystemJobTemplatesSystemJobTemplatesNotificationTemplatesSuccessList(params *SystemJobTemplatesSystemJobTemplatesNotificationTemplatesSuccessListParams) (*SystemJobTemplatesSystemJobTemplatesNotificationTemplatesSuccessListOK, error)

	SystemJobTemplatesSystemJobTemplatesRead(params *SystemJobTemplatesSystemJobTemplatesReadParams) (*SystemJobTemplatesSystemJobTemplatesReadOK, error)

	SystemJobTemplatesSystemJobTemplatesSchedulesCreate(params *SystemJobTemplatesSystemJobTemplatesSchedulesCreateParams) (*SystemJobTemplatesSystemJobTemplatesSchedulesCreateCreated, error)

	SystemJobTemplatesSystemJobTemplatesSchedulesList(params *SystemJobTemplatesSystemJobTemplatesSchedulesListParams) (*SystemJobTemplatesSystemJobTemplatesSchedulesListOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  SystemJobTemplatesSystemJobTemplatesJobsList lists system jobs for a system job template


Make a GET request to this resource to retrieve a list of
system jobs associated with the selected
system job template.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of system jobs
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more system job records.

## Results

Each system job data structure includes the following fields:

* `id`: Database ID for this system job. (integer)
* `type`: Data type for this system job. (choice)
* `url`: URL for this system job. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this system job was created. (datetime)
* `modified`: Timestamp when this system job was last modified. (datetime)
* `name`: Name of this system job. (string)
* `description`: Optional description of this system job. (string)
* `unified_job_template`:  (id)
* `launch_type`:  (choice)
    - `manual`: Manual
    - `relaunch`: Relaunch
    - `callback`: Callback
    - `scheduled`: Scheduled
    - `dependency`: Dependency
    - `workflow`: Workflow
    - `webhook`: Webhook
    - `sync`: Sync
    - `scm`: SCM Update
* `status`:  (choice)
    - `new`: New
    - `pending`: Pending
    - `waiting`: Waiting
    - `running`: Running
    - `successful`: Successful
    - `failed`: Failed
    - `error`: Error
    - `canceled`: Canceled
* `failed`:  (boolean)
* `started`: The date and time the job was queued for starting. (datetime)
* `finished`: The date and time the job finished execution. (datetime)
* `canceled_on`: The date and time when the cancel request was sent. (datetime)
* `elapsed`: Elapsed time in seconds that the job ran. (decimal)
* `job_explanation`: A status field to indicate the state of the job if it wasn&#39;t able to run and capture stdout (string)
* `execution_node`: The node the job executed on. (string)
* `system_job_template`:  (id)
* `job_type`:  (choice)
    - `""`: ---------
    - `cleanup_jobs`: Remove jobs older than a certain number of days
    - `cleanup_activitystream`: Remove activity stream entries older than a certain number of days
    - `cleanup_sessions`: Removes expired browser sessions from the database
    - `cleanup_tokens`: Removes expired OAuth 2 access tokens and refresh tokens
* `extra_vars`:  (string)
* `result_stdout`:  (field)



## Sorting

To specify that system jobs are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) SystemJobTemplatesSystemJobTemplatesJobsList(params *SystemJobTemplatesSystemJobTemplatesJobsListParams) (*SystemJobTemplatesSystemJobTemplatesJobsListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemJobTemplatesSystemJobTemplatesJobsListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Job Templates_system_job_templates_jobs_list",
		Method:             "GET",
		PathPattern:        "/api/v2/system_job_templates/{id}/jobs/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemJobTemplatesSystemJobTemplatesJobsListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemJobTemplatesSystemJobTemplatesJobsListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Job Templates_system_job_templates_jobs_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemJobTemplatesSystemJobTemplatesLaunchCreate launches a job template


Make a POST request to this resource to launch the system job template.

Variables specified inside of the parameter `extra_vars` are passed to the
system job task as command line parameters. These tasks can be run manually
on the host system via the `awx-manage` command.

For example on `cleanup_jobs` and `cleanup_activitystream`:

`{"extra_vars": {"days": 30}}`

Which will act on data older than 30 days.

For `cleanup_activitystream` and `cleanup_jobs` commands, providing
`"dry_run": true` inside of `extra_vars` will show items that will be
removed without deleting them.

Each individual system job task has its own default values, which are
applicable either when running it from the command line or launching its
system job template with empty `extra_vars`.

 - Defaults for `cleanup_activitystream`: days=90
 - Defaults for `cleanup_jobs`: days=90

If successful, the response status code will be 202.  If the job cannot be
launched, a 405 status code will be returned.
*/
func (a *Client) SystemJobTemplatesSystemJobTemplatesLaunchCreate(params *SystemJobTemplatesSystemJobTemplatesLaunchCreateParams) (*SystemJobTemplatesSystemJobTemplatesLaunchCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemJobTemplatesSystemJobTemplatesLaunchCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Job Templates_system_job_templates_launch_create",
		Method:             "POST",
		PathPattern:        "/api/v2/system_job_templates/{id}/launch/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemJobTemplatesSystemJobTemplatesLaunchCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemJobTemplatesSystemJobTemplatesLaunchCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Job Templates_system_job_templates_launch_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemJobTemplatesSystemJobTemplatesLaunchList launches a job template


Make a POST request to this resource to launch the system job template.

Variables specified inside of the parameter `extra_vars` are passed to the
system job task as command line parameters. These tasks can be run manually
on the host system via the `awx-manage` command.

For example on `cleanup_jobs` and `cleanup_activitystream`:

`{"extra_vars": {"days": 30}}`

Which will act on data older than 30 days.

For `cleanup_activitystream` and `cleanup_jobs` commands, providing
`"dry_run": true` inside of `extra_vars` will show items that will be
removed without deleting them.

Each individual system job task has its own default values, which are
applicable either when running it from the command line or launching its
system job template with empty `extra_vars`.

 - Defaults for `cleanup_activitystream`: days=90
 - Defaults for `cleanup_jobs`: days=90

If successful, the response status code will be 202.  If the job cannot be
launched, a 405 status code will be returned.
*/
func (a *Client) SystemJobTemplatesSystemJobTemplatesLaunchList(params *SystemJobTemplatesSystemJobTemplatesLaunchListParams) (*SystemJobTemplatesSystemJobTemplatesLaunchListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemJobTemplatesSystemJobTemplatesLaunchListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Job Templates_system_job_templates_launch_list",
		Method:             "GET",
		PathPattern:        "/api/v2/system_job_templates/{id}/launch/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemJobTemplatesSystemJobTemplatesLaunchListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemJobTemplatesSystemJobTemplatesLaunchListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Job Templates_system_job_templates_launch_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemJobTemplatesSystemJobTemplatesList lists system job templates


Make a GET request to this resource to retrieve the list of
system job templates.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of system job templates
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more system job template records.

## Results

Each system job template data structure includes the following fields:

* `id`: Database ID for this system job template. (integer)
* `type`: Data type for this system job template. (choice)
* `url`: URL for this system job template. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this system job template was created. (datetime)
* `modified`: Timestamp when this system job template was last modified. (datetime)
* `name`: Name of this system job template. (string)
* `description`: Optional description of this system job template. (string)
* `last_job_run`:  (datetime)
* `last_job_failed`:  (boolean)
* `next_job_run`:  (datetime)
* `status`:  (choice)
    - `new`: New
    - `pending`: Pending
    - `waiting`: Waiting
    - `running`: Running
    - `successful`: Successful
    - `failed`: Failed
    - `error`: Error
    - `canceled`: Canceled
    - `never updated`: Never Updated
    - `ok`: OK
    - `missing`: Missing
    - `none`: No External Source
    - `updating`: Updating
* `job_type`:  (choice)
    - `""`: ---------
    - `cleanup_jobs`: Remove jobs older than a certain number of days
    - `cleanup_activitystream`: Remove activity stream entries older than a certain number of days
    - `cleanup_sessions`: Removes expired browser sessions from the database
    - `cleanup_tokens`: Removes expired OAuth 2 access tokens and refresh tokens



## Sorting

To specify that system job templates are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) SystemJobTemplatesSystemJobTemplatesList(params *SystemJobTemplatesSystemJobTemplatesListParams) (*SystemJobTemplatesSystemJobTemplatesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemJobTemplatesSystemJobTemplatesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Job Templates_system_job_templates_list",
		Method:             "GET",
		PathPattern:        "/api/v2/system_job_templates/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemJobTemplatesSystemJobTemplatesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemJobTemplatesSystemJobTemplatesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Job Templates_system_job_templates_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemJobTemplatesSystemJobTemplatesNotificationTemplatesErrorCreate creates a notification template for a system job template


Make a POST request to this resource with the following notification template
fields to create a new notification template associated with this
system job template.









* `name`: Name of this notification template. (string, required)
* `description`: Optional description of this notification template. (string, default=`""`)
* `organization`:  (id, required)
* `notification_type`:  (choice, required)
    - `email`: Email
    - `grafana`: Grafana
    - `hipchat`: HipChat
    - `irc`: IRC
    - `mattermost`: Mattermost
    - `pagerduty`: Pagerduty
    - `rocketchat`: Rocket.Chat
    - `slack`: Slack
    - `twilio`: Twilio
    - `webhook`: Webhook
* `notification_configuration`:  (json, default=`{}`)
* `messages`: Optional custom messages for notification template. (json, default=`{&#39;started&#39;: None, &#39;success&#39;: None, &#39;error&#39;: None, &#39;workflow_approval&#39;: None}`)








# Add Notification Templates for a System Job Template:

Make a POST request to this resource with only an `id` field to associate an
existing notification template with this system job template.

# Remove Notification Templates from this System Job Template:

Make a POST request to this resource with `id` and `disassociate` fields to
remove the notification template from this system job template
 without deleting the notification template.
*/
func (a *Client) SystemJobTemplatesSystemJobTemplatesNotificationTemplatesErrorCreate(params *SystemJobTemplatesSystemJobTemplatesNotificationTemplatesErrorCreateParams) (*SystemJobTemplatesSystemJobTemplatesNotificationTemplatesErrorCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemJobTemplatesSystemJobTemplatesNotificationTemplatesErrorCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Job Templates_system_job_templates_notification_templates_error_create",
		Method:             "POST",
		PathPattern:        "/api/v2/system_job_templates/{id}/notification_templates_error/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemJobTemplatesSystemJobTemplatesNotificationTemplatesErrorCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemJobTemplatesSystemJobTemplatesNotificationTemplatesErrorCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Job Templates_system_job_templates_notification_templates_error_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemJobTemplatesSystemJobTemplatesNotificationTemplatesErrorList lists notification templates for a system job template


Make a GET request to this resource to retrieve a list of
notification templates associated with the selected
system job template.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of notification templates
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more notification template records.

## Results

Each notification template data structure includes the following fields:

* `id`: Database ID for this notification template. (integer)
* `type`: Data type for this notification template. (choice)
* `url`: URL for this notification template. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this notification template was created. (datetime)
* `modified`: Timestamp when this notification template was last modified. (datetime)
* `name`: Name of this notification template. (string)
* `description`: Optional description of this notification template. (string)
* `organization`:  (id)
* `notification_type`:  (choice)
    - `email`: Email
    - `grafana`: Grafana
    - `hipchat`: HipChat
    - `irc`: IRC
    - `mattermost`: Mattermost
    - `pagerduty`: Pagerduty
    - `rocketchat`: Rocket.Chat
    - `slack`: Slack
    - `twilio`: Twilio
    - `webhook`: Webhook
* `notification_configuration`:  (json)
* `messages`: Optional custom messages for notification template. (json)



## Sorting

To specify that notification templates are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) SystemJobTemplatesSystemJobTemplatesNotificationTemplatesErrorList(params *SystemJobTemplatesSystemJobTemplatesNotificationTemplatesErrorListParams) (*SystemJobTemplatesSystemJobTemplatesNotificationTemplatesErrorListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemJobTemplatesSystemJobTemplatesNotificationTemplatesErrorListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Job Templates_system_job_templates_notification_templates_error_list",
		Method:             "GET",
		PathPattern:        "/api/v2/system_job_templates/{id}/notification_templates_error/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemJobTemplatesSystemJobTemplatesNotificationTemplatesErrorListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemJobTemplatesSystemJobTemplatesNotificationTemplatesErrorListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Job Templates_system_job_templates_notification_templates_error_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemJobTemplatesSystemJobTemplatesNotificationTemplatesStartedCreate creates a notification template for a system job template


Make a POST request to this resource with the following notification template
fields to create a new notification template associated with this
system job template.









* `name`: Name of this notification template. (string, required)
* `description`: Optional description of this notification template. (string, default=`""`)
* `organization`:  (id, required)
* `notification_type`:  (choice, required)
    - `email`: Email
    - `grafana`: Grafana
    - `hipchat`: HipChat
    - `irc`: IRC
    - `mattermost`: Mattermost
    - `pagerduty`: Pagerduty
    - `rocketchat`: Rocket.Chat
    - `slack`: Slack
    - `twilio`: Twilio
    - `webhook`: Webhook
* `notification_configuration`:  (json, default=`{}`)
* `messages`: Optional custom messages for notification template. (json, default=`{&#39;started&#39;: None, &#39;success&#39;: None, &#39;error&#39;: None, &#39;workflow_approval&#39;: None}`)








# Add Notification Templates for a System Job Template:

Make a POST request to this resource with only an `id` field to associate an
existing notification template with this system job template.

# Remove Notification Templates from this System Job Template:

Make a POST request to this resource with `id` and `disassociate` fields to
remove the notification template from this system job template
 without deleting the notification template.
*/
func (a *Client) SystemJobTemplatesSystemJobTemplatesNotificationTemplatesStartedCreate(params *SystemJobTemplatesSystemJobTemplatesNotificationTemplatesStartedCreateParams) (*SystemJobTemplatesSystemJobTemplatesNotificationTemplatesStartedCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemJobTemplatesSystemJobTemplatesNotificationTemplatesStartedCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Job Templates_system_job_templates_notification_templates_started_create",
		Method:             "POST",
		PathPattern:        "/api/v2/system_job_templates/{id}/notification_templates_started/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemJobTemplatesSystemJobTemplatesNotificationTemplatesStartedCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemJobTemplatesSystemJobTemplatesNotificationTemplatesStartedCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Job Templates_system_job_templates_notification_templates_started_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemJobTemplatesSystemJobTemplatesNotificationTemplatesStartedList lists notification templates for a system job template


Make a GET request to this resource to retrieve a list of
notification templates associated with the selected
system job template.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of notification templates
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more notification template records.

## Results

Each notification template data structure includes the following fields:

* `id`: Database ID for this notification template. (integer)
* `type`: Data type for this notification template. (choice)
* `url`: URL for this notification template. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this notification template was created. (datetime)
* `modified`: Timestamp when this notification template was last modified. (datetime)
* `name`: Name of this notification template. (string)
* `description`: Optional description of this notification template. (string)
* `organization`:  (id)
* `notification_type`:  (choice)
    - `email`: Email
    - `grafana`: Grafana
    - `hipchat`: HipChat
    - `irc`: IRC
    - `mattermost`: Mattermost
    - `pagerduty`: Pagerduty
    - `rocketchat`: Rocket.Chat
    - `slack`: Slack
    - `twilio`: Twilio
    - `webhook`: Webhook
* `notification_configuration`:  (json)
* `messages`: Optional custom messages for notification template. (json)



## Sorting

To specify that notification templates are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) SystemJobTemplatesSystemJobTemplatesNotificationTemplatesStartedList(params *SystemJobTemplatesSystemJobTemplatesNotificationTemplatesStartedListParams) (*SystemJobTemplatesSystemJobTemplatesNotificationTemplatesStartedListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemJobTemplatesSystemJobTemplatesNotificationTemplatesStartedListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Job Templates_system_job_templates_notification_templates_started_list",
		Method:             "GET",
		PathPattern:        "/api/v2/system_job_templates/{id}/notification_templates_started/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemJobTemplatesSystemJobTemplatesNotificationTemplatesStartedListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemJobTemplatesSystemJobTemplatesNotificationTemplatesStartedListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Job Templates_system_job_templates_notification_templates_started_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemJobTemplatesSystemJobTemplatesNotificationTemplatesSuccessCreate creates a notification template for a system job template


Make a POST request to this resource with the following notification template
fields to create a new notification template associated with this
system job template.









* `name`: Name of this notification template. (string, required)
* `description`: Optional description of this notification template. (string, default=`""`)
* `organization`:  (id, required)
* `notification_type`:  (choice, required)
    - `email`: Email
    - `grafana`: Grafana
    - `hipchat`: HipChat
    - `irc`: IRC
    - `mattermost`: Mattermost
    - `pagerduty`: Pagerduty
    - `rocketchat`: Rocket.Chat
    - `slack`: Slack
    - `twilio`: Twilio
    - `webhook`: Webhook
* `notification_configuration`:  (json, default=`{}`)
* `messages`: Optional custom messages for notification template. (json, default=`{&#39;started&#39;: None, &#39;success&#39;: None, &#39;error&#39;: None, &#39;workflow_approval&#39;: None}`)








# Add Notification Templates for a System Job Template:

Make a POST request to this resource with only an `id` field to associate an
existing notification template with this system job template.

# Remove Notification Templates from this System Job Template:

Make a POST request to this resource with `id` and `disassociate` fields to
remove the notification template from this system job template
 without deleting the notification template.
*/
func (a *Client) SystemJobTemplatesSystemJobTemplatesNotificationTemplatesSuccessCreate(params *SystemJobTemplatesSystemJobTemplatesNotificationTemplatesSuccessCreateParams) (*SystemJobTemplatesSystemJobTemplatesNotificationTemplatesSuccessCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemJobTemplatesSystemJobTemplatesNotificationTemplatesSuccessCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Job Templates_system_job_templates_notification_templates_success_create",
		Method:             "POST",
		PathPattern:        "/api/v2/system_job_templates/{id}/notification_templates_success/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemJobTemplatesSystemJobTemplatesNotificationTemplatesSuccessCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemJobTemplatesSystemJobTemplatesNotificationTemplatesSuccessCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Job Templates_system_job_templates_notification_templates_success_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemJobTemplatesSystemJobTemplatesNotificationTemplatesSuccessList lists notification templates for a system job template


Make a GET request to this resource to retrieve a list of
notification templates associated with the selected
system job template.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of notification templates
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more notification template records.

## Results

Each notification template data structure includes the following fields:

* `id`: Database ID for this notification template. (integer)
* `type`: Data type for this notification template. (choice)
* `url`: URL for this notification template. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this notification template was created. (datetime)
* `modified`: Timestamp when this notification template was last modified. (datetime)
* `name`: Name of this notification template. (string)
* `description`: Optional description of this notification template. (string)
* `organization`:  (id)
* `notification_type`:  (choice)
    - `email`: Email
    - `grafana`: Grafana
    - `hipchat`: HipChat
    - `irc`: IRC
    - `mattermost`: Mattermost
    - `pagerduty`: Pagerduty
    - `rocketchat`: Rocket.Chat
    - `slack`: Slack
    - `twilio`: Twilio
    - `webhook`: Webhook
* `notification_configuration`:  (json)
* `messages`: Optional custom messages for notification template. (json)



## Sorting

To specify that notification templates are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) SystemJobTemplatesSystemJobTemplatesNotificationTemplatesSuccessList(params *SystemJobTemplatesSystemJobTemplatesNotificationTemplatesSuccessListParams) (*SystemJobTemplatesSystemJobTemplatesNotificationTemplatesSuccessListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemJobTemplatesSystemJobTemplatesNotificationTemplatesSuccessListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Job Templates_system_job_templates_notification_templates_success_list",
		Method:             "GET",
		PathPattern:        "/api/v2/system_job_templates/{id}/notification_templates_success/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemJobTemplatesSystemJobTemplatesNotificationTemplatesSuccessListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemJobTemplatesSystemJobTemplatesNotificationTemplatesSuccessListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Job Templates_system_job_templates_notification_templates_success_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemJobTemplatesSystemJobTemplatesRead retrieves a system job template


Make GET request to this resource to retrieve a single system job template
record containing the following fields:

* `id`: Database ID for this system job template. (integer)
* `type`: Data type for this system job template. (choice)
* `url`: URL for this system job template. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this system job template was created. (datetime)
* `modified`: Timestamp when this system job template was last modified. (datetime)
* `name`: Name of this system job template. (string)
* `description`: Optional description of this system job template. (string)
* `last_job_run`:  (datetime)
* `last_job_failed`:  (boolean)
* `next_job_run`:  (datetime)
* `status`:  (choice)
    - `new`: New
    - `pending`: Pending
    - `waiting`: Waiting
    - `running`: Running
    - `successful`: Successful
    - `failed`: Failed
    - `error`: Error
    - `canceled`: Canceled
    - `never updated`: Never Updated
    - `ok`: OK
    - `missing`: Missing
    - `none`: No External Source
    - `updating`: Updating
* `job_type`:  (choice)
    - `""`: ---------
    - `cleanup_jobs`: Remove jobs older than a certain number of days
    - `cleanup_activitystream`: Remove activity stream entries older than a certain number of days
    - `cleanup_sessions`: Removes expired browser sessions from the database
    - `cleanup_tokens`: Removes expired OAuth 2 access tokens and refresh tokens
*/
func (a *Client) SystemJobTemplatesSystemJobTemplatesRead(params *SystemJobTemplatesSystemJobTemplatesReadParams) (*SystemJobTemplatesSystemJobTemplatesReadOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemJobTemplatesSystemJobTemplatesReadParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Job Templates_system_job_templates_read",
		Method:             "GET",
		PathPattern:        "/api/v2/system_job_templates/{id}/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemJobTemplatesSystemJobTemplatesReadReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemJobTemplatesSystemJobTemplatesReadOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Job Templates_system_job_templates_read: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemJobTemplatesSystemJobTemplatesSchedulesCreate creates a schedule for a system job template


Make a POST request to this resource with the following schedule
fields to create a new schedule associated with this
system job template.


* `rrule`: A value representing the schedules iCal recurrence rule. (string, required)







* `name`: Name of this schedule. (string, required)
* `description`: Optional description of this schedule. (string, default=`""`)
* `extra_data`:  (json, default=`{}`)
* `inventory`: Inventory applied as a prompt, assuming job template prompts for inventory (id, default=``)
* `scm_branch`:  (string, default=`""`)
* `job_type`:  (choice)
    - `None`: --------- (default)
    - `""`: ---------
    - `run`: Run
    - `check`: Check
* `job_tags`:  (string, default=`""`)
* `skip_tags`:  (string, default=`""`)
* `limit`:  (string, default=`""`)
* `diff_mode`:  (boolean, default=`None`)
* `verbosity`:  (choice)
    - `None`: --------- (default)
    - `0`: 0 (Normal)
    - `1`: 1 (Verbose)
    - `2`: 2 (More Verbose)
    - `3`: 3 (Debug)
    - `4`: 4 (Connection Debug)
    - `5`: 5 (WinRM Debug)

* `enabled`: Enables processing of this schedule. (boolean, default=`True`)
*/
func (a *Client) SystemJobTemplatesSystemJobTemplatesSchedulesCreate(params *SystemJobTemplatesSystemJobTemplatesSchedulesCreateParams) (*SystemJobTemplatesSystemJobTemplatesSchedulesCreateCreated, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemJobTemplatesSystemJobTemplatesSchedulesCreateParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Job Templates_system_job_templates_schedules_create",
		Method:             "POST",
		PathPattern:        "/api/v2/system_job_templates/{id}/schedules/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemJobTemplatesSystemJobTemplatesSchedulesCreateReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemJobTemplatesSystemJobTemplatesSchedulesCreateCreated)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Job Templates_system_job_templates_schedules_create: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  SystemJobTemplatesSystemJobTemplatesSchedulesList lists schedules for a system job template


Make a GET request to this resource to retrieve a list of
schedules associated with the selected
system job template.

The resulting data structure contains:

    {
        "count": 99,
        "next": null,
        "previous": null,
        "results": [
            ...
        ]
    }

The `count` field indicates the total number of schedules
found for the given query.  The `next` and `previous` fields provides links to
additional results if there are more than will fit on a single page.  The
`results` list contains zero or more schedule records.

## Results

Each schedule data structure includes the following fields:

* `rrule`: A value representing the schedules iCal recurrence rule. (string)
* `id`: Database ID for this schedule. (integer)
* `type`: Data type for this schedule. (choice)
* `url`: URL for this schedule. (string)
* `related`: Data structure with URLs of related resources. (object)
* `summary_fields`: Data structure with name/description for related resources.  The output for some objects may be limited for performance reasons. (object)
* `created`: Timestamp when this schedule was created. (datetime)
* `modified`: Timestamp when this schedule was last modified. (datetime)
* `name`: Name of this schedule. (string)
* `description`: Optional description of this schedule. (string)
* `extra_data`:  (json)
* `inventory`: Inventory applied as a prompt, assuming job template prompts for inventory (id)
* `scm_branch`:  (string)
* `job_type`:  (choice)
    - `None`: ---------
    - `""`: ---------
    - `run`: Run
    - `check`: Check
* `job_tags`:  (string)
* `skip_tags`:  (string)
* `limit`:  (string)
* `diff_mode`:  (boolean)
* `verbosity`:  (choice)
    - `None`: ---------
    - `0`: 0 (Normal)
    - `1`: 1 (Verbose)
    - `2`: 2 (More Verbose)
    - `3`: 3 (Debug)
    - `4`: 4 (Connection Debug)
    - `5`: 5 (WinRM Debug)
* `unified_job_template`:  (id)
* `enabled`: Enables processing of this schedule. (boolean)
* `dtstart`: The first occurrence of the schedule occurs on or after this time. (datetime)
* `dtend`: The last occurrence of the schedule occurs before this time, aftewards the schedule expires. (datetime)
* `next_run`: The next time that the scheduled action will run. (datetime)
* `timezone`:  (field)
* `until`:  (field)



## Sorting

To specify that schedules are returned in a particular
order, use the `order_by` query string parameter on the GET request.

    ?order_by=name

Prefix the field name with a dash `-` to sort in reverse:

    ?order_by=-name

Multiple sorting fields may be specified by separating the field names with a
comma `,`:

    ?order_by=name,some_other_field

## Pagination

Use the `page_size` query string parameter to change the number of results
returned for each request.  Use the `page` query string parameter to retrieve
a particular page of results.

    ?page_size=100&page=2

The `previous` and `next` links returned with the results will set these query
string parameters automatically.

## Searching

Use the `search` query string parameter to perform a case-insensitive search
within all designated text fields of a model.

    ?search=findme

(_Added in Ansible Tower 3.1.0_) Search across related fields:

    ?related__search=findme
*/
func (a *Client) SystemJobTemplatesSystemJobTemplatesSchedulesList(params *SystemJobTemplatesSystemJobTemplatesSchedulesListParams) (*SystemJobTemplatesSystemJobTemplatesSchedulesListOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewSystemJobTemplatesSystemJobTemplatesSchedulesListParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "System Job Templates_system_job_templates_schedules_list",
		Method:             "GET",
		PathPattern:        "/api/v2/system_job_templates/{id}/schedules/",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &SystemJobTemplatesSystemJobTemplatesSchedulesListReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*SystemJobTemplatesSystemJobTemplatesSchedulesListOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for System Job Templates_system_job_templates_schedules_list: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
